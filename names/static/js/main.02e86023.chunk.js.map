{"version":3,"sources":["App/assets/backArrow.svg","App/routes/Login/assets/cosmWasmLogo.svg","App/routes/OperationResult/assets/failIcon.svg","App/routes/OperationResult/assets/successIcon.svg","../../src/service/error.tsx","../../src/service/sdk.ts","../../src/service/wallet.tsx","../../src/service/account.tsx","../../src/service/ProtectedSwitch.tsx","../../src/utils/currency.ts","../../src/utils/errors.ts","../../src/components/layout/Center/component.tsx","../../src/components/layout/Center/style.ts","../../src/components/layout/Stack/component.tsx","../../src/components/layout/Stack/style.ts","../../src/components/layout/PageLayout/component.tsx","../../src/components/layout/PageLayout/style.ts","../../src/components/logic/BackButton/component.tsx","../../src/components/logic/BackButton/style.ts","../../src/components/logic/Loading/style.ts","../../src/components/logic/Loading/index.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/components/logic/Login/style.ts","../../src/components/logic/Login/index.tsx","../../src/config.ts","../../src/components/logic/OperationResult/style.ts","../../src/components/logic/OperationResult/index.tsx","../../src/components/logic/YourAccount/style.ts","../../src/components/logic/YourAccount/index.tsx","../../src/theme/GlobalStyle/GlobalAntOverride.ts","../../src/theme/GlobalStyle/GlobalColors.ts","../../src/theme/GlobalStyle/GlobalFonts.ts","../../src/theme/GlobalStyle/GlobalReset.ts","../../src/theme/GlobalStyle/GlobalSpacing.ts","../../src/theme/GlobalStyle/index.tsx","config.ts","App/forms/Search.tsx","App/forms/validationSchemas.ts","App/routes/Contract/components/FormSearchName.tsx","App/routes/Contract/components/SearchResult/style.ts","App/routes/Contract/components/SearchResult/index.tsx","App/paths.ts","App/routes/Contract/style.ts","App/routes/Contract/index.tsx","App/routes/Home/style.ts","App/routes/Home/index.tsx","App/routes/Login/index.tsx","App/routes/OperationResult/index.tsx","App/routes/Transfer/FormTransferName.tsx","App/routes/Transfer/style.ts","App/routes/Transfer/index.tsx","App/index.tsx","index.tsx"],"names":["module","exports","defaultContext","setError","clearError","ErrorContext","React","useError","ErrorProvider","children","error","context","value","loadKeplrWallet","anyWindow","Error","e","loadLedgerWallet","TransportWebUSB","ledgerTransport","hdPaths","makeCosmoshubPath","prefix","addressPrefix","loadOrCreateWallet","mnemonic","key","loaded","localStorage","generated","Bip39","Random","loadOrCreateMnemonic","hdPath","Secp256k1HdWallet","throwNotInitialized","initialized","address","config","init","clear","getSigner","getClient","getStakingClient","changeConfig","changeSigner","CosmWasmContext","useSdk","SdkProvider","configProp","useState","setConfig","signer","setSigner","client","setClient","contextWithInit","setValue","useEffect","firstAddress","gasPrice","GasPrice","upload","exec","migrate","send","changeAdmin","createClient","apiUrl","stakingClient","faucetUrl","acct","faucet","refreshAccount","AccountContext","useAccount","AccountProvider","sdk","account","ProtectedSwitch","authPath","location","to","pathname","state","redirectPathname","redirectState","undefined","printableCoin","coin","ticker","Decimal","getErrorFromStackTrace","stackTrace","stringStackTrace","match","Center","tag","Tag","props","StyledCenter","styled","Stack","StyledStack","PageLayout","StyledPageLayout","BackButton","icon","path","history","useHistory","goBack","src","alt","onClick","StyledBackButton","StyledSpin","spinIndicator","style","fontSize","spin","Loading","tip","loadingText","indicator","Symbol","_catch","body","recover","result","Text","Typography","MainStack","WelcomeStack","LightText","ErrorText","Title","disableLedgerLogin","anyNavigator","Login","loadWallet","setInitializing","console","pathAfterLogin","appName","appLogo","restProps","initializing","level","type","initBrowser","disabled","initLedger","initKeplr","chainId","chainName","rpc","rest","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMinimalDenom","coinDecimals","fractionalDigits","feeCurrencies","stakeCurrency","gasPriceStep","low","average","high","bip44","coinType","configKeplr","ResultText","OperationResult","defaultButtonAction","successIcon","failIcon","success","message","customButtonText","customButtonActionPath","customButtonActionState","buttonText","buttonAction","getResultContent","chosenButtonText","chosenButtonAction","AccountStack","YourAccount","hideTitle","hideBalance","balance","printableBalance","copyToClipboard","GlobalAntOverride","createGlobalStyle","GlobalColors","GlobalFonts","GlobalReset","GlobalSpacing","GlobalStyle","configs","getAppConfig","local","rpcUrl","httpUrl","feeToken","stakingToken","coinMap","ucosm","denom","uatom","codeId","heldernet","ustake","TypedInput","name","validate","fast","onChange","$onChange","onBlur","$onBlur","ref","field","event","Search","SearchValidationSchema","Yup","shape","min","required","regexStartsWithPrefix","RegExp","TransferValidationSchema","matches","length","FormSearchName","initialName","setSearchedName","initialValues","validationSchema","onSubmit","values","formikProps","placeholder","enterButton","onSearch","isValid","ResultStack","BlackText","SearchResult","contractLabel","contractAddress","setLoading","fullContractPath","accountProvider","nameOwnerAddress","setNameOwnerAddress","prices","setPrices","queryContractSmart","resolve_record","then","response","catch","toString","includes","purchase","purchase_price","transfer","transfer_price","actionText","action","myAddress","tryRegister","navigateToTransfer","getResult","purchasePrice","payment","execute","register","metadata","push","BackSearchResultStack","SearchStack","Contract","label","useParams","loading","searchedName","backArrowIcon","newName","toLowerCase","ContractStack","Home","contracts","setContracts","getContracts","map","cosmWasmLogo","goToHome","FormTransferName","setNewOwnerAddress","transferButtonText","transferButtonAction","target","dirty","BackTransferStack","TransferStack","Transfer","newOwnerAddress","transferPrice","setTransferPrice","App","basename","process","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02e86023.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backArrow.9849fc2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/cosmWasmLogo.15dccd19.svg\";","module.exports = __webpack_public_path__ + \"static/media/failIcon.71513020.svg\";","module.exports = __webpack_public_path__ + \"static/media/successIcon.2e305b66.svg\";","import * as React from \"react\";\n\ninterface ErrorContextType {\n  readonly error?: string;\n  readonly setError: (error: string) => void;\n  readonly clearError: () => void;\n}\n\nconst defaultContext: ErrorContextType = {\n  setError: () => {\n    return;\n  },\n  clearError: () => {\n    return;\n  },\n};\n\nconst ErrorContext = React.createContext<ErrorContextType>(defaultContext);\n\nexport const useError = (): ErrorContextType => React.useContext(ErrorContext);\n\nexport function ErrorProvider({ children }: React.HTMLAttributes<HTMLOrSVGElement>): JSX.Element {\n  const [error, setError] = React.useState<string>();\n\n  const context: ErrorContextType = {\n    error: error,\n    setError: setError,\n    clearError: () => {\n      setError(undefined);\n    },\n  };\n\n  return <ErrorContext.Provider value={context}>{children}</ErrorContext.Provider>;\n}\n","import { CosmWasmFeeTable, SigningCosmWasmClient } from \"@cosmjs/cosmwasm\";\nimport { Bip39, Random } from \"@cosmjs/crypto\";\nimport {\n  GasLimits,\n  GasPrice,\n  LcdClient,\n  makeCosmoshubPath,\n  OfflineSigner,\n  Secp256k1HdWallet,\n  setupStakingExtension,\n  StakingExtension,\n} from \"@cosmjs/launchpad\";\nimport { LedgerSigner } from \"@cosmjs/launchpad-ledger\";\nimport TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\nimport { AppConfig } from \"../config\";\n\n// generateMnemonic will give you a fresh mnemonic\n// it is up to the app to store this somewhere\nexport function generateMnemonic(): string {\n  return Bip39.encode(Random.getBytes(16)).toString();\n}\n\n// some code that will only work in a browser...\nexport function loadOrCreateMnemonic(): string {\n  const key = \"burner-wallet\";\n  const loaded = localStorage.getItem(key);\n  if (loaded) {\n    return loaded;\n  }\n  const generated = generateMnemonic();\n  localStorage.setItem(key, generated);\n  return generated;\n}\n\nexport type WalletLoader = (chainId: string, addressPrefix?: string) => Promise<OfflineSigner>;\n\nexport async function loadOrCreateWallet(_chainId: string, addressPrefix?: string): Promise<OfflineSigner> {\n  const mnemonic = loadOrCreateMnemonic();\n  const hdPath = makeCosmoshubPath(0);\n  const wallet = await Secp256k1HdWallet.fromMnemonic(mnemonic, hdPath, addressPrefix);\n  return wallet;\n}\n\nexport async function loadLedgerWallet(_chainId: string, addressPrefix?: string): Promise<OfflineSigner> {\n  const interactiveTimeout = 120_000;\n  const ledgerTransport = await TransportWebUSB.create(interactiveTimeout, interactiveTimeout);\n\n  return new LedgerSigner(ledgerTransport, { hdPaths: [makeCosmoshubPath(0)], prefix: addressPrefix });\n}\n\nexport async function loadKeplrWallet(chainId: string): Promise<OfflineSigner> {\n  const anyWindow: any = window;\n  if (!anyWindow.getOfflineSigner) {\n    throw new Error(\"Keplr extension is not available\");\n  }\n  return anyWindow.getOfflineSigner(chainId);\n}\n\n// this creates a new connection to a server at URL,\n// using a signing keyring generated from the given mnemonic\nexport async function createClient(config: AppConfig, signer: OfflineSigner): Promise<SigningCosmWasmClient> {\n  const firstAddress = (await signer.getAccounts())[0].address;\n  const gasPrice = GasPrice.fromString(`${config.gasPrice}${config.feeToken}`);\n  const gasLimits: GasLimits<CosmWasmFeeTable> = {\n    upload: 1500000,\n    init: 600000,\n    exec: 400000,\n    migrate: 600000,\n    send: 80000,\n    changeAdmin: 80000,\n  };\n\n  return new SigningCosmWasmClient(config.httpUrl, firstAddress, signer, gasPrice, gasLimits);\n}\n\nexport function createStakingClient(apiUrl: string): LcdClient & StakingExtension {\n  return LcdClient.withExtensions({ apiUrl }, setupStakingExtension);\n}\n","import { SigningCosmWasmClient } from \"@cosmjs/cosmwasm\";\nimport { FaucetClient } from \"@cosmjs/faucet-client\";\nimport { LcdClient, OfflineSigner, StakingExtension } from \"@cosmjs/launchpad\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { AppConfig } from \"../config\";\nimport { createClient, createStakingClient } from \"./sdk\";\n\ninterface CosmWasmContextType {\n  readonly initialized: boolean;\n  readonly address: string;\n  readonly config: Partial<AppConfig>;\n  readonly init: (signer: OfflineSigner) => void;\n  readonly clear: () => void;\n  readonly getSigner: () => OfflineSigner;\n  readonly getClient: () => SigningCosmWasmClient;\n  readonly getStakingClient: () => LcdClient & StakingExtension;\n  readonly changeConfig: (updates: Partial<AppConfig>) => void;\n  readonly changeSigner: (newSigner: OfflineSigner) => void;\n}\n\nfunction throwNotInitialized(): any {\n  throw new Error(\"Not yet initialized\");\n}\n\nconst defaultContext: CosmWasmContextType = {\n  initialized: false,\n  address: \"\",\n  config: {},\n  init: throwNotInitialized,\n  clear: throwNotInitialized,\n  getSigner: throwNotInitialized,\n  getClient: throwNotInitialized,\n  getStakingClient: throwNotInitialized,\n  changeConfig: throwNotInitialized,\n  changeSigner: throwNotInitialized,\n};\n\nconst CosmWasmContext = React.createContext<CosmWasmContextType>(defaultContext);\n\nexport const useSdk = (): CosmWasmContextType => React.useContext(CosmWasmContext);\n\ninterface SdkProviderProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly config: AppConfig;\n}\n\nexport function SdkProvider({ config: configProp, children }: SdkProviderProps): JSX.Element {\n  const [config, setConfig] = useState(configProp);\n  const [signer, setSigner] = useState<OfflineSigner>();\n  const [client, setClient] = useState<SigningCosmWasmClient>();\n\n  const contextWithInit = { ...defaultContext, init: setSigner };\n  const [value, setValue] = useState<CosmWasmContextType>(contextWithInit);\n\n  function clear() {\n    setValue({ ...contextWithInit });\n  }\n\n  function changeConfig(updates: Partial<AppConfig>) {\n    setConfig((config) => ({ ...config, ...updates }));\n  }\n\n  useEffect(() => {\n    if (!signer) return;\n\n    (async function updateClient() {\n      const client = await createClient(config, signer);\n      setClient(client);\n    })();\n  }, [signer, config]);\n\n  useEffect(() => {\n    if (!signer || !client) return;\n\n    const address = client.senderAddress;\n    const stakingClient = createStakingClient(config.httpUrl);\n\n    (async function updateValue() {\n      // load from faucet if needed\n      if (config.faucetUrl) {\n        const acct = await client.getAccount();\n\n        if (!acct?.balance?.length) {\n          const faucet = new FaucetClient(config.faucetUrl);\n          await faucet.credit(address, config.feeToken);\n        }\n      }\n\n      setValue({\n        initialized: true,\n        address,\n        config,\n        init: () => {},\n        clear,\n        getSigner: () => signer,\n        getClient: () => client,\n        getStakingClient: () => stakingClient,\n        changeConfig,\n        changeSigner: setSigner,\n      });\n    })();\n  }, [client]);\n\n  return <CosmWasmContext.Provider value={value}>{children}</CosmWasmContext.Provider>;\n}\n","import { Account } from \"@cosmjs/launchpad\";\nimport * as React from \"react\";\nimport { useError } from \"./error\";\nimport { useSdk } from \"./wallet\";\n\ninterface State {\n  readonly account?: Account;\n}\n\ninterface AccountContextType extends State {\n  readonly refreshAccount: () => void;\n}\n\nconst defaultContext: AccountContextType = {\n  refreshAccount: () => {\n    return;\n  },\n};\n\nconst AccountContext = React.createContext<AccountContextType>(defaultContext);\n\nexport const useAccount = (): AccountContextType => React.useContext(AccountContext);\n\nexport function AccountProvider({ children }: React.HTMLAttributes<HTMLOrSVGElement>): JSX.Element {\n  const { setError } = useError();\n  const sdk = useSdk();\n\n  const [value, setValue] = React.useState<State>({});\n\n  function refreshAccount() {\n    if (sdk.initialized) {\n      sdk\n        .getClient()\n        .getAccount()\n        .then((account) => setValue({ account }))\n        .catch(setError);\n    }\n  }\n\n  // this should just be called once on startup\n  React.useEffect(refreshAccount, [sdk, setError]);\n\n  const context: AccountContextType = {\n    refreshAccount,\n    account: value.account,\n  };\n\n  return <AccountContext.Provider value={context}>{children}</AccountContext.Provider>;\n}\n","import React from \"react\";\nimport { Redirect, Switch, SwitchProps } from \"react-router-dom\";\nimport { useSdk } from \"./wallet\";\n\nexport interface RedirectLocation {\n  readonly redirectPathname: string;\n  readonly redirectState: any;\n}\n\ninterface ProtectedSwitchProps extends SwitchProps {\n  readonly authPath: string;\n}\n\nexport function ProtectedSwitch({ authPath, children, location }: ProtectedSwitchProps): JSX.Element {\n  const { initialized } = useSdk();\n\n  return initialized ? (\n    <Switch location={location}>{children}</Switch>\n  ) : (\n    <Redirect\n      to={{\n        pathname: authPath,\n        state: location ? { redirectPathname: location.pathname, redirectState: location.state } : undefined,\n      }}\n    />\n  );\n}\n","import { Coin } from \"@cosmjs/launchpad\";\nimport { Decimal } from \"@cosmjs/math\";\n\n// NARROW NO-BREAK SPACE (U+202F)\nconst thinSpace = \"\\u202F\";\n\nexport function printableCoin(coin?: Coin): string {\n  if (!coin) {\n    return \"0\";\n  }\n  if (coin.denom.startsWith(\"u\")) {\n    const ticker = coin.denom.slice(1).toUpperCase();\n    return Decimal.fromAtomics(coin.amount, 6).toString() + thinSpace + ticker;\n  } else {\n    return coin.amount + thinSpace + coin.denom;\n  }\n}\n\nexport function printableBalance(balance?: readonly Coin[]): string {\n  if (!balance || balance.length === 0) return \"–\";\n  return balance.map(printableCoin).join(\", \");\n}\n\nexport interface MappedCoin {\n  readonly denom: string;\n  readonly fractionalDigits: number;\n}\n\nexport interface CoinMap {\n  readonly [key: string]: MappedCoin;\n}\n\nexport function nativeCoinToDisplay(coin: Coin, coinMap: CoinMap): Coin {\n  if (!coinMap) return coin;\n\n  const coinToDisplay = coinMap[coin.denom];\n  if (!coinToDisplay) return coin;\n\n  const amountToDisplay = Decimal.fromAtomics(coin.amount, coinToDisplay.fractionalDigits).toString();\n\n  return { denom: coinToDisplay.denom, amount: amountToDisplay };\n}\n\n// display amount is eg \"12.0346\", return is in native tokens\n// with 6 fractional digits, this would be eg. \"12034600\"\nexport function displayAmountToNative(\n  amountToDisplay: string,\n  coinMap: CoinMap,\n  nativeDenom: string,\n): string {\n  const fractionalDigits = coinMap[nativeDenom]?.fractionalDigits;\n  if (fractionalDigits) {\n    // use https://github.com/CosmWasm/cosmjs/blob/v0.22.2/packages/math/src/decimal.ts\n    const decimalAmount = Decimal.fromUserInput(amountToDisplay, fractionalDigits);\n    return decimalAmount.atomics;\n  }\n\n  return amountToDisplay;\n}\n","// Get string error from operation stack trace. Matches last line but removes last \"message index\" part\nexport function getErrorFromStackTrace(stackTrace: any): string {\n  const stringStackTrace = (stackTrace || \"\").toString();\n  const match = stringStackTrace.match(/.*\\s*$/g)[0];\n  const error = match.substring(0, match.lastIndexOf(\";\"));\n\n  return error || stringStackTrace;\n}\n","import * as React from \"react\";\n\nexport interface CenterProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly tag?: keyof JSX.IntrinsicElements;\n}\n\nexport function Center({ tag: Tag = \"div\", children, ...props }: CenterProps): JSX.Element {\n  return <Tag {...props}>{children}</Tag>;\n}\n","import styled from \"styled-components\";\nimport { Center } from \"./component\";\n\nexport const StyledCenter = styled(Center)`\n  box-sizing: content-box;\n\n  max-width: var(--max-width, none);\n\n  margin-left: auto;\n  margin-right: auto;\n\n  text-align: center;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import * as React from \"react\";\n\nexport interface StackProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly tag?: keyof JSX.IntrinsicElements;\n}\n\nexport function Stack({ tag: Tag = \"div\", children, ...props }: StackProps): JSX.Element {\n  return <Tag {...props}>{children}</Tag>;\n}\n","import styled from \"styled-components\";\nimport { Stack } from \"./component\";\n\nexport const StyledStack = styled(Stack)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  & > * {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  & > * + * {\n    margin-top: var(--gap, var(--s0));\n  }\n`;\n","import { Center, CenterProps } from \"../Center\";\nimport * as React from \"react\";\n\nexport function PageLayout({ children, ...props }: CenterProps): JSX.Element {\n  return (\n    <Center tag=\"main\" {...props}>\n      {children}\n    </Center>\n  );\n}\n","import styled from \"styled-components\";\nimport { PageLayout } from \"./component\";\n\nexport const StyledPageLayout = styled(PageLayout)`\n  --max-width: 22rem;\n  --gap: var(--s8);\n\n  padding: var(--s4);\n\n  /* Reduces padding when width < 380px, but uses em for better media query support */\n  @media (max-width: 23.6875em) {\n    padding: var(--s-1) 0 var(--s-2) 0;\n  }\n\n  [alt=\"Back arrow\"] {\n    align-self: flex-start;\n  }\n`;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport interface BackButtonProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly icon: string;\n  readonly path?: string;\n  readonly state?: any;\n}\n\nexport function BackButton({ icon, path, state, ...props }: BackButtonProps): JSX.Element {\n  const history = useHistory();\n  const goBack = path ? () => history.push(path, state) : history.goBack;\n\n  return <img src={icon} alt=\"Back arrow\" onClick={goBack} {...props} />;\n}\n","import styled from \"styled-components\";\nimport { BackButton } from \"./component\";\n\nexport const StyledBackButton = styled(BackButton)`\n  cursor: pointer;\n`;\n","import { Spin } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const StyledSpin = styled(Spin)`\n  & > span + div {\n    margin-top: var(--s2);\n  }\n`;\n","import { LoadingOutlined } from \"@ant-design/icons\";\nimport * as React from \"react\";\nimport { PageLayout } from \"../../layout/PageLayout\";\nimport { StyledSpin } from \"./style\";\n\nconst spinIndicator = <LoadingOutlined style={{ fontSize: \"6.25rem\" }} spin />;\n\ninterface LoadingProps {\n  readonly loadingText?: string;\n}\n\nexport function Loading({ loadingText }: LoadingProps): JSX.Element {\n  const tip = loadingText || \"Loading...\";\n\n  return (\n    <PageLayout>\n      <StyledSpin indicator={spinIndicator} tip={tip} />\n    </PageLayout>\n  );\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport { Stack } from \"../../layout/Stack\";\n\nconst { Text } = Typography;\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s9);\n  }\n`;\n\nexport const WelcomeStack = styled(Stack)`\n  & > * {\n    --gap: var(--s3);\n  }\n`;\n\nexport const LightText = styled(Text)`\n  display: block;\n  font-weight: lighter;\n`;\n\nexport const ErrorText = styled(Text)`\n  color: var(--color-red);\n`;\n","import {\n  AppConfig,\n  configKeplr,\n  loadKeplrWallet,\n  loadLedgerWallet,\n  loadOrCreateWallet,\n  RedirectLocation,\n  useAccount,\n  useError,\n  useSdk,\n  WalletLoader,\n} from \"@cosmicdapp/logic\";\nimport { Button, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PageLayout } from \"../../layout/PageLayout\";\nimport { Loading } from \"../../logic/Loading\";\nimport { ErrorText, LightText, MainStack, WelcomeStack } from \"./style\";\n\nconst { Title } = Typography;\n\nfunction disableLedgerLogin() {\n  const anyNavigator: any = navigator;\n  return !anyNavigator?.usb;\n}\n\nfunction disableKeplrLogin() {\n  // TODO find check that works on reload\n  //const anyWindow: any = window;\n  //return !(anyWindow.getOfflineSigner && anyWindow.keplr.experimentalSuggestChain);\n  return false;\n}\n\ninterface LoginProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly pathAfterLogin: string;\n  readonly appName: string;\n  readonly appLogo: string;\n  readonly config: AppConfig;\n}\n\nexport function Login({ config, pathAfterLogin, appName, appLogo, ...restProps }: LoginProps): JSX.Element {\n  const history = useHistory();\n  const state = history.location.state as RedirectLocation;\n  const { error, setError, clearError } = useError();\n  const sdk = useSdk();\n  const { refreshAccount, account } = useAccount();\n\n  const [initializing, setInitializing] = useState(false);\n\n  async function init(loadWallet: WalletLoader) {\n    setInitializing(true);\n    clearError();\n\n    try {\n      const signer = await loadWallet(config.chainId, config.addressPrefix);\n      await sdk.init(signer);\n    } catch (error) {\n      console.error(error);\n      setError(Error(error).message);\n      setInitializing(false);\n    }\n  }\n\n  async function initBrowser() {\n    await init(loadOrCreateWallet);\n  }\n\n  async function initLedger() {\n    await init(loadLedgerWallet);\n  }\n\n  async function initKeplr() {\n    const anyWindow: any = window;\n    try {\n      await anyWindow.keplr.experimentalSuggestChain(configKeplr(config));\n      await anyWindow.keplr.enable(config.chainId);\n      await init(loadKeplrWallet);\n    } catch (error) {\n      console.error(error);\n      setError(Error(error).message);\n    }\n  }\n\n  useEffect(() => {\n    if (sdk.initialized) {\n      refreshAccount();\n    }\n  }, [sdk.initialized, refreshAccount]);\n\n  useEffect(() => {\n    if (account) {\n      if (state) {\n        history.push(state.redirectPathname, state.redirectState);\n      } else {\n        history.push(pathAfterLogin);\n      }\n    }\n  }, [account, state, history]);\n\n  return initializing ? (\n    <Loading loadingText=\"Initializing app...\" />\n  ) : (\n    <PageLayout {...restProps}>\n      <MainStack>\n        <img src={appLogo} alt=\"CosmWasm logo\" />\n        <WelcomeStack>\n          <Typography>\n            <Title level={2}>Hello!</Title>\n            <LightText>Welcome to your {appName}</LightText>\n            <LightText>Select one of the following options to start:</LightText>\n          </Typography>\n          {error && <ErrorText>{error}</ErrorText>}\n          <Button type=\"primary\" onClick={initBrowser}>\n            Browser (Demo)\n          </Button>\n          <Button type=\"primary\" disabled={disableLedgerLogin()} onClick={initLedger}>\n            Ledger (Secure, Chrome)\n          </Button>\n          <Button type=\"primary\" disabled={disableKeplrLogin()} onClick={initKeplr}>\n            Keplr (Secure)\n          </Button>\n        </WelcomeStack>\n      </MainStack>\n    </PageLayout>\n  );\n}\n","import { CoinMap } from \"./utils\";\n\nexport interface KeplrCoin {\n  readonly coinDenom: string;\n  readonly coinMinimalDenom: string;\n  readonly coinDecimals: number;\n}\n\nexport interface KeplrConfig {\n  readonly chainId: string;\n  readonly chainName: string;\n  readonly rpc: string;\n  readonly rest: string;\n  readonly bech32Config: {\n    readonly bech32PrefixAccAddr: string;\n    readonly bech32PrefixAccPub: string;\n    readonly bech32PrefixValAddr: string;\n    readonly bech32PrefixValPub: string;\n    readonly bech32PrefixConsAddr: string;\n    readonly bech32PrefixConsPub: string;\n  };\n  readonly currencies: readonly KeplrCoin[];\n  readonly feeCurrencies: readonly KeplrCoin[];\n  readonly stakeCurrency: KeplrCoin;\n  readonly gasPriceStep: {\n    readonly low: number;\n    readonly average: number;\n    readonly high: number;\n  };\n  readonly bip44: { readonly coinType: number };\n  readonly coinType: number;\n}\n\nexport interface AppConfig {\n  readonly chainId: string;\n  readonly chainName: string;\n  readonly addressPrefix: string;\n  readonly rpcUrl: string;\n  readonly httpUrl: string;\n  readonly faucetUrl: string;\n  readonly feeToken: string;\n  readonly stakingToken: string;\n  readonly coinMap: CoinMap;\n  readonly gasPrice: number;\n  readonly codeId?: number;\n}\n\nexport interface NetworkConfigs {\n  readonly local: AppConfig;\n  readonly [key: string]: AppConfig;\n}\n\nexport function getAppConfig(configs: NetworkConfigs): AppConfig {\n  const network = process.env.REACT_APP_NETWORK;\n  if (!network) return configs.local;\n\n  const config = configs[network];\n  if (!config) {\n    throw new Error(`No configuration found for network ${network}`);\n  }\n\n  return config;\n}\n\nexport function configKeplr(config: AppConfig): KeplrConfig {\n  return {\n    chainId: config.chainId,\n    chainName: config.chainName,\n    rpc: config.rpcUrl,\n    rest: config.httpUrl,\n    bech32Config: {\n      bech32PrefixAccAddr: `${config.addressPrefix}`,\n      bech32PrefixAccPub: `${config.addressPrefix}pub`,\n      bech32PrefixValAddr: `${config.addressPrefix}valoper`,\n      bech32PrefixValPub: `${config.addressPrefix}valoperpub`,\n      bech32PrefixConsAddr: `${config.addressPrefix}valcons`,\n      bech32PrefixConsPub: `${config.addressPrefix}valconspub`,\n    },\n    currencies: [\n      {\n        coinDenom: config.coinMap[config.feeToken].denom,\n        coinMinimalDenom: config.feeToken,\n        coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n      },\n      {\n        coinDenom: config.coinMap[config.stakingToken].denom,\n        coinMinimalDenom: config.stakingToken,\n        coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n      },\n    ],\n    feeCurrencies: [\n      {\n        coinDenom: config.coinMap[config.feeToken].denom,\n        coinMinimalDenom: config.feeToken,\n        coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n      },\n    ],\n    stakeCurrency: {\n      coinDenom: config.coinMap[config.stakingToken].denom,\n      coinMinimalDenom: config.stakingToken,\n      coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n    },\n    gasPriceStep: {\n      low: config.gasPrice / 2,\n      average: config.gasPrice,\n      high: config.gasPrice * 2,\n    },\n    bip44: { coinType: 118 },\n    coinType: 118,\n  };\n}\n","import { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport { Stack } from \"../../layout/Stack\";\n\nconst { Text } = Typography;\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s3);\n  }\n`;\n\nexport const ResultText = styled(Text)`\n  font-size: var(--s-1);\n\n  &[data-result=\"success\"] {\n    color: var(--color-green);\n  }\n\n  &[data-result=\"failure\"] {\n    color: var(--color-red);\n  }\n`;\n","import { Button } from \"antd\";\nimport { History } from \"history\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PageLayout } from \"../../layout/PageLayout\";\nimport { MainStack, ResultText } from \"./style\";\n\ninterface ResultContent {\n  readonly result: \"success\" | \"failure\";\n  readonly icon: string;\n  readonly buttonText: string;\n  readonly buttonAction: () => void;\n}\n\nexport interface OperationResultState {\n  readonly success: boolean;\n  readonly message: string;\n  readonly error?: string;\n  readonly customButtonText?: string;\n  readonly customButtonActionPath?: string;\n  readonly customButtonActionState?: any;\n}\n\nexport interface OperationResultProps {\n  readonly defaultButtonAction: (history: History) => void;\n  readonly successIcon: string;\n  readonly failIcon: string;\n}\n\nexport function OperationResult({\n  defaultButtonAction,\n  successIcon,\n  failIcon,\n}: OperationResultProps): JSX.Element {\n  const history = useHistory();\n\n  const {\n    success,\n    message,\n    error,\n    customButtonText,\n    customButtonActionPath,\n    customButtonActionState,\n  } = history.location.state as OperationResultState;\n\n  function getResultContent(success: boolean): ResultContent {\n    if (success) {\n      return {\n        result: \"success\",\n        icon: successIcon,\n        buttonText: \"Home\",\n        buttonAction: () => defaultButtonAction(history),\n      };\n    }\n\n    return {\n      result: \"failure\",\n      icon: failIcon,\n      buttonText: \"Retry\",\n      buttonAction: history.goBack,\n    };\n  }\n\n  const { icon, result, buttonText, buttonAction } = getResultContent(success);\n\n  const chosenButtonText = customButtonText || buttonText;\n  const chosenButtonAction = customButtonActionPath\n    ? () => history.push(customButtonActionPath, customButtonActionState)\n    : buttonAction;\n\n  return (\n    <PageLayout>\n      <MainStack>\n        <img src={icon} alt=\"Result icon\" />\n        <ResultText data-result={result}>{message}</ResultText>\n        {error && <ResultText data-result={result}>{error}</ResultText>}\n        <Button type=\"primary\" onClick={chosenButtonAction}>\n          {chosenButtonText}\n        </Button>\n      </MainStack>\n    </PageLayout>\n  );\n}\n","import styled from \"styled-components\";\nimport { Stack } from \"../../layout/Stack\";\n\nexport const AccountStack = styled(Stack)`\n  & > * {\n    --gap: var(--s-2);\n  }\n\n  h3,\n  div[role=\"separator\"] {\n    margin: 0;\n  }\n\n  span,\n  button {\n    overflow-wrap: anywhere;\n  }\n\n  span {\n    display: block;\n    font-size: var(--s-1);\n  }\n\n  span + span {\n    font-weight: bold;\n  }\n\n  button,\n  button span {\n    font-size: var(--s0);\n  }\n\n  button {\n    height: 100%;\n    white-space: normal;\n  }\n`;\n","import { printableBalance, useAccount } from \"@cosmicdapp/logic\";\nimport { Button, Divider, Typography } from \"antd\";\nimport copyToClipboard from \"clipboard-copy\";\nimport React from \"react\";\nimport { StackProps } from \"../../layout/Stack\";\nimport { AccountStack } from \"./style\";\n\nconst { Title, Text } = Typography;\n\ninterface YourAccountProps extends StackProps {\n  readonly hideTitle?: boolean;\n  readonly hideBalance?: boolean;\n}\n\nexport function YourAccount({ tag, hideTitle, hideBalance }: YourAccountProps): JSX.Element {\n  const accountProvider = useAccount();\n  const { address, balance } = accountProvider.account ?? { address: \"\", balance: [] };\n\n  return (\n    <AccountStack tag={tag}>\n      {!hideTitle && (\n        <header>\n          <Title level={3}>Your Account</Title>\n          {!hideBalance && <Divider />}\n        </header>\n      )}\n      <Text>{address}</Text>\n      {!hideBalance && <Text>({printableBalance(balance)})</Text>}\n      <Button type=\"primary\" onClick={() => copyToClipboard(address)}>\n        Copy Account Address\n      </Button>\n    </AccountStack>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalAntOverride = createGlobalStyle`\n  .ant-btn:not(.ant-input-search-button) {\n    width: var(--max-width);\n    max-width: 100vw;\n  }\n  \n  .ant-form div[role=\"alert\"] li {\n    color: var(--form-error);\n    font-size: var(--s-1);\n    text-align: left;\n    margin: var(--s-1);\n  \n    &::before {\n      content: \"* \";\n    }\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalColors = createGlobalStyle`\n  :root {\n    --color-black: #333;\n    --color-gray-light: #f2f2f2;\n    --color-red: #eb5757;\n    --color-green: #27ae60;\n    --color-blue: #2f80ed;\n    --color-blue-light: #1890ff;\n\n    --color-primary: var(--color-blue);\n    --button-color: var(--color-blue-light);\n    --text-color: var(--color-primary);\n    --heading-color: var(--color-primary);\n    --form-error: var(--color-red);\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalFonts = createGlobalStyle`\n  :root {\n    --ff-montserrat: Montserrat, sans-serif;\n    --ff-iceland: Iceland, serif;\n\n    --ff-text: var(--ff-montserrat);\n    --ff-heading: var(--ff-iceland);\n    \n    font-family: var(--ff-text);\n  }\n\n  p,\n  span {\n    font-family: var(--ff-text);\n    font-size: var(--s0);\n    overflow-wrap: anywhere;\n  }\n  \n  h1,\n  h2,\n  h3 {\n    font-family: var(--ff-heading);\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalReset = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n  \n  html {\n    scroll-behavior: smooth;\n  }\n  \n  body {\n    min-height: 100vh;\n    line-height: 1.5;\n    text-rendering: optimizeSpeed;\n  }\n  \n  body,\n  h1,\n  h2,\n  p,\n  ul[class],\n  ol[class] {\n    margin: 0;\n  }\n  \n  ul[class],\n  ol[class] {\n    padding: 0;\n    list-style: none;\n  }\n  \n  button,\n  input,\n  select,\n  textarea {\n    font: inherit;\n  }\n  \n  img {\n    display: block;\n    max-width: 100%;\n  }\n  \n  @media (prefers-reduced-motion: reduce) {\n    * {\n      animation-duration: 0.01s !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01s !important;\n      scroll-behavior: auto !important;\n    }\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalSpacing = createGlobalStyle`\n  :root {\n    --ratio: 1.25;\n\n    --s-6: calc(var(--s-5) / var(--ratio));\n    --s-5: calc(var(--s-4) / var(--ratio));\n    --s-4: calc(var(--s-3) / var(--ratio));\n    --s-3: calc(var(--s-2) / var(--ratio));\n    --s-2: calc(var(--s-1) / var(--ratio));\n    --s-1: calc(var(--s0) / var(--ratio));\n    --s0: 1rem;\n    --s1: calc(var(--s0) * var(--ratio));\n    --s2: calc(var(--s1) * var(--ratio));\n    --s3: calc(var(--s2) * var(--ratio));\n    --s4: calc(var(--s3) * var(--ratio));\n    --s5: calc(var(--s4) * var(--ratio));\n    --s6: calc(var(--s5) * var(--ratio));\n    --s7: calc(var(--s6) * var(--ratio));\n    --s8: calc(var(--s7) * var(--ratio));\n    --s9: calc(var(--s8) * var(--ratio));\n  }\n`;\n","import React from \"react\";\nimport { GlobalAntOverride } from \"./GlobalAntOverride\";\nimport { GlobalColors } from \"./GlobalColors\";\nimport { GlobalFonts } from \"./GlobalFonts\";\nimport { GlobalReset } from \"./GlobalReset\";\nimport { GlobalSpacing } from \"./GlobalSpacing\";\n\nexport function GlobalStyle(): JSX.Element {\n  return (\n    <>\n      <GlobalReset />\n      <GlobalSpacing />\n      <GlobalColors />\n      <GlobalFonts />\n      <GlobalAntOverride />\n    </>\n  );\n}\n","import { AppConfig, getAppConfig, NetworkConfigs } from \"@cosmicdapp/logic\";\n\nconst local: AppConfig = {\n  chainId: \"testing\",\n  chainName: \"Testing\",\n  addressPrefix: \"cosmos\",\n  rpcUrl: \"http://localhost:26657\",\n  httpUrl: \"http://localhost:1317\",\n  faucetUrl: \"http://localhost:8000\",\n  feeToken: \"ucosm\",\n  stakingToken: \"uatom\",\n  coinMap: {\n    ucosm: { denom: \"COSM\", fractionalDigits: 6 },\n    uatom: { denom: \"ATOM\", fractionalDigits: 6 },\n  },\n  gasPrice: 0.025,\n  codeId: 5,\n};\n\nconst heldernet: AppConfig = {\n  chainId: \"hackatom-wasm\",\n  chainName: \"Heldernet\",\n  addressPrefix: \"cosmos\",\n  rpcUrl: \"https://rpc.heldernet.cosmwasm.com\",\n  httpUrl: \"https://lcd.heldernet.cosmwasm.com\",\n  faucetUrl: \"https://faucet.heldernet.cosmwasm.com\",\n  feeToken: \"ucosm\",\n  stakingToken: \"ustake\",\n  coinMap: {\n    ucosm: { denom: \"COSM\", fractionalDigits: 6 },\n    ustake: { denom: \"STAKE\", fractionalDigits: 6 },\n  },\n  gasPrice: 0.025,\n  codeId: 2,\n};\n\nconst configs: NetworkConfigs = { local, heldernet };\nexport const config = getAppConfig(configs);\n","// Search form not present in form-antd: https://github.com/jannikbuschke/formik-antd/blob/master/src/input/index.tsx\nimport { Input as BaseInput } from \"antd\";\nimport { InputProps as BaseInputProps, SearchProps as BaseSearchProps } from \"antd/lib/input\";\nimport { FieldProps } from \"formik\";\nimport { Field } from \"formik-antd\";\nimport * as React from \"react\";\nimport Search from \"antd/lib/input/Search\";\n\ninterface FormikFieldProps {\n  name: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  validate?: (value: any) => undefined | string | Promise<any>;\n  fast?: boolean;\n}\n\ntype InputProps = FormikFieldProps & BaseInputProps;\n\ninterface InputType\n  extends React.ForwardRefExoticComponent<\n    FormikFieldProps & BaseInputProps & React.RefAttributes<BaseInput>\n  > {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  Search: React.ForwardRefExoticComponent<FormikFieldProps & BaseSearchProps & React.RefAttributes<Search>>;\n}\n\n// eslint-disable-next-line react/display-name\nconst Input = React.forwardRef((\n  { name, validate, fast, onChange: $onChange, onBlur: $onBlur, ...restProps }: InputProps,\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  ref: React.Ref<Search>,\n) => (\n  <Field name={name} validate={validate} fast={fast}>\n    {({ field: { value, onChange, onBlur } }: FieldProps) => (\n      <BaseInput\n        ref={ref}\n        name={name}\n        value={value}\n        onChange={(event) => {\n          onChange(event);\n          $onChange && $onChange(event);\n        }}\n        onBlur={(event) => {\n          onBlur(event);\n          $onBlur && $onBlur(event);\n        }}\n        {...restProps}\n      />\n    )}\n  </Field>\n));\n\nconst TypedInput = (Input as unknown) as InputType;\ntype SearchProps = FormikFieldProps & BaseSearchProps;\n\n// eslint-disable-next-line react/display-name\nTypedInput.Search = React.forwardRef(\n  (\n    { name, validate, fast, onChange: $onChange, onBlur: $onBlur, ...restProps }: SearchProps,\n    ref: React.Ref<BaseInput>,\n  ) => (\n    <Field name={name} validate={validate} fast={fast}>\n      {({ field: { value, onChange, onBlur } }: FieldProps) => (\n        <BaseInput.Search\n          ref={ref}\n          name={name}\n          value={value}\n          onChange={(event) => {\n            onChange(event);\n            $onChange && $onChange(event);\n          }}\n          onBlur={(event) => {\n            onBlur(event);\n            $onBlur && $onBlur(event);\n          }}\n          {...restProps}\n        />\n      )}\n    </Field>\n  ),\n);\n\nexport default TypedInput.Search;\n","import * as Yup from \"yup\";\nimport { config } from \"../../config\";\n\nexport const SearchValidationSchema = Yup.object().shape({\n  name: Yup.string().min(4, \"Name can not be less than 4 characters\").required(\"A Name is required\"),\n});\n\nconst regexStartsWithPrefix = new RegExp(`^${config.addressPrefix}`);\n\nexport const TransferValidationSchema = Yup.object().shape({\n  address: Yup.string()\n    .required(\"An address is required\")\n    .matches(regexStartsWithPrefix, `\"${config.addressPrefix}\" prefix required`)\n    .length(39 + config.addressPrefix.length, \"Address invalid\"),\n});\n","import { Formik } from \"formik\";\nimport { Form, FormItem } from \"formik-antd\";\nimport React from \"react\";\nimport Search from \"../../../forms/Search\";\nimport { SearchValidationSchema } from \"../../../forms/validationSchemas\";\n\ninterface FormSearchNameProps {\n  readonly initialName?: string;\n  readonly setSearchedName: (value: React.SetStateAction<string>) => void;\n}\n\nexport function FormSearchName({ initialName, setSearchedName }: FormSearchNameProps): JSX.Element {\n  return (\n    <Formik\n      initialValues={{ name: initialName }}\n      validationSchema={SearchValidationSchema}\n      onSubmit={(values) => {\n        setSearchedName(values.name);\n      }}\n    >\n      {(formikProps) => (\n        <Form>\n          <FormItem name=\"name\">\n            <Search\n              name=\"name\"\n              placeholder=\"Name\"\n              enterButton\n              onSearch={(value) => {\n                formikProps.isValid && setSearchedName(value);\n              }}\n            />\n          </FormItem>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { Stack } from \"@cosmicdapp/design\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\n\nconst { Text } = Typography;\n\nexport const ResultStack = styled(Stack)`\n  & > * {\n    --gap: var(--s-3);\n  }\n`;\n\nexport const BlackText = styled(Text)`\n  color: var(--color-black);\n`;\n\nexport const LightText = styled(Text)`\n  font-weight: lighter;\n`;\n","import { OperationResultState } from \"@cosmicdapp/design\";\nimport { getErrorFromStackTrace, printableCoin, useAccount, useError, useSdk } from \"@cosmicdapp/logic\";\nimport { Coin } from \"@cosmjs/launchpad\";\nimport { Button, Typography } from \"antd\";\nimport copyToClipboard from \"clipboard-copy\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { pathContract, pathOperationResult, pathTransfer } from \"../../../../paths\";\nimport { BlackText, LightText, ResultStack } from \"./style\";\n\nconst { Text } = Typography;\n\nexport interface Prices {\n  readonly purchase?: Coin;\n  readonly transfer?: Coin;\n}\n\ninterface Result {\n  readonly message: string;\n  readonly actionText: string;\n  readonly action: () => void;\n}\n\nfunction getResult(\n  myAddress: string,\n  nameOwnerAddress: string,\n  prices: Prices,\n  tryRegister: () => void,\n  navigateToTransfer: () => void,\n): Result {\n  if (!nameOwnerAddress) {\n    return {\n      message: \"is available!\",\n      actionText: `Register ${printableCoin(prices.purchase)}`,\n      action: tryRegister,\n    };\n  }\n\n  if (myAddress === nameOwnerAddress) {\n    return {\n      message: \"is owned by you !\",\n      actionText: `Transfer ${printableCoin(prices.transfer)}`,\n      action: navigateToTransfer,\n    };\n  } else {\n    return {\n      message: `is owned by ${nameOwnerAddress}`,\n      actionText: \"Copy Owner Address\",\n      action: () => {\n        copyToClipboard(nameOwnerAddress);\n      },\n    };\n  }\n}\n\ninterface SearchResultProps {\n  readonly contractLabel: string;\n  readonly contractAddress: string;\n  readonly name: string;\n  readonly setLoading: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function SearchResult({\n  contractLabel,\n  contractAddress,\n  name,\n  setLoading,\n}: SearchResultProps): JSX.Element {\n  const fullContractPath = `${pathContract}/${contractLabel}/${contractAddress}/${name}`;\n\n  const history = useHistory();\n  const { setError, error } = useError();\n  const { getClient } = useSdk();\n  const accountProvider = useAccount();\n\n  const [nameOwnerAddress, setNameOwnerAddress] = useState(\"\");\n  const [prices, setPrices] = useState<Prices>({});\n\n  useEffect(() => {\n    getClient()\n      .queryContractSmart(contractAddress, { resolve_record: { name } })\n      .then((response) => {\n        setNameOwnerAddress(response.address);\n      })\n      .catch((error) => {\n        // a not found error means it is free, other errors need to be reported\n        if (!error.toString().includes(\"NameRecord not found\")) {\n          setError(error);\n        }\n      });\n  }, [setError, contractAddress, getClient, name]);\n\n  useEffect(() => {\n    getClient()\n      .queryContractSmart(contractAddress, { config: {} })\n      .then((response) => {\n        setPrices({\n          purchase: response.purchase_price,\n          transfer: response.transfer_price,\n        });\n      })\n      .catch(setError);\n  }, [setError, contractAddress, getClient]);\n\n  function tryRegister() {\n    setLoading(true);\n\n    const purchasePrice = prices.purchase;\n    const payment = purchasePrice ? [purchasePrice] : undefined;\n\n    getClient()\n      .execute(\n        contractAddress,\n        { register: { name: name, metadata: `buy-${name}` } },\n        \"Buying my name\",\n        payment,\n      )\n      .then(() => {\n        accountProvider.refreshAccount();\n\n        history.push({\n          pathname: pathOperationResult,\n          state: {\n            success: true,\n            message: `Successfully registered ${name}`,\n            customButtonText: \"Name details\",\n            customButtonActionPath: fullContractPath,\n          } as OperationResultState,\n        });\n      })\n      .catch((stackTrace) => {\n        console.error(stackTrace);\n\n        history.push({\n          pathname: pathOperationResult,\n          state: {\n            success: false,\n            message: \"Name register failed:\",\n            error: getErrorFromStackTrace(stackTrace),\n            customButtonActionPath: fullContractPath,\n          } as OperationResultState,\n        });\n      });\n  }\n\n  function navigateToTransfer() {\n    history.push(`${pathTransfer}/${contractLabel}/${contractAddress}/${name}`);\n  }\n\n  const { message, actionText, action } = getResult(\n    accountProvider.account.address,\n    nameOwnerAddress,\n    prices,\n    tryRegister,\n    navigateToTransfer,\n  );\n\n  return (\n    <ResultStack>\n      <Text>{error}</Text>\n      <BlackText>{name}</BlackText>\n      <LightText>{message}</LightText>\n      <Button type=\"primary\" onClick={action}>\n        {actionText}\n      </Button>\n    </ResultStack>\n  );\n}\n","export const pathLogin = \"/login\";\nexport const pathHome = \"/home\";\nexport const pathContract = \"/contract\";\nexport const pathTransfer = \"/transfer\";\nexport const pathOperationResult = \"/result\";\n","import { Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const MainStack = styled(Stack)`\n  h1 {\n    margin: 0;\n    text-transform: capitalize;\n  }\n\n  span {\n    font-size: var(--s-1);\n    overflow-wrap: anywhere;\n  }\n`;\n\nexport const BackSearchResultStack = styled(Stack)`\n  & > * {\n    --gap: var(--s4);\n  }\n`;\n\nexport const SearchStack = styled(Stack)`\n  & > * {\n    --gap: var(--s2);\n  }\n\n  .ant-form {\n    margin-top: var(--gap);\n  }\n`;\n","import { BackButton, Loading, PageLayout, YourAccount } from \"@cosmicdapp/design\";\nimport { Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport backArrowIcon from \"../../assets/backArrow.svg\";\nimport { pathHome } from \"../../paths\";\nimport { FormSearchName } from \"./components/FormSearchName\";\nimport { SearchResult } from \"./components/SearchResult\";\nimport { BackSearchResultStack, MainStack, SearchStack } from \"./style\";\n\nconst { Title, Text } = Typography;\n\ninterface ContractParams {\n  readonly label: string;\n  readonly address: string;\n  readonly name?: string;\n}\n\nexport function Contract(): JSX.Element {\n  const { label, address, name } = useParams() as ContractParams;\n\n  const [loading, setLoading] = useState(false);\n  const [searchedName, setSearchedName] = useState(name);\n\n  function setLowercaseSearchedName(newName: string) {\n    setSearchedName(newName.toLowerCase());\n  }\n\n  return (\n    (loading && <Loading loadingText={`Registering name: ${searchedName}...`} />) ||\n    (!loading && (\n      <PageLayout>\n        <MainStack>\n          <BackSearchResultStack>\n            <BackButton icon={backArrowIcon} path={pathHome} />\n            <SearchStack>\n              <Title>{label}</Title>\n              <Text>({address})</Text>\n              <FormSearchName initialName={name} setSearchedName={setLowercaseSearchedName} />\n            </SearchStack>\n            {searchedName && (\n              <SearchResult\n                contractLabel={label}\n                contractAddress={address}\n                name={searchedName}\n                setLoading={setLoading}\n              />\n            )}\n          </BackSearchResultStack>\n          <YourAccount tag=\"footer\" />\n        </MainStack>\n      </PageLayout>\n    ))\n  );\n}\n","import { Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const MainStack = styled(Stack)`\n  h1 {\n    margin: 0;\n    text-transform: capitalize;\n  }\n\n  span {\n    font-size: var(--s-1);\n    overflow-wrap: anywhere;\n  }\n`;\n\nexport const ContractStack = styled(Stack)`\n  & > * {\n    --gap: var(--s4);\n  }\n`;\n","import { PageLayout, YourAccount } from \"@cosmicdapp/design\";\nimport { useError, useSdk } from \"@cosmicdapp/logic\";\nimport { Contract } from \"@cosmjs/cosmwasm\";\nimport { Button, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { config } from \"../../../config\";\nimport { pathContract } from \"../../paths\";\nimport { ContractStack, MainStack } from \"./style\";\n\nconst { Title } = Typography;\n\nexport function Home(): JSX.Element {\n  const { setError } = useError();\n  const { getClient } = useSdk();\n\n  const [contracts, setContracts] = useState<readonly Contract[]>([]);\n\n  useEffect(() => {\n    getClient()\n      .getContracts(config.codeId)\n      .then((contracts) => setContracts(contracts))\n      .catch(setError);\n  }, [getClient, setError]);\n\n  return (\n    <PageLayout>\n      <MainStack>\n        <Title>Name Service</Title>\n        <ContractStack tag=\"nav\">\n          {contracts.map(({ label, address }) => (\n            <Link key={address} to={`${pathContract}/${label.toLowerCase()}/${address}`}>\n              <Button type=\"primary\">{label}</Button>\n            </Link>\n          ))}\n        </ContractStack>\n        <YourAccount tag=\"footer\" />\n      </MainStack>\n    </PageLayout>\n  );\n}\n","import { Login as LoginDesign } from \"@cosmicdapp/design\";\nimport React from \"react\";\nimport { config } from \"../../../config\";\nimport { pathHome } from \"../../paths\";\nimport cosmWasmLogo from \"./assets/cosmWasmLogo.svg\";\n\nexport function Login(): JSX.Element {\n  return (\n    <LoginDesign pathAfterLogin={pathHome} appName=\"Name service\" appLogo={cosmWasmLogo} config={config} />\n  );\n}\n","import { OperationResult as OperationResultDesign } from \"@cosmicdapp/design\";\nimport { History } from \"history\";\nimport React from \"react\";\nimport { pathHome } from \"../../paths\";\nimport failIcon from \"./assets/failIcon.svg\";\nimport successIcon from \"./assets/successIcon.svg\";\n\nfunction goToHome(history: History) {\n  history.push(pathHome);\n}\n\nexport function OperationResult(): JSX.Element {\n  return (\n    <OperationResultDesign defaultButtonAction={goToHome} successIcon={successIcon} failIcon={failIcon} />\n  );\n}\n","import { Button } from \"antd\";\nimport { Formik } from \"formik\";\nimport { Form, FormItem, Input } from \"formik-antd\";\nimport React from \"react\";\nimport { TransferValidationSchema } from \"../../forms/validationSchemas\";\n\ninterface FormTransferNameProps {\n  readonly setNewOwnerAddress: (value: React.SetStateAction<string>) => void;\n  readonly transferButtonText: string;\n  readonly transferButtonAction: () => void;\n}\n\nexport function FormTransferName({\n  setNewOwnerAddress,\n  transferButtonText,\n  transferButtonAction,\n}: FormTransferNameProps): JSX.Element {\n  return (\n    <Formik\n      initialValues={{ address: \"\" }}\n      validationSchema={TransferValidationSchema}\n      onSubmit={transferButtonAction}\n    >\n      {(formikProps) => (\n        <Form>\n          <FormItem name=\"address\">\n            <Input\n              name=\"address\"\n              placeholder=\"Enter address\"\n              onChange={(event) => {\n                setNewOwnerAddress(event.target.value);\n              }}\n            />\n          </FormItem>\n          <Button\n            type=\"primary\"\n            onClick={transferButtonAction}\n            disabled={!(formikProps.isValid && formikProps.dirty)}\n          >\n            {transferButtonText}\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const MainStack = styled(Stack)`\n  h1 {\n    margin: 0;\n  }\n\n  span {\n    font-size: var(--s-1);\n    overflow-wrap: anywhere;\n  }\n`;\n\nexport const BackTransferStack = styled(Stack)`\n  & > * {\n    --gap: var(--s4);\n  }\n`;\n\nexport const TransferStack = styled(Stack)`\n  & > * {\n    --gap: var(--s3);\n  }\n\n  .ant-form {\n    margin-top: var(--gap);\n  }\n`;\n","import { BackButton, Loading, OperationResultState, PageLayout, YourAccount } from \"@cosmicdapp/design\";\nimport { getErrorFromStackTrace, printableCoin, useAccount, useError, useSdk } from \"@cosmicdapp/logic\";\nimport { Coin } from \"@cosmjs/launchpad\";\nimport { Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport backArrowIcon from \"../../assets/backArrow.svg\";\nimport { pathContract, pathOperationResult, pathTransfer } from \"../../paths\";\nimport { FormTransferName } from \"./FormTransferName\";\nimport { BackTransferStack, MainStack, TransferStack } from \"./style\";\n\nconst { Title, Text } = Typography;\n\ninterface TransferParams {\n  readonly contractLabel: string;\n  readonly contractAddress: string;\n  readonly name: string;\n}\n\nexport function Transfer(): JSX.Element {\n  const { contractLabel, contractAddress, name } = useParams() as TransferParams;\n  const fullContractPath = `${pathContract}/${contractLabel}/${contractAddress}/${name}`;\n\n  const history = useHistory();\n  const { setError } = useError();\n  const { getClient } = useSdk();\n  const accountProvider = useAccount();\n\n  const [loading, setLoading] = useState(false);\n  const [newOwnerAddress, setNewOwnerAddress] = useState(\"\");\n  const [transferPrice, setTransferPrice] = useState<Coin>();\n\n  useEffect(() => {\n    getClient()\n      .queryContractSmart(contractAddress, { config: {} })\n      .then((response) => {\n        setTransferPrice(response.transfer_price);\n      })\n      .catch(setError);\n  }, [setError, contractAddress, getClient]);\n\n  function tryTransfer() {\n    setLoading(true);\n    const payment = transferPrice ? [transferPrice] : undefined;\n\n    getClient()\n      .execute(\n        contractAddress,\n        { transfer: { name: name, to: newOwnerAddress } },\n        \"Transferring my name\",\n        payment,\n      )\n      .then(() => {\n        accountProvider.refreshAccount();\n\n        history.push({\n          pathname: pathOperationResult,\n          state: {\n            success: true,\n            message: `Successfully transferred ${name} to ${newOwnerAddress}`,\n            customButtonText: \"Name details\",\n            customButtonActionPath: fullContractPath,\n          } as OperationResultState,\n        });\n      })\n      .catch((stackTrace) => {\n        console.error(stackTrace);\n\n        history.push({\n          pathname: pathOperationResult,\n          state: {\n            success: false,\n            message: \"Name transfer failed:\",\n            error: getErrorFromStackTrace(stackTrace),\n            customButtonActionPath: `${pathTransfer}/${contractLabel}/${contractAddress}/${name}`,\n          } as OperationResultState,\n        });\n      });\n  }\n\n  return (\n    (loading && <Loading loadingText={`Transferring name: ${name}...`} />) ||\n    (!loading && (\n      <PageLayout>\n        <MainStack>\n          <BackTransferStack>\n            <BackButton icon={backArrowIcon} path={fullContractPath} />\n            <TransferStack>\n              <Title>Transfer</Title>\n              <Typography>\n                <Text>Name: </Text>\n                <Text>{name}</Text>\n              </Typography>\n              <Text>to</Text>\n              <FormTransferName\n                setNewOwnerAddress={setNewOwnerAddress}\n                transferButtonText={`Transfer ${printableCoin(transferPrice)}`}\n                transferButtonAction={tryTransfer}\n              />\n            </TransferStack>\n          </BackTransferStack>\n          <YourAccount tag=\"footer\" />\n        </MainStack>\n      </PageLayout>\n    ))\n  );\n}\n","import { GlobalStyle } from \"@cosmicdapp/design\";\nimport { AccountProvider, ErrorProvider, ProtectedSwitch, SdkProvider } from \"@cosmicdapp/logic\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { config } from \"../config\";\nimport { pathContract, pathHome, pathLogin, pathOperationResult, pathTransfer } from \"./paths\";\nimport { Contract } from \"./routes/Contract\";\nimport { Home } from \"./routes/Home\";\nimport { Login } from \"./routes/Login\";\nimport { OperationResult } from \"./routes/OperationResult\";\nimport { Transfer } from \"./routes/Transfer\";\n\nexport function App(): JSX.Element {\n  return (\n    <ErrorProvider>\n      <SdkProvider config={config}>\n        <AccountProvider>\n          <GlobalStyle />\n          <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route exact path={pathLogin} component={Login} />\n              <ProtectedSwitch authPath={pathLogin}>\n                <Route exact path={pathHome} component={Home} />\n                <Route exact path={`${pathContract}/:label/:address/:name?`} component={Contract} />\n                <Route\n                  exact\n                  path={`${pathTransfer}/:contractLabel/:contractAddress/:name`}\n                  component={Transfer}\n                />\n                <Route exact path={pathOperationResult} component={OperationResult} />\n              </ProtectedSwitch>\n            </Switch>\n          </Router>\n        </AccountProvider>\n      </SdkProvider>\n    </ErrorProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.less\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}