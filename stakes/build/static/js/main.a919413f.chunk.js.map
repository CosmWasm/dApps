{"version":3,"sources":["App/assets/backArrow.svg","App/components/AccountMenu/assets/avatar.svg","App/components/AccountMenu/assets/copy.svg","App/components/AccountMenu/assets/cross.svg","App/components/AccountMenu/assets/hamburger.svg","App/routes/Login/assets/cosmWasmLogo.svg","App/routes/OperationResult/assets/failIcon.svg","App/routes/OperationResult/assets/successIcon.svg","../../src/service/contracts.tsx","../../src/service/error.tsx","../../src/service/sdk.ts","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/service/wallet.tsx","../../src/service/ProtectedSwitch.tsx","../../src/utils/currency.ts","../../src/utils/errors.ts","../../src/components/layout/Center/component.tsx","../../src/components/layout/Center/style.ts","../../src/components/layout/Stack/component.tsx","../../src/components/layout/Stack/style.ts","../../src/components/layout/PageLayout/component.tsx","../../src/components/layout/PageLayout/style.ts","../../src/components/logic/BackButton/component.tsx","../../src/components/logic/BackButton/style.ts","../../src/components/logic/Loading/style.ts","../../src/components/logic/Loading/index.tsx","../../src/components/logic/Login/style.ts","../../src/components/logic/Login/index.tsx","../../src/config.ts","../../src/components/logic/OperationResult/style.ts","../../src/components/logic/OperationResult/index.tsx","../../src/components/logic/YourAccount/index.tsx","../../src/theme/GlobalStyle/GlobalAntOverride.ts","../../src/theme/GlobalStyle/GlobalColors.ts","../../src/theme/GlobalStyle/GlobalFonts.ts","../../src/theme/GlobalStyle/GlobalReset.ts","../../src/theme/GlobalStyle/GlobalSpacing.ts","../../src/theme/GlobalStyle/index.tsx","config.ts","App/components/AccountMenu/style.ts","App/components/AccountMenu/index.tsx","App/components/HeaderBackMenu/style.ts","App/components/HeaderBackMenu/index.tsx","App/utils/staking.ts","App/routes/Delegate/FormDelegateBalance/style.ts","App/routes/Delegate/FormDelegateBalance/index.tsx","App/routes/Delegate/style.ts","App/routes/Delegate/index.tsx","App/paths.ts","App/routes/Login/index.tsx","App/routes/OperationResult/index.tsx","App/components/DataList/style.ts","App/components/DataList/index.tsx","App/routes/Rewards/style.ts","App/routes/Rewards/index.tsx","App/routes/Undelegate/FormUndelegateBalance/style.ts","App/routes/Undelegate/FormUndelegateBalance/index.tsx","App/routes/Undelegate/style.ts","App/routes/Undelegate/index.tsx","App/routes/Validator/style.ts","App/routes/Validator/index.tsx","App/routes/Validators/style.ts","App/routes/Validators/index.tsx","App/index.tsx","index.tsx"],"names":["module","exports","defaultContext","contracts","addContract","ContractsContext","React","ContractsProvider","children","useState","setContracts","value","contract","newContract","setError","clearError","ErrorContext","useError","ErrorProvider","error","context","loadKeplrWallet","anyWindow","Error","signer","Promise","e","loadLedgerWallet","TransportWebUSB","ledgerTransport","hdPaths","makeCosmoshubPath","prefix","addressPrefix","loadOrCreateWallet","mnemonic","key","loaded","localStorage","generated","Bip39","Random","loadOrCreateMnemonic","hdPath","Secp256k1HdWallet","_Pact","result","state","this","callback","_settle","_this","onFulfilled","onRejected","pact","observer","_forIn","target","body","check","keys","array","i","thenable","reject","_cycle","_forTo","Symbol","_catch","recover","throwNotInitialized","initialized","init","clear","config","changeConfig","address","balance","refreshBalance","hitFaucet","getSigner","changeSigner","getClient","getStakingClient","CosmWasmContext","useSdk","SdkProvider","faucet","console","coinMap","denom","client","configProp","setConfig","setSigner","setClient","contextWithInit","setValue","useEffect","gasPrice","GasPrice","gasLimits","upload","exec","migrate","send","changeAdmin","createClient","TendermintClient","tmClient","QueryClient","createStakingClient","stakingClient","coin","ProtectedSwitch","authPath","location","to","pathname","redirectPathname","redirectState","undefined","nativeCoinToDisplay","coinToDisplay","amountToDisplay","Decimal","amount","displayAmountToNative","nativeDenom","fractionalDigits","getErrorFromStackTrace","stackTrace","stringStackTrace","match","Center","tag","Tag","props","StyledCenter","styled","Stack","StyledStack","PageLayout","StyledPageLayout","BackButton","icon","path","history","useHistory","goBack","src","alt","onClick","StyledBackButton","StyledSpin","spinIndicator","style","fontSize","spin","Loading","tip","loadingText","indicator","Text","Typography","MainStack","WelcomeStack","LightText","ErrorText","Title","disableLedgerLogin","anyNavigator","Login","loadWallet","setInitializing","sdk","pathAfterLogin","appName","appLogo","restProps","initializing","level","type","initBrowser","disabled","initLedger","initKeplr","chainId","chainName","rpc","rest","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMinimalDenom","coinDecimals","feeCurrencies","stakeCurrency","gasPriceStep","low","average","high","bip44","coinType","configKeplr","ResultText","OperationResult","defaultButtonAction","successIcon","failIcon","success","message","customButtonText","customButtonActionPath","customButtonActionState","buttonText","buttonAction","getResultContent","chosenButtonText","chosenButtonAction","GlobalAntOverride","createGlobalStyle","GlobalColors","GlobalFonts","GlobalReset","GlobalSpacing","GlobalStyle","configs","getAppConfig","local","rpcUrl","httpUrl","faucetUrl","feeToken","stakingToken","ucosm","uatom","codeId","musselnet","umayo","ufrites","OpenMenuButton","img","CloseMenuButton","MenuCenter","MenuStack","CloseAccountStack","AvatarName","div","NameText","AddressCopyBox","AddressText","AddressCopy","AccountMenu","name","open","setOpen","accountName","openMenuButton","closeMenuButton","avatarIcon","copyIcon","copyToClipboard","Header","header","HeaderBackMenu","backArrowIcon","useStakingValidator","validatorAddress","validator","setValidator","staking","unverified","FormStack","FormField","FormDelegateBalance","submitDelegateBalance","stakingBalance","find","stakingDecimals","maxAmount","fromAtomics","toFloatApproximation","delegateBalanceValidationSchema","Yup","shape","required","positive","max","initialValues","onSubmit","validationSchema","formikProps","formDisabled","isValid","dirty","placeholder","submitForm","HeaderTitleStack","Delegate","loading","setLoading","useParams","description","moniker","async","nativeAmountCoin","delegateMsg","typeUrl","delegatorAddress","fee","coins","gas","response","signAndBroadcast","isBroadcastTxFailure","push","cosmWasmLogo","goToValidators","ListStack","DataRow","KeyText","ValueText","DataList","dataMap","Object","entries","map","index","Fragment","charAt","toUpperCase","slice","Rewards","rewards","setRewards","distribution","delegationRewards","nonNullRewards","filter","length","rewardsMap","getRewardsMap","withdrawRewardsMsg","FormUndelegateBalance","submitUndelegateBalance","setBalance","fromUserInput","undelegateBalanceValidationSchema","delegationResponse","delegation","balanceDecimal","toString","Undelegate","undelegateMsg","TitleNavStack","ButtonStack","Validator","Tokens","tokens","Commission","commission","commissionRates","rate","Balance","getValidatorMap","MenuHeader","ValidatorStack","ValidatorItem","BorderContainer","validatorCompare","a","b","Validators","validatorsData","setValidatorsData","validators","operatorAddress","sort","goToValidator","App","basename","process","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a919413f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backArrow.9849fc2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.e6ceb267.svg\";","module.exports = __webpack_public_path__ + \"static/media/copy.173891ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.ccb4620e.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.87d19430.svg\";","module.exports = __webpack_public_path__ + \"static/media/cosmWasmLogo.15dccd19.svg\";","module.exports = __webpack_public_path__ + \"static/media/failIcon.71513020.svg\";","module.exports = __webpack_public_path__ + \"static/media/successIcon.2e305b66.svg\";","import React, { useState } from \"react\";\nimport { CW20Instance } from \"./cw20\";\n\ninterface ContractsContextType {\n  contracts: CW20Instance[];\n  readonly addContract: (newContract: CW20Instance) => void;\n}\n\nconst defaultContext: ContractsContextType = {\n  contracts: [],\n  addContract: function () {\n    return;\n  },\n};\n\nconst ContractsContext = React.createContext<ContractsContextType>(defaultContext);\n\nexport const useContracts = (): ContractsContextType => React.useContext(ContractsContext);\n\nexport function ContractsProvider({ children }: React.HTMLAttributes<HTMLOrSVGElement>): JSX.Element {\n  const [contracts, setContracts] = useState<CW20Instance[]>(defaultContext.contracts);\n\n  function addContract(newContract: CW20Instance) {\n    setContracts((contracts) => {\n      const notPresent = !contracts.find(\n        (contract) => contract.contractAddress === newContract.contractAddress,\n      );\n\n      if (notPresent) return [...contracts, newContract];\n      return contracts;\n    });\n  }\n\n  const value: ContractsContextType = { contracts, addContract };\n\n  return <ContractsContext.Provider value={value}>{children}</ContractsContext.Provider>;\n}\n","import * as React from \"react\";\n\ninterface ErrorContextType {\n  readonly error?: string;\n  readonly setError: (error: string) => void;\n  readonly clearError: () => void;\n}\n\nconst defaultContext: ErrorContextType = {\n  setError: () => {\n    return;\n  },\n  clearError: () => {\n    return;\n  },\n};\n\nconst ErrorContext = React.createContext<ErrorContextType>(defaultContext);\n\nexport const useError = (): ErrorContextType => React.useContext(ErrorContext);\n\nexport function ErrorProvider({ children }: React.HTMLAttributes<HTMLOrSVGElement>): JSX.Element {\n  const [error, setError] = React.useState<string>();\n\n  const context: ErrorContextType = {\n    error: error,\n    setError: setError,\n    clearError: () => {\n      setError(undefined);\n    },\n  };\n\n  return <ErrorContext.Provider value={context}>{children}</ErrorContext.Provider>;\n}\n","import { CosmWasmFeeTable } from \"@cosmjs/cosmwasm-launchpad\";\nimport { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\";\nimport { Bip39, Random } from \"@cosmjs/crypto\";\nimport { GasLimits, GasPrice, makeCosmoshubPath, OfflineSigner, Secp256k1HdWallet } from \"@cosmjs/launchpad\";\nimport { LedgerSigner } from \"@cosmjs/ledger-amino\";\nimport {\n  DistributionExtension,\n  QueryClient,\n  setupDistributionExtension,\n  setupStakingExtension,\n  StakingExtension,\n} from \"@cosmjs/stargate\";\nimport { adaptor34, Client as TendermintClient } from \"@cosmjs/tendermint-rpc\";\nimport TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\nimport { AppConfig } from \"../config\";\n\n// generateMnemonic will give you a fresh mnemonic\n// it is up to the app to store this somewhere\nexport function generateMnemonic(): string {\n  return Bip39.encode(Random.getBytes(16)).toString();\n}\n\n// some code that will only work in a browser...\nexport function loadOrCreateMnemonic(): string {\n  const key = \"burner-wallet\";\n  const loaded = localStorage.getItem(key);\n  if (loaded) {\n    return loaded;\n  }\n  const generated = generateMnemonic();\n  localStorage.setItem(key, generated);\n  return generated;\n}\n\nexport type WalletLoader = (chainId: string, addressPrefix?: string) => Promise<OfflineSigner>;\n\nexport async function loadOrCreateWallet(_chainId: string, addressPrefix?: string): Promise<OfflineSigner> {\n  const mnemonic = loadOrCreateMnemonic();\n  const hdPath = makeCosmoshubPath(0);\n  const wallet = await Secp256k1HdWallet.fromMnemonic(mnemonic, hdPath, addressPrefix);\n  return wallet;\n}\n\nexport async function loadLedgerWallet(_chainId: string, addressPrefix?: string): Promise<OfflineSigner> {\n  const interactiveTimeout = 120_000;\n  const ledgerTransport = await TransportWebUSB.create(interactiveTimeout, interactiveTimeout);\n\n  return new LedgerSigner(ledgerTransport, { hdPaths: [makeCosmoshubPath(0)], prefix: addressPrefix });\n}\n\nexport async function loadKeplrWallet(chainId: string): Promise<OfflineSigner> {\n  const anyWindow: any = window;\n  if (!anyWindow.getOfflineSigner) {\n    throw new Error(\"Keplr extension is not available\");\n  }\n\n  const signer = anyWindow.getOfflineSigner(chainId);\n  signer.signAmino = signer.signAmino ?? signer.sign;\n\n  return Promise.resolve(signer);\n}\n\n// this creates a new connection to a server at URL,\n// using a signing keyring generated from the given mnemonic\nexport async function createClient(config: AppConfig, signer: OfflineSigner): Promise<SigningCosmWasmClient> {\n  const gasLimits: GasLimits<CosmWasmFeeTable> = {\n    upload: 1500000,\n    init: 600000,\n    exec: 400000,\n    migrate: 600000,\n    send: 80000,\n    changeAdmin: 80000,\n  };\n\n  return SigningCosmWasmClient.connectWithSigner(config.rpcUrl, signer, {\n    prefix: config.addressPrefix,\n    gasPrice: GasPrice.fromString(`${config.gasPrice}${config.feeToken}`),\n    gasLimits: gasLimits,\n  });\n}\n\nexport async function createStakingClient(\n  apiUrl: string,\n): Promise<QueryClient & StakingExtension & DistributionExtension> {\n  const tmClient = await TendermintClient.connect(apiUrl, adaptor34);\n  return QueryClient.withExtensions(tmClient, setupStakingExtension, setupDistributionExtension);\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\";\nimport { FaucetClient } from \"@cosmjs/faucet-client\";\nimport { Coin, OfflineSigner } from \"@cosmjs/launchpad\";\nimport { QueryClient, StakingExtension, DistributionExtension } from \"@cosmjs/stargate\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { AppConfig } from \"../config\";\nimport { useError } from \"./error\";\nimport { createClient, createStakingClient } from \"./sdk\";\n\ninterface CosmWasmContextType {\n  readonly initialized: boolean;\n  readonly init: (signer: OfflineSigner) => void;\n  readonly clear: () => void;\n  readonly config: Partial<AppConfig>;\n  readonly changeConfig: (updates: Partial<AppConfig>) => void;\n  readonly address: string;\n  readonly balance: readonly Coin[];\n  readonly refreshBalance: () => Promise<void>;\n  readonly hitFaucet: () => Promise<void>;\n  readonly getSigner: () => OfflineSigner;\n  readonly changeSigner: (newSigner: OfflineSigner) => void;\n  readonly getClient: () => SigningCosmWasmClient;\n  readonly getStakingClient: () => QueryClient & StakingExtension & DistributionExtension;\n}\n\nfunction throwNotInitialized(): any {\n  throw new Error(\"Not yet initialized\");\n}\n\nconst defaultContext: CosmWasmContextType = {\n  initialized: false,\n  init: throwNotInitialized,\n  clear: throwNotInitialized,\n  config: {},\n  changeConfig: throwNotInitialized,\n  address: \"\",\n  balance: [],\n  refreshBalance: throwNotInitialized,\n  hitFaucet: throwNotInitialized,\n  getSigner: throwNotInitialized,\n  changeSigner: throwNotInitialized,\n  getClient: throwNotInitialized,\n  getStakingClient: throwNotInitialized,\n};\n\nconst CosmWasmContext = React.createContext<CosmWasmContextType>(defaultContext);\n\nexport const useSdk = (): CosmWasmContextType => React.useContext(CosmWasmContext);\n\ninterface SdkProviderProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly config: AppConfig;\n}\n\nexport function SdkProvider({ config: configProp, children }: SdkProviderProps): JSX.Element {\n  const { setError } = useError();\n\n  const [config, setConfig] = useState(configProp);\n  const [signer, setSigner] = useState<OfflineSigner>();\n  const [client, setClient] = useState<SigningCosmWasmClient>();\n\n  const contextWithInit = { ...defaultContext, init: setSigner };\n  const [value, setValue] = useState<CosmWasmContextType>(contextWithInit);\n\n  function clear(): void {\n    setValue({ ...contextWithInit });\n    setClient(undefined);\n    setSigner(undefined);\n    setConfig(configProp);\n  }\n\n  function changeConfig(updates: Partial<AppConfig>): void {\n    setConfig((config) => ({ ...config, ...updates }));\n  }\n\n  // Get balance for each coin specified in config.coinMap\n  async function refreshBalance(address: string, balance: Coin[]): Promise<void> {\n    if (!client) return;\n\n    balance.length = 0;\n    for (const denom in config.coinMap) {\n      const coin = await client.getBalance(address, denom);\n      if (coin) balance.push(coin);\n    }\n  }\n\n  // Get feeToken balance from faucet\n  async function hitFaucet(address: string): Promise<void> {\n    if (!config.faucetUrl || !config.feeToken) return;\n\n    try {\n      const faucet = new FaucetClient(config.faucetUrl);\n      await faucet.credit(address, config.feeToken);\n    } catch (error) {\n      setError(error.message);\n      console.error(error);\n    }\n  }\n\n  useEffect(() => {\n    if (!signer) return;\n\n    (async function updateClient(): Promise<void> {\n      try {\n        const client = await createClient(config, signer);\n        setClient(client);\n      } catch (error) {\n        setError(error.message);\n      }\n    })();\n  }, [signer, config]);\n\n  useEffect(() => {\n    if (!signer || !client) return;\n\n    const balance: Coin[] = [];\n\n    (async function updateValue(): Promise<void> {\n      const address = (await signer.getAccounts())[0].address;\n\n      await refreshBalance(address, balance);\n      if (!balance.find((coin) => coin.denom === config.feeToken)) {\n        await hitFaucet(address);\n      }\n      await refreshBalance(address, balance);\n\n      const stakingClient = await createStakingClient(config.rpcUrl);\n\n      setValue({\n        initialized: true,\n        init: () => {},\n        clear,\n        config,\n        changeConfig,\n        address,\n        balance,\n        refreshBalance: refreshBalance.bind(null, address, balance),\n        hitFaucet: hitFaucet.bind(null, address),\n        getSigner: () => signer,\n        changeSigner: setSigner,\n        getClient: () => client,\n        getStakingClient: () => stakingClient,\n      });\n    })();\n  }, [client]);\n\n  return <CosmWasmContext.Provider value={value}>{children}</CosmWasmContext.Provider>;\n}\n","import React from \"react\";\nimport { Redirect, Switch, SwitchProps } from \"react-router-dom\";\nimport { useSdk } from \"./wallet\";\n\nexport interface RedirectLocation {\n  readonly redirectPathname: string;\n  readonly redirectState: any;\n}\n\ninterface ProtectedSwitchProps extends SwitchProps {\n  readonly authPath: string;\n}\n\nexport function ProtectedSwitch({ authPath, children, location }: ProtectedSwitchProps): JSX.Element {\n  const { initialized } = useSdk();\n\n  return initialized ? (\n    <Switch location={location}>{children}</Switch>\n  ) : (\n    <Redirect\n      to={{\n        pathname: authPath,\n        state: location ? { redirectPathname: location.pathname, redirectState: location.state } : undefined,\n      }}\n    />\n  );\n}\n","import { Coin } from \"@cosmjs/launchpad\";\nimport { Decimal } from \"@cosmjs/math\";\n\n// NARROW NO-BREAK SPACE (U+202F)\nconst thinSpace = \"\\u202F\";\n\nexport function printableCoin(coin?: Coin): string {\n  if (!coin) {\n    return \"0\";\n  }\n  if (coin.denom.startsWith(\"u\")) {\n    const ticker = coin.denom.slice(1).toUpperCase();\n    return Decimal.fromAtomics(coin.amount, 6).toString() + thinSpace + ticker;\n  } else {\n    return coin.amount + thinSpace + coin.denom;\n  }\n}\n\nexport function printableBalance(balance?: readonly Coin[]): string {\n  if (!balance || balance.length === 0) return \"–\";\n  return balance.map(printableCoin).join(\", \");\n}\n\nexport interface MappedCoin {\n  readonly denom: string;\n  readonly fractionalDigits: number;\n}\n\nexport interface CoinMap {\n  readonly [key: string]: MappedCoin;\n}\n\nexport function nativeCoinToDisplay(coin: Coin, coinMap: CoinMap): Coin {\n  if (!coinMap) return coin;\n\n  const coinToDisplay = coinMap[coin.denom];\n  if (!coinToDisplay) return coin;\n\n  const amountToDisplay = Decimal.fromAtomics(coin.amount, coinToDisplay.fractionalDigits).toString();\n\n  return { denom: coinToDisplay.denom, amount: amountToDisplay };\n}\n\n// display amount is eg \"12.0346\", return is in native tokens\n// with 6 fractional digits, this would be eg. \"12034600\"\nexport function displayAmountToNative(\n  amountToDisplay: string,\n  coinMap: CoinMap,\n  nativeDenom: string,\n): string {\n  const fractionalDigits = coinMap[nativeDenom]?.fractionalDigits;\n  if (fractionalDigits) {\n    // use https://github.com/CosmWasm/cosmjs/blob/v0.22.2/packages/math/src/decimal.ts\n    const decimalAmount = Decimal.fromUserInput(amountToDisplay, fractionalDigits);\n    return decimalAmount.atomics;\n  }\n\n  return amountToDisplay;\n}\n","// Get string error from operation stack trace. Matches last line but removes last \"message index\" part\nexport function getErrorFromStackTrace(stackTrace: any): string {\n  const stringStackTrace = (stackTrace || \"\").toString();\n  const match = stringStackTrace.match(/.*\\s*$/g)[0];\n  const error = match.substring(0, match.lastIndexOf(\";\"));\n\n  return error || stringStackTrace;\n}\n","import * as React from \"react\";\n\nexport interface CenterProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly tag?: keyof JSX.IntrinsicElements;\n}\n\nexport function Center({ tag: Tag = \"div\", children, ...props }: CenterProps): JSX.Element {\n  return <Tag {...props}>{children}</Tag>;\n}\n","import styled from \"styled-components\";\nimport { Center } from \"./component\";\n\nexport const StyledCenter = styled(Center)`\n  box-sizing: content-box;\n\n  max-width: var(--max-width, none);\n\n  margin-left: auto;\n  margin-right: auto;\n\n  text-align: center;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import * as React from \"react\";\n\nexport interface StackProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly tag?: keyof JSX.IntrinsicElements;\n}\n\nexport function Stack({ tag: Tag = \"div\", children, ...props }: StackProps): JSX.Element {\n  return <Tag {...props}>{children}</Tag>;\n}\n","import styled from \"styled-components\";\nimport { Stack } from \"./component\";\n\nexport const StyledStack = styled(Stack)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  & > * {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  & > * + * {\n    margin-top: var(--gap, var(--s0));\n  }\n`;\n","import { Center, CenterProps } from \"../Center\";\nimport * as React from \"react\";\n\nexport function PageLayout({ children, ...props }: CenterProps): JSX.Element {\n  return (\n    <Center tag=\"main\" {...props}>\n      {children}\n    </Center>\n  );\n}\n","import styled from \"styled-components\";\nimport { PageLayout } from \"./component\";\n\nexport const StyledPageLayout = styled(PageLayout)`\n  --max-width: 22rem;\n  --gap: var(--s8);\n\n  padding: var(--s4);\n\n  /* Reduces padding when width < 380px, but uses em for better media query support */\n  @media (max-width: 23.6875em) {\n    padding: var(--s-1) 0 var(--s-2) 0;\n  }\n\n  [alt=\"Back arrow\"] {\n    align-self: flex-start;\n  }\n`;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport interface BackButtonProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly icon: string;\n  readonly path?: string;\n  readonly state?: any;\n}\n\nexport function BackButton({ icon, path, state, ...props }: BackButtonProps): JSX.Element {\n  const history = useHistory();\n  const goBack = path ? () => history.push(path, state) : history.goBack;\n\n  return <img src={icon} alt=\"Back arrow\" onClick={goBack} {...props} />;\n}\n","import styled from \"styled-components\";\nimport { BackButton } from \"./component\";\n\nexport const StyledBackButton = styled(BackButton)`\n  cursor: pointer;\n`;\n","import { Spin } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const StyledSpin = styled(Spin)`\n  & > span + div {\n    margin-top: var(--s2);\n  }\n`;\n","import { LoadingOutlined } from \"@ant-design/icons\";\nimport * as React from \"react\";\nimport { PageLayout } from \"../../layout/PageLayout\";\nimport { StyledSpin } from \"./style\";\n\nconst spinIndicator = <LoadingOutlined style={{ fontSize: \"6.25rem\" }} spin />;\n\ninterface LoadingProps {\n  readonly loadingText?: string;\n}\n\nexport function Loading({ loadingText }: LoadingProps): JSX.Element {\n  const tip = loadingText || \"Loading...\";\n\n  return (\n    <PageLayout>\n      <StyledSpin indicator={spinIndicator} tip={tip} />\n    </PageLayout>\n  );\n}\n","import { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport { Stack } from \"../../layout/Stack\";\n\nconst { Text } = Typography;\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s9);\n  }\n`;\n\nexport const WelcomeStack = styled(Stack)`\n  & > * {\n    --gap: var(--s3);\n  }\n`;\n\nexport const LightText = styled(Text)`\n  display: block;\n  font-weight: lighter;\n`;\n\nexport const ErrorText = styled(Text)`\n  color: var(--color-red);\n`;\n","import {\n  AppConfig,\n  configKeplr,\n  loadKeplrWallet,\n  loadLedgerWallet,\n  loadOrCreateWallet,\n  RedirectLocation,\n  useError,\n  useSdk,\n  WalletLoader,\n} from \"@cosmicdapp/logic\";\nimport { Button, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PageLayout } from \"../../layout/PageLayout\";\nimport { Loading } from \"../../logic/Loading\";\nimport { ErrorText, LightText, MainStack, WelcomeStack } from \"./style\";\n\nconst { Title } = Typography;\n\nfunction disableLedgerLogin() {\n  const anyNavigator: any = navigator;\n  return !anyNavigator?.usb;\n}\n\nfunction disableKeplrLogin() {\n  // TODO find check that works on reload\n  //const anyWindow: any = window;\n  //return !(anyWindow.getOfflineSigner && anyWindow.keplr.experimentalSuggestChain);\n  return false;\n}\n\ninterface LoginProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly pathAfterLogin: string;\n  readonly appName: string;\n  readonly appLogo: string;\n  readonly config: AppConfig;\n}\n\nexport function Login({ config, pathAfterLogin, appName, appLogo, ...restProps }: LoginProps): JSX.Element {\n  const history = useHistory();\n  const state = history.location.state as RedirectLocation;\n  const { error, setError, clearError } = useError();\n  const sdk = useSdk();\n\n  const [initializing, setInitializing] = useState(false);\n\n  async function init(loadWallet: WalletLoader) {\n    setInitializing(true);\n    clearError();\n\n    try {\n      const signer = await loadWallet(config.chainId, config.addressPrefix);\n      sdk.init(signer);\n    } catch (error) {\n      console.error(error);\n      setError(Error(error).message);\n      setInitializing(false);\n    }\n  }\n\n  async function initBrowser() {\n    await init(loadOrCreateWallet);\n  }\n\n  async function initLedger() {\n    await init(loadLedgerWallet);\n  }\n\n  async function initKeplr() {\n    const anyWindow: any = window;\n    try {\n      await anyWindow.keplr.experimentalSuggestChain(configKeplr(config));\n      await anyWindow.keplr.enable(config.chainId);\n      await init(loadKeplrWallet);\n    } catch (error) {\n      console.error(error);\n      setError(Error(error).message);\n    }\n  }\n\n  useEffect(() => {\n    if (!sdk.initialized) return;\n\n    if (state) {\n      history.push(state.redirectPathname, state.redirectState);\n    } else {\n      history.push(pathAfterLogin);\n    }\n  }, [sdk.initialized, state, history]);\n\n  return initializing ? (\n    <Loading loadingText=\"Initializing app...\" />\n  ) : (\n    <PageLayout {...restProps}>\n      <MainStack>\n        <img src={appLogo} alt=\"CosmWasm logo\" />\n        <WelcomeStack>\n          <Typography>\n            <Title level={2}>Hello!</Title>\n            <LightText>Welcome to your {appName}</LightText>\n            <LightText>Select one of the following options to start:</LightText>\n          </Typography>\n          {error && <ErrorText>{error}</ErrorText>}\n          <Button type=\"primary\" onClick={initBrowser}>\n            Browser (Demo)\n          </Button>\n          <Button type=\"primary\" disabled={disableLedgerLogin()} onClick={initLedger}>\n            Ledger (Secure, Chrome)\n          </Button>\n          <Button type=\"primary\" disabled={disableKeplrLogin()} onClick={initKeplr}>\n            Keplr (Secure)\n          </Button>\n        </WelcomeStack>\n      </MainStack>\n    </PageLayout>\n  );\n}\n","import { CoinMap } from \"./utils\";\n\nexport interface KeplrCoin {\n  readonly coinDenom: string;\n  readonly coinMinimalDenom: string;\n  readonly coinDecimals: number;\n}\n\nexport interface KeplrConfig {\n  readonly chainId: string;\n  readonly chainName: string;\n  readonly rpc: string;\n  readonly rest: string;\n  readonly bech32Config: {\n    readonly bech32PrefixAccAddr: string;\n    readonly bech32PrefixAccPub: string;\n    readonly bech32PrefixValAddr: string;\n    readonly bech32PrefixValPub: string;\n    readonly bech32PrefixConsAddr: string;\n    readonly bech32PrefixConsPub: string;\n  };\n  readonly currencies: readonly KeplrCoin[];\n  readonly feeCurrencies: readonly KeplrCoin[];\n  readonly stakeCurrency: KeplrCoin;\n  readonly gasPriceStep: {\n    readonly low: number;\n    readonly average: number;\n    readonly high: number;\n  };\n  readonly bip44: { readonly coinType: number };\n  readonly coinType: number;\n}\n\nexport interface AppConfig {\n  readonly chainId: string;\n  readonly chainName: string;\n  readonly addressPrefix: string;\n  readonly rpcUrl: string;\n  readonly httpUrl: string;\n  readonly faucetUrl: string;\n  readonly feeToken: string;\n  readonly stakingToken: string;\n  readonly coinMap: CoinMap;\n  readonly gasPrice: number;\n  readonly codeId?: number;\n}\n\nexport interface NetworkConfigs {\n  readonly local: AppConfig;\n  readonly [key: string]: AppConfig;\n}\n\nexport function getAppConfig(configs: NetworkConfigs): AppConfig {\n  const network = process.env.REACT_APP_NETWORK;\n  if (!network) return configs.local;\n\n  const config = configs[network];\n  if (!config) {\n    throw new Error(`No configuration found for network ${network}`);\n  }\n\n  return config;\n}\n\nexport function configKeplr(config: AppConfig): KeplrConfig {\n  return {\n    chainId: config.chainId,\n    chainName: config.chainName,\n    rpc: config.rpcUrl,\n    rest: config.httpUrl,\n    bech32Config: {\n      bech32PrefixAccAddr: `${config.addressPrefix}`,\n      bech32PrefixAccPub: `${config.addressPrefix}pub`,\n      bech32PrefixValAddr: `${config.addressPrefix}valoper`,\n      bech32PrefixValPub: `${config.addressPrefix}valoperpub`,\n      bech32PrefixConsAddr: `${config.addressPrefix}valcons`,\n      bech32PrefixConsPub: `${config.addressPrefix}valconspub`,\n    },\n    currencies: [\n      {\n        coinDenom: config.coinMap[config.feeToken].denom,\n        coinMinimalDenom: config.feeToken,\n        coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n      },\n      {\n        coinDenom: config.coinMap[config.stakingToken].denom,\n        coinMinimalDenom: config.stakingToken,\n        coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n      },\n    ],\n    feeCurrencies: [\n      {\n        coinDenom: config.coinMap[config.feeToken].denom,\n        coinMinimalDenom: config.feeToken,\n        coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n      },\n    ],\n    stakeCurrency: {\n      coinDenom: config.coinMap[config.stakingToken].denom,\n      coinMinimalDenom: config.stakingToken,\n      coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n    },\n    gasPriceStep: {\n      low: config.gasPrice / 2,\n      average: config.gasPrice,\n      high: config.gasPrice * 2,\n    },\n    bip44: { coinType: 118 },\n    coinType: 118,\n  };\n}\n","import { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport { Stack } from \"../../layout/Stack\";\n\nconst { Text } = Typography;\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s3);\n  }\n`;\n\nexport const ResultText = styled(Text)`\n  font-size: var(--s-1);\n\n  &[data-result=\"success\"] {\n    color: var(--color-green);\n  }\n\n  &[data-result=\"failure\"] {\n    color: var(--color-red);\n  }\n`;\n","import { Button } from \"antd\";\nimport { History } from \"history\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PageLayout } from \"../../layout/PageLayout\";\nimport { MainStack, ResultText } from \"./style\";\n\ninterface ResultContent {\n  readonly result: \"success\" | \"failure\";\n  readonly icon: string;\n  readonly buttonText: string;\n  readonly buttonAction: () => void;\n}\n\nexport interface OperationResultState {\n  readonly success: boolean;\n  readonly message: string;\n  readonly error?: string;\n  readonly customButtonText?: string;\n  readonly customButtonActionPath?: string;\n  readonly customButtonActionState?: any;\n}\n\nexport interface OperationResultProps {\n  readonly defaultButtonAction: (history: History) => void;\n  readonly successIcon: string;\n  readonly failIcon: string;\n}\n\nexport function OperationResult({\n  defaultButtonAction,\n  successIcon,\n  failIcon,\n}: OperationResultProps): JSX.Element {\n  const history = useHistory();\n\n  const {\n    success,\n    message,\n    error,\n    customButtonText,\n    customButtonActionPath,\n    customButtonActionState,\n  } = history.location.state as OperationResultState;\n\n  function getResultContent(success: boolean): ResultContent {\n    if (success) {\n      return {\n        result: \"success\",\n        icon: successIcon,\n        buttonText: \"Home\",\n        buttonAction: () => defaultButtonAction(history),\n      };\n    }\n\n    return {\n      result: \"failure\",\n      icon: failIcon,\n      buttonText: \"Retry\",\n      buttonAction: history.goBack,\n    };\n  }\n\n  const { icon, result, buttonText, buttonAction } = getResultContent(success);\n\n  const chosenButtonText = customButtonText || buttonText;\n  const chosenButtonAction = customButtonActionPath\n    ? () => history.push(customButtonActionPath, customButtonActionState)\n    : buttonAction;\n\n  return (\n    <PageLayout>\n      <MainStack>\n        <img src={icon} alt=\"Result icon\" />\n        <ResultText data-result={result}>{message}</ResultText>\n        {error && <ResultText data-result={result}>{error}</ResultText>}\n        <Button type=\"primary\" onClick={chosenButtonAction}>\n          {chosenButtonText}\n        </Button>\n      </MainStack>\n    </PageLayout>\n  );\n}\n","import { printableBalance, useSdk } from \"@cosmicdapp/logic\";\nimport { Button, Divider, Typography } from \"antd\";\nimport copyToClipboard from \"clipboard-copy\";\nimport React from \"react\";\nimport { StackProps } from \"../../layout/Stack\";\nimport { AccountStack } from \"./style\";\n\nconst { Title, Text } = Typography;\n\ninterface YourAccountProps extends StackProps {\n  readonly hideTitle?: boolean;\n  readonly hideBalance?: boolean;\n}\n\nexport function YourAccount({ tag, hideTitle, hideBalance }: YourAccountProps): JSX.Element {\n  const { address, balance } = useSdk();\n\n  return (\n    <AccountStack tag={tag}>\n      {!hideTitle && (\n        <header>\n          <Title level={3}>Your Account</Title>\n          {!hideBalance && <Divider />}\n        </header>\n      )}\n      <Text>{address}</Text>\n      {!hideBalance && <Text>({printableBalance(balance)})</Text>}\n      <Button type=\"primary\" onClick={() => copyToClipboard(address)}>\n        Copy Account Address\n      </Button>\n    </AccountStack>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalAntOverride = createGlobalStyle`\n  .ant-btn:not(.ant-input-search-button) {\n    width: var(--max-width);\n    max-width: 100vw;\n  }\n  \n  .ant-form div[role=\"alert\"] li {\n    color: var(--form-error);\n    font-size: var(--s-1);\n    text-align: left;\n    margin: var(--s-1);\n  \n    &::before {\n      content: \"* \";\n    }\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalColors = createGlobalStyle`\n  :root {\n    --color-black: #333;\n    --color-gray-light: #f2f2f2;\n    --color-red: #eb5757;\n    --color-green: #27ae60;\n    --color-blue: #2f80ed;\n    --color-blue-light: #1890ff;\n\n    --color-primary: var(--color-blue);\n    --button-color: var(--color-blue-light);\n    --text-color: var(--color-primary);\n    --heading-color: var(--color-primary);\n    --form-error: var(--color-red);\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalFonts = createGlobalStyle`\n  :root {\n    --ff-montserrat: Montserrat, sans-serif;\n    --ff-iceland: Iceland, serif;\n\n    --ff-text: var(--ff-montserrat);\n    --ff-heading: var(--ff-iceland);\n    \n    font-family: var(--ff-text);\n  }\n\n  p,\n  span {\n    font-family: var(--ff-text);\n    font-size: var(--s0);\n    overflow-wrap: anywhere;\n  }\n  \n  h1,\n  h2,\n  h3 {\n    font-family: var(--ff-heading);\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalReset = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n  \n  html {\n    scroll-behavior: smooth;\n  }\n  \n  body {\n    min-height: 100vh;\n    line-height: 1.5;\n    text-rendering: optimizeSpeed;\n  }\n  \n  body,\n  h1,\n  h2,\n  p,\n  ul[class],\n  ol[class] {\n    margin: 0;\n  }\n  \n  ul[class],\n  ol[class] {\n    padding: 0;\n    list-style: none;\n  }\n  \n  button,\n  input,\n  select,\n  textarea {\n    font: inherit;\n  }\n  \n  img {\n    display: block;\n    max-width: 100%;\n  }\n  \n  @media (prefers-reduced-motion: reduce) {\n    * {\n      animation-duration: 0.01s !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01s !important;\n      scroll-behavior: auto !important;\n    }\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalSpacing = createGlobalStyle`\n  :root {\n    --ratio: 1.25;\n\n    --s-6: calc(var(--s-5) / var(--ratio));\n    --s-5: calc(var(--s-4) / var(--ratio));\n    --s-4: calc(var(--s-3) / var(--ratio));\n    --s-3: calc(var(--s-2) / var(--ratio));\n    --s-2: calc(var(--s-1) / var(--ratio));\n    --s-1: calc(var(--s0) / var(--ratio));\n    --s0: 1rem;\n    --s1: calc(var(--s0) * var(--ratio));\n    --s2: calc(var(--s1) * var(--ratio));\n    --s3: calc(var(--s2) * var(--ratio));\n    --s4: calc(var(--s3) * var(--ratio));\n    --s5: calc(var(--s4) * var(--ratio));\n    --s6: calc(var(--s5) * var(--ratio));\n    --s7: calc(var(--s6) * var(--ratio));\n    --s8: calc(var(--s7) * var(--ratio));\n    --s9: calc(var(--s8) * var(--ratio));\n  }\n`;\n","import React from \"react\";\nimport { GlobalAntOverride } from \"./GlobalAntOverride\";\nimport { GlobalColors } from \"./GlobalColors\";\nimport { GlobalFonts } from \"./GlobalFonts\";\nimport { GlobalReset } from \"./GlobalReset\";\nimport { GlobalSpacing } from \"./GlobalSpacing\";\n\nexport function GlobalStyle(): JSX.Element {\n  return (\n    <>\n      <GlobalReset />\n      <GlobalSpacing />\n      <GlobalColors />\n      <GlobalFonts />\n      <GlobalAntOverride />\n    </>\n  );\n}\n","import { AppConfig, getAppConfig, NetworkConfigs } from \"@cosmicdapp/logic\";\n\nconst local: AppConfig = {\n  chainId: \"testing\",\n  chainName: \"Testing\",\n  addressPrefix: \"wasm\",\n  rpcUrl: \"http://localhost:26659\",\n  httpUrl: \"http://localhost:1317\",\n  faucetUrl: \"http://localhost:8000\",\n  feeToken: \"ucosm\",\n  stakingToken: \"uatom\",\n  coinMap: {\n    ucosm: { denom: \"COSM\", fractionalDigits: 6 },\n    uatom: { denom: \"ATOM\", fractionalDigits: 6 },\n  },\n  gasPrice: 0.025,\n  // TODO make sure it's correct\n  codeId: 129,\n};\n\nconst musselnet: AppConfig = {\n  chainId: \"musselnet-2\",\n  chainName: \"Musselnet\",\n  addressPrefix: \"wasm\",\n  rpcUrl: \"https://rpc.musselnet.cosmwasm.com\",\n  httpUrl: \"https://lcd.musselnet.cosmwasm.com\",\n  faucetUrl: \"https://faucet.musselnet.cosmwasm.com\",\n  feeToken: \"umayo\",\n  stakingToken: \"ufrites\",\n  coinMap: {\n    umayo: { denom: \"MAYO\", fractionalDigits: 6 },\n    ufrites: { denom: \"FRITES\", fractionalDigits: 6 },\n  },\n  gasPrice: 0.025,\n  codeId: 5,\n};\n\nconst configs: NetworkConfigs = { local, musselnet };\nexport const config = getAppConfig(configs);\n","import { Center, Stack } from \"@cosmicdapp/design\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\n\nconst { Text } = Typography;\n\nexport const OpenMenuButton = styled.img`\n  cursor: pointer;\n  width: 2.625rem;\n`;\n\nexport const CloseMenuButton = styled.img`\n  cursor: pointer;\n  width: 1.75rem;\n`;\n\nexport const MenuCenter = styled(Center)`\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n\n  min-width: var(--max-width);\n  padding: var(--s0);\n  background-color: var(--color-blue);\n`;\n\nexport const MenuStack = styled(Stack)`\n  width: 100%;\n  color: var(--color-gray-light);\n\n  & > * {\n    --gap: var(--s4);\n  }\n`;\n\nexport const CloseAccountStack = styled(Stack)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 100%;\n\n  & > * {\n    --gap: var(--s0);\n  }\n\n  & > img {\n    align-self: flex-end;\n  }\n`;\n\nexport const AvatarName = styled.div`\n  display: flex;\n`;\n\nexport const NameText = styled(Text)`\n  margin-left: var(--s-1);\n  font-size: var(--s2);\n  color: inherit;\n`;\n\nexport const AddressCopyBox = styled.div`\n  width: 100%;\n  padding: var(--s-4) 0;\n  border-radius: 2px;\n  background-color: var(--color-gray-light);\n\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport const AddressText = styled(Text)`\n  font-size: var(--s-2);\n`;\n\nexport const AddressCopy = styled.img`\n  cursor: pointer;\n`;\n\nexport const LinksStack = styled(Stack)`\n  & > * {\n    --gap: var(--s-3);\n  }\n`;\n\nexport const LinkText = styled(Text)`\n  cursor: pointer;\n\n  font-family: var(--ff-iceland);\n  font-size: var(--s5);\n\n  color: inherit;\n`;\n","import { useSdk } from \"@cosmicdapp/logic\";\nimport copyToClipboard from \"clipboard-copy\";\nimport React, { useState } from \"react\";\nimport avatarIcon from \"./assets/avatar.svg\";\nimport copyIcon from \"./assets/copy.svg\";\nimport closeMenuButton from \"./assets/cross.svg\";\nimport openMenuButton from \"./assets/hamburger.svg\";\nimport {\n  AddressCopy,\n  AddressCopyBox,\n  AddressText,\n  AvatarName,\n  CloseAccountStack,\n  CloseMenuButton,\n  MenuCenter,\n  MenuStack,\n  NameText,\n  OpenMenuButton,\n} from \"./style\";\n\nexport interface AccountMenuProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly name?: string;\n}\n\nexport function AccountMenu({ name, ...props }: AccountMenuProps): JSX.Element {\n  const { address } = useSdk();\n\n  // NOTE Link functionality not clear, removing for now\n  /* const history = useHistory();\n   function goToHelp() {\n    //TODO: set path to help\n    history.push(pathValidator);\n  }\n  function goToLogout() {\n    //TODO: set path to logout\n    history.push(pathValidator);\n  } */\n\n  const [open, setOpen] = useState(false);\n  const openMenu = () => setOpen(true);\n  const closeMenu = () => setOpen(false);\n\n  const accountName = name ? `${name}'s` : \"Your\";\n\n  return (\n    <>\n      <OpenMenuButton src={openMenuButton} alt=\"Open account menu\" onClick={openMenu} {...props} />\n      {open && (\n        <MenuCenter {...props}>\n          <MenuStack>\n            <CloseAccountStack>\n              <CloseMenuButton src={closeMenuButton} alt=\"Close account menu\" onClick={closeMenu} />\n              <AvatarName>\n                <img src={avatarIcon} alt=\"Avatar\" />\n                <NameText>{accountName} account</NameText>\n              </AvatarName>\n              <AddressCopyBox>\n                <AddressText>{address}</AddressText>\n                <AddressCopy\n                  src={copyIcon}\n                  alt=\"Copy address icon\"\n                  onClick={() => {\n                    copyToClipboard(address);\n                  }}\n                />\n              </AddressCopyBox>\n            </CloseAccountStack>\n            {\n              // NOTE Link functionality not clear, removing for now\n              /* <LinksStack>\n              <div onClick={goToHelp}>\n                <LinkText>Help</LinkText>\n              </div>\n              <div onClick={goToLogout}>\n                <LinkText>Logout</LinkText>\n              </div>\n            </LinksStack> */\n            }\n          </MenuStack>\n        </MenuCenter>\n      )}\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { BackButton, BackButtonProps } from \"@cosmicdapp/design\";\nimport React from \"react\";\nimport backArrowIcon from \"../../assets/backArrow.svg\";\nimport { AccountMenu, AccountMenuProps } from \"../AccountMenu\";\nimport { Header } from \"./style\";\n\ntype HeaderBackMenu = Omit<BackButtonProps, \"icon\"> & AccountMenuProps;\n\nexport function HeaderBackMenu({ path, state, name, ...props }: HeaderBackMenu): JSX.Element {\n  return (\n    <Header {...props}>\n      <BackButton icon={backArrowIcon} path={path} state={state} />\n      <AccountMenu name={name} />\n    </Header>\n  );\n}\n","import { useError, useSdk } from \"@cosmicdapp/logic\";\nimport { Decimal } from \"@cosmjs/math\";\nimport { codec } from \"@cosmjs/stargate\";\nimport { useEffect, useState } from \"react\";\n\nexport type StakingValidator = codec.cosmos.staking.v1beta1.IValidator;\nexport interface EncodeObject<T, V> {\n  readonly typeUrl: T;\n  readonly value: V;\n}\nexport type EncodeMsgDelegate = EncodeObject<\n  \"/cosmos.staking.v1beta1.MsgDelegate\",\n  codec.cosmos.staking.v1beta1.IMsgDelegate\n>;\nexport type EncodeMsgUndelegate = EncodeObject<\n  \"/cosmos.staking.v1beta1.MsgUndelegate\",\n  codec.cosmos.staking.v1beta1.IMsgUndelegate\n>;\nexport type EncodeMsgWithdrawDelegatorReward = EncodeObject<\n  \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\",\n  codec.cosmos.distribution.v1beta1.IMsgWithdrawDelegatorReward\n>;\n\nexport function useStakingValidator(validatorAddress: string): StakingValidator {\n  const { setError } = useError();\n  const { getStakingClient } = useSdk();\n  const [validator, setValidator] = useState<StakingValidator>();\n\n  useEffect(() => {\n    (async function updateValidator() {\n      try {\n        const { validator } = await getStakingClient().staking.unverified.validator(validatorAddress);\n        setValidator(validator);\n      } catch (error) {\n        setError(error.message);\n        console.error(error);\n      }\n    })();\n  }, [getStakingClient, validatorAddress, setError]);\n\n  return validator;\n}\n\nexport function formatShares(shares: string): string {\n  return Decimal.fromUserInput(shares, 18).toString();\n}\n\nexport function formatUpdateTime(updateTime: string): string {\n  return new Date(updateTime).toLocaleString(undefined, {\n    year: \"2-digit\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  });\n}\n","import { Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const FormStack = styled(Stack)`\n  & > * {\n    --gap: var(--s0);\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n\n  button {\n    margin-top: var(--s2);\n  }\n`;\n\nexport const StakePerToken = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n\n  span {\n    font-family: var(--ff-iceland);\n    font-size: var(--s2);\n    line-height: var(--s2);\n  }\n\n  span + span {\n    margin-left: var(--s2);\n\n    font-family: var(--ff-montserrat);\n    font-weight: bolder;\n    font-size: var(--s2);\n    line-height: var(--s2);\n  }\n`;\n\nexport const FormField = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  & > * + * {\n    margin-left: var(--s0);\n  }\n\n  .ant-typography {\n    flex-grow: 0;\n    flex-shrink: 1;\n    text-align: left;\n  }\n\n  .ant-form-item {\n    flex-grow: 1;\n    flex-shrink: 0;\n    max-width: 13.5rem;\n  }\n\n  span {\n    font-family: var(--ff-iceland);\n    font-size: var(--s2);\n    line-height: var(--s2);\n  }\n`;\n","import { useSdk } from \"@cosmicdapp/logic\";\nimport { Coin } from \"@cosmjs/launchpad\";\nimport { Decimal } from \"@cosmjs/math\";\nimport { Button, Typography } from \"antd\";\nimport { Formik } from \"formik\";\nimport { Form, FormItem, Input } from \"formik-antd\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { config } from \"../../../../config\";\nimport { FormField, FormStack } from \"./style\";\n\nconst { Text } = Typography;\n\nexport interface FormDelegateBalanceFields {\n  readonly amount: string;\n}\n\ninterface FormDelegateBalanceProps {\n  readonly submitDelegateBalance: (values: FormDelegateBalanceFields) => Promise<void>;\n}\n\nexport function FormDelegateBalance({ submitDelegateBalance }: FormDelegateBalanceProps): JSX.Element {\n  const { balance } = useSdk();\n\n  const stakingBalance: Coin = balance.find((coin) => coin.denom === config.stakingToken);\n  const stakingDecimals = config.coinMap[config.stakingToken].fractionalDigits;\n  const maxAmount = stakingBalance\n    ? Decimal.fromAtomics(stakingBalance.amount, stakingDecimals).toFloatApproximation()\n    : 0;\n\n  const delegateBalanceValidationSchema = Yup.object().shape({\n    amount: Yup.number()\n      .required(\"An amount is required\")\n      .positive(\"Amount should be positive\")\n      .max(maxAmount),\n  });\n\n  return (\n    <Formik\n      initialValues={{ amount: \"\" }}\n      onSubmit={submitDelegateBalance}\n      validationSchema={delegateBalanceValidationSchema}\n    >\n      {(formikProps) => {\n        const formDisabled = !(formikProps.isValid && formikProps.dirty);\n\n        return (\n          <Form>\n            <FormStack>\n              <FormField>\n                <Text>{config.coinMap[config.stakingToken].denom}</Text>\n                <FormItem name=\"amount\">\n                  <Input name=\"amount\" placeholder=\"Enter amount\" />\n                </FormItem>\n              </FormField>\n              <Button type=\"primary\" onClick={formikProps.submitForm} disabled={formDisabled}>\n                Delegate\n              </Button>\n            </FormStack>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n}\n","import { Center, Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s6);\n  }\n`;\n\nexport const HeaderTitleStack = styled(Stack)`\n  & > * {\n    --gap: var(--s0);\n  }\n\n  h1.ant-typography,\n  h2.ant-typography {\n    margin: 0;\n    margin-top: var(--gap);\n  }\n\n  h1 {\n    font-size: var(--s2);\n    line-height: var(--s2);\n  }\n\n  h2 {\n    font-size: var(--s5);\n    line-height: var(--s5);\n  }\n`;\n\nexport const NavCenter = styled(Center)`\n  --max-width: none;\n`;\n\nexport const ButtonStack = styled(Stack)`\n  & > * {\n    --gap: var(--s0);\n  }\n`;\n","import { Loading, PageLayout } from \"@cosmicdapp/design\";\nimport { displayAmountToNative, getErrorFromStackTrace, useSdk } from \"@cosmicdapp/logic\";\nimport { Coin, coins } from \"@cosmjs/launchpad\";\nimport { isBroadcastTxFailure } from \"@cosmjs/stargate\";\nimport { Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { config } from \"../../../config\";\nimport { HeaderBackMenu } from \"../../components/HeaderBackMenu\";\nimport { pathDelegate, pathOperationResult, pathValidators } from \"../../paths\";\nimport { EncodeMsgDelegate, useStakingValidator } from \"../../utils/staking\";\nimport { FormDelegateBalance, FormDelegateBalanceFields } from \"./FormDelegateBalance\";\nimport { HeaderTitleStack, MainStack } from \"./style\";\n\nconst { Title } = Typography;\n\ninterface DelegateParams {\n  readonly validatorAddress: string;\n}\n\nexport function Delegate(): JSX.Element {\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { validatorAddress } = useParams<DelegateParams>();\n  const { getClient, address, refreshBalance } = useSdk();\n\n  const validator = useStakingValidator(validatorAddress);\n\n  async function submitDelegateBalance({ amount }: FormDelegateBalanceFields) {\n    setLoading(true);\n\n    const nativeAmountString = displayAmountToNative(amount, config.coinMap, config.stakingToken);\n    const nativeAmountCoin: Coin = { amount: nativeAmountString, denom: config.stakingToken };\n\n    const delegateMsg: EncodeMsgDelegate = {\n      typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\",\n      value: {\n        delegatorAddress: address,\n        validatorAddress: validatorAddress,\n        amount: nativeAmountCoin,\n      },\n    };\n\n    const fee = {\n      amount: coins(\n        config.gasPrice * 10 ** config.coinMap[config.feeToken].fractionalDigits,\n        config.feeToken,\n      ),\n      gas: \"1500000\",\n    };\n\n    try {\n      const response = await getClient().signAndBroadcast(address, [delegateMsg], fee);\n      if (isBroadcastTxFailure(response)) {\n        throw Error(\"Delegate failed\");\n      }\n\n      refreshBalance();\n\n      history.push({\n        pathname: pathOperationResult,\n        state: {\n          success: true,\n          message: `${amount} ${config.coinMap[config.stakingToken].denom} successfully delegated`,\n          customButtonText: \"Validator home\",\n          customButtonActionPath: `${pathValidators}/${validatorAddress}`,\n        },\n      });\n    } catch (stackTrace) {\n      console.error(stackTrace);\n\n      history.push({\n        pathname: pathOperationResult,\n        state: {\n          success: false,\n          message: \"Delegate transaction failed:\",\n          error: getErrorFromStackTrace(stackTrace),\n          customButtonActionPath: `${pathValidators}/${validatorAddress}${pathDelegate}`,\n        },\n      });\n    }\n  }\n\n  return (\n    (loading && <Loading loadingText={`Delegating...`} />) ||\n    (!loading && (\n      <PageLayout>\n        <MainStack>\n          <HeaderTitleStack>\n            <HeaderBackMenu path={`${pathValidators}/${validatorAddress}`} />\n            <Title>Delegate</Title>\n            <Title level={2}>{validator?.description.moniker ?? \"\"}</Title>\n          </HeaderTitleStack>\n          <FormDelegateBalance submitDelegateBalance={submitDelegateBalance} />\n        </MainStack>\n      </PageLayout>\n    ))\n  );\n}\n","export const pathLogin = \"/login\";\nexport const pathValidators = \"/validators\";\nexport const pathDelegate = \"/delegate\";\nexport const pathUndelegate = \"/undelegate\";\nexport const pathRewards = \"/rewards\";\nexport const pathOperationResult = \"/result\";\n","import { Login as LoginDesign } from \"@cosmicdapp/design\";\nimport React from \"react\";\nimport { config } from \"../../../config\";\nimport { pathValidators } from \"../../paths\";\nimport cosmWasmLogo from \"./assets/cosmWasmLogo.svg\";\n\nexport function Login(): JSX.Element {\n  return (\n    <LoginDesign\n      pathAfterLogin={pathValidators}\n      appName=\"Staking service\"\n      appLogo={cosmWasmLogo}\n      config={config}\n    />\n  );\n}\n","import { OperationResult as OperationResultDesign } from \"@cosmicdapp/design\";\nimport { History } from \"history\";\nimport React from \"react\";\nimport { pathValidators } from \"../../paths\";\nimport failIcon from \"./assets/failIcon.svg\";\nimport successIcon from \"./assets/successIcon.svg\";\n\nfunction goToValidators(history: History) {\n  history.push(pathValidators);\n}\n\nexport function OperationResult(): JSX.Element {\n  return (\n    <OperationResultDesign\n      defaultButtonAction={goToValidators}\n      successIcon={successIcon}\n      failIcon={failIcon}\n    />\n  );\n}\n","import { Stack } from \"@cosmicdapp/design\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\n\nconst { Text } = Typography;\n\nexport const ListStack = styled(Stack)`\n  & > * {\n    --gap: var(--s0);\n  }\n\n  div[role=\"separator\"] {\n    margin-bottom: 0;\n  }\n`;\n\nexport const DataRow = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n`;\n\nexport const KeyText = styled(Text)`\n  font-family: var(--ff-iceland);\n  font-size: var(--s2);\n  line-height: var(--s2);\n`;\n\nexport const ValueText = styled(Text)`\n  font-family: var(--ff-montserrat);\n  font-weight: bolder;\n  font-size: var(--s-1);\n  line-height: var(--s-1);\n`;\n","import { Divider } from \"antd\";\nimport React from \"react\";\nimport { DataRow, KeyText, ListStack, ValueText } from \"./style\";\n\nexport interface DataListProps {\n  readonly [key: string]: string;\n}\n\nexport function DataList(dataMap: DataListProps): JSX.Element {\n  return (\n    <ListStack>\n      {Object.entries(dataMap).map(([key, value], index) => (\n        <React.Fragment key={key}>\n          {index > 0 && <Divider />}\n          <DataRow>\n            <KeyText>{key.charAt(0).toUpperCase() + key.slice(1)}</KeyText>\n            <ValueText>{value}</ValueText>\n          </DataRow>\n        </React.Fragment>\n      ))}\n    </ListStack>\n  );\n}\n","import { Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s6);\n  }\n\n  width: 100%;\n`;\n\nexport const HeaderTitleStack = styled(Stack)`\n  & > * {\n    --gap: var(--s0);\n  }\n\n  h1.ant-typography,\n  h2.ant-typography {\n    margin: 0;\n    margin-top: var(--gap);\n  }\n\n  h1 {\n    font-size: var(--s2);\n    line-height: var(--s2);\n  }\n\n  h2 {\n    font-size: var(--s5);\n    line-height: var(--s5);\n  }\n`;\n\nexport const ButtonStack = styled(Stack)`\n  & > * {\n    --gap: var(--s2);\n  }\n`;\n","import { Loading, PageLayout } from \"@cosmicdapp/design\";\nimport { AppConfig, getErrorFromStackTrace, nativeCoinToDisplay, useSdk } from \"@cosmicdapp/logic\";\nimport { Coin, coins } from \"@cosmjs/launchpad\";\nimport { isBroadcastTxFailure } from \"@cosmjs/stargate\";\nimport { Button, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { DataList } from \"../../components/DataList\";\nimport { HeaderBackMenu } from \"../../components/HeaderBackMenu\";\nimport { pathOperationResult, pathRewards, pathValidators } from \"../../paths\";\nimport { EncodeMsgWithdrawDelegatorReward, useStakingValidator } from \"../../utils/staking\";\nimport { HeaderTitleStack, MainStack } from \"./style\";\n\nconst { Title, Text } = Typography;\n\nfunction getRewardsMap(config: Partial<AppConfig>, rewards: readonly Coin[]) {\n  if (!config.coinMap) return {};\n\n  const rewardsMap = {};\n  for (const coin of rewards) {\n    const coinToDisplay = nativeCoinToDisplay(coin, config.coinMap);\n    rewardsMap[coinToDisplay.denom] = coinToDisplay.amount;\n  }\n  return rewardsMap;\n}\n\ninterface RewardsParams {\n  readonly validatorAddress: string;\n}\n\nexport function Rewards(): JSX.Element {\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { validatorAddress } = useParams<RewardsParams>();\n\n  const { config, getClient, getStakingClient, address, refreshBalance } = useSdk();\n\n  const validator = useStakingValidator(validatorAddress);\n  const [rewards, setRewards] = useState<readonly Coin[]>([]);\n\n  useEffect(() => {\n    (async function updateRewards() {\n      try {\n        const { rewards } = await getStakingClient().distribution.unverified.delegationRewards(\n          address,\n          validatorAddress,\n        );\n        const nonNullRewards: readonly Coin[] = rewards\n          .map((coin) => ({\n            amount: coin.amount ? coin.amount.slice(0, -18) : \"\",\n            denom: coin.denom || \"\",\n          }))\n          .filter((coin) => coin.amount.length && coin.denom.length);\n\n        setRewards(nonNullRewards);\n      } catch (error) {\n        console.error(error.message);\n      }\n    })();\n  }, [getStakingClient, address, validatorAddress]);\n\n  async function withdrawRewards() {\n    setLoading(true);\n\n    const withdrawRewardsMsg: EncodeMsgWithdrawDelegatorReward = {\n      typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\",\n      value: {\n        delegatorAddress: address,\n        validatorAddress: validatorAddress,\n      },\n    };\n\n    const fee = {\n      amount: coins(\n        config.gasPrice * 10 ** config.coinMap[config.feeToken].fractionalDigits,\n        config.feeToken,\n      ),\n      gas: \"1500000\",\n    };\n\n    try {\n      const response = await getClient().signAndBroadcast(address, [withdrawRewardsMsg], fee);\n      if (isBroadcastTxFailure(response)) {\n        throw Error(\"Rewards withdrawal failed\");\n      }\n\n      refreshBalance();\n\n      history.push({\n        pathname: pathOperationResult,\n        state: {\n          success: true,\n          message: `Successfully withdrawn`,\n          customButtonText: \"Validator home\",\n          customButtonActionPath: `${pathValidators}/${validatorAddress}`,\n        },\n      });\n    } catch (stackTrace) {\n      console.error(stackTrace);\n\n      history.push({\n        pathname: pathOperationResult,\n        state: {\n          success: false,\n          message: \"Rewards withdrawal transaction failed:\",\n          error: getErrorFromStackTrace(stackTrace),\n          customButtonActionPath: `${pathValidators}/${validatorAddress}${pathRewards}`,\n        },\n      });\n    }\n  }\n\n  return (\n    (loading && <Loading loadingText={`Withdrawing rewards...`} />) ||\n    (!loading && (\n      <PageLayout>\n        <MainStack>\n          <HeaderTitleStack>\n            <HeaderBackMenu path={`${pathValidators}/${validatorAddress}`} />\n            <Title>Pending rewards</Title>\n            <Title level={2}>{validator?.description.moniker ?? \"\"}</Title>\n          </HeaderTitleStack>\n          {rewards.length ? (\n            <>\n              <DataList {...getRewardsMap(config, rewards)} />\n              <Button type=\"primary\" onClick={withdrawRewards}>\n                Withdraw rewards\n              </Button>\n            </>\n          ) : (\n            <Text>No rewards found</Text>\n          )}\n        </MainStack>\n      </PageLayout>\n    ))\n  );\n}\n","import { Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const FormStack = styled(Stack)`\n  & > * {\n    --gap: var(--s0);\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n\n  button {\n    margin-top: var(--s2);\n  }\n`;\n\nexport const FormField = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  & > * + * {\n    margin-left: var(--s0);\n  }\n\n  .ant-typography {\n    flex-grow: 0;\n    flex-shrink: 1;\n    text-align: left;\n  }\n\n  .ant-typography + .ant-typography {\n    flex-grow: 1;\n    flex-shrink: 0;\n    max-width: 13.5rem;\n    text-align: right;\n\n    font-family: var(--ff-montserrat);\n    font-weight: bolder;\n    font-size: var(--s4);\n    line-height: var(--s4);\n  }\n\n  .ant-form-item {\n    flex-grow: 1;\n    flex-shrink: 0;\n    max-width: 13.5rem;\n  }\n\n  span {\n    font-family: var(--ff-iceland);\n    font-size: var(--s2);\n    line-height: var(--s2);\n  }\n`;\n","import { useSdk } from \"@cosmicdapp/logic\";\nimport { Decimal } from \"@cosmjs/math\";\nimport { Button, Typography } from \"antd\";\nimport { Formik } from \"formik\";\nimport { Form, FormItem, Input } from \"formik-antd\";\nimport React, { useEffect, useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { FormField, FormStack } from \"./style\";\n\nconst { Text } = Typography;\n\nexport interface FormUndelegateBalanceFields {\n  readonly amount: string;\n}\n\ninterface FormUndelegateBalanceProps {\n  readonly validatorAddress: string;\n  readonly submitUndelegateBalance: (values: FormUndelegateBalanceFields) => Promise<void>;\n}\n\nexport function FormUndelegateBalance({\n  validatorAddress,\n  submitUndelegateBalance,\n}: FormUndelegateBalanceProps): JSX.Element {\n  const { config, getStakingClient, address } = useSdk();\n\n  const [balance, setBalance] = useState<Decimal>(Decimal.fromUserInput(\"0\", 0));\n\n  const maxAmount = balance.toFloatApproximation();\n  const undelegateBalanceValidationSchema = Yup.object().shape({\n    amount: Yup.number()\n      .required(\"An amount is required\")\n      .positive(\"Amount should be positive\")\n      .max(maxAmount),\n  });\n\n  useEffect(() => {\n    (async function updateBalance() {\n      try {\n        const { delegationResponse } = await getStakingClient().staking.unverified.delegation(\n          address,\n          validatorAddress,\n        );\n        const { balance } = delegationResponse;\n        const balanceDecimal = Decimal.fromAtomics(\n          balance.amount,\n          config.coinMap[config.stakingToken].fractionalDigits,\n        );\n\n        setBalance(balanceDecimal);\n      } catch (error) {\n        console.error(error.message);\n      }\n    })();\n  }, [address, validatorAddress, config, getStakingClient]);\n\n  return (\n    <Formik\n      initialValues={{ amount: \"\" }}\n      onSubmit={submitUndelegateBalance}\n      validationSchema={undelegateBalanceValidationSchema}\n    >\n      {(formikProps) => (\n        <Form>\n          <FormStack>\n            <FormField>\n              <Text>Balance</Text>\n              <Text>{balance.toString()}</Text>\n            </FormField>\n            <FormField>\n              <Text>Undelegate</Text>\n              <FormItem name=\"amount\">\n                <Input name=\"amount\" placeholder=\"Enter amount\" />\n              </FormItem>\n            </FormField>\n            <Button\n              type=\"primary\"\n              onClick={formikProps.submitForm}\n              disabled={!(formikProps.isValid && formikProps.dirty)}\n            >\n              Undelegate\n            </Button>\n          </FormStack>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { Center, Stack } from \"@cosmicdapp/design\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\n\nconst { Text } = Typography;\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s6);\n  }\n`;\n\nexport const HeaderTitleStack = styled(Stack)`\n  & > * {\n    --gap: var(--s0);\n  }\n\n  h1.ant-typography,\n  h2.ant-typography {\n    margin: 0;\n    margin-top: var(--gap);\n  }\n\n  h1 {\n    font-size: var(--s2);\n    line-height: var(--s2);\n  }\n\n  h2 {\n    font-size: var(--s5);\n    line-height: var(--s5);\n  }\n`;\n\nexport const NavCenter = styled(Center)`\n  --max-width: none;\n`;\n\nexport const ButtonStack = styled(Stack)`\n  & > * {\n    --gap: var(--s0);\n  }\n`;\n\nexport const ConfirmStack = styled(Stack)`\n  & > * {\n    --gap: var(--s3);\n  }\n`;\n\nexport const ConfirmText = styled(Text)`\n  font-size: var(--s-1);\n  color: var(--color-blue);\n`;\n","import { Loading, PageLayout } from \"@cosmicdapp/design\";\nimport { displayAmountToNative, getErrorFromStackTrace, useSdk } from \"@cosmicdapp/logic\";\nimport { Coin, coins } from \"@cosmjs/launchpad\";\nimport { isBroadcastTxFailure } from \"@cosmjs/stargate\";\nimport { Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { config } from \"../../../config\";\nimport { HeaderBackMenu } from \"../../components/HeaderBackMenu\";\nimport { pathOperationResult, pathUndelegate, pathValidators } from \"../../paths\";\nimport { EncodeMsgUndelegate, useStakingValidator } from \"../../utils/staking\";\nimport { FormUndelegateBalance, FormUndelegateBalanceFields } from \"./FormUndelegateBalance\";\nimport { HeaderTitleStack, MainStack } from \"./style\";\n\nconst { Title } = Typography;\n\ninterface UndelegateParams {\n  readonly validatorAddress: string;\n}\n\nexport function Undelegate(): JSX.Element {\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { validatorAddress } = useParams<UndelegateParams>();\n  const { getClient, address, refreshBalance } = useSdk();\n\n  const validator = useStakingValidator(validatorAddress);\n\n  async function submitUndelegateBalance({ amount }: FormUndelegateBalanceFields) {\n    setLoading(true);\n    const nativeAmountString = displayAmountToNative(amount, config.coinMap, config.stakingToken);\n    const nativeAmountCoin: Coin = { amount: nativeAmountString, denom: config.stakingToken };\n\n    const undelegateMsg: EncodeMsgUndelegate = {\n      typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\",\n      value: {\n        delegatorAddress: address,\n        validatorAddress: validatorAddress,\n        amount: nativeAmountCoin,\n      },\n    };\n\n    const fee = {\n      amount: coins(\n        config.gasPrice * 10 ** config.coinMap[config.feeToken].fractionalDigits,\n        config.feeToken,\n      ),\n      gas: \"1500000\",\n    };\n\n    try {\n      const response = await getClient().signAndBroadcast(address, [undelegateMsg], fee);\n      if (isBroadcastTxFailure(response)) {\n        throw Error(\"Undelegate failed\");\n      }\n\n      refreshBalance();\n\n      history.push({\n        pathname: pathOperationResult,\n        state: {\n          success: true,\n          message: `${amount} ${config.coinMap[config.stakingToken].denom} successfully undelegated`,\n          customButtonText: \"Validator home\",\n          customButtonActionPath: `${pathValidators}/${validatorAddress}`,\n        },\n      });\n    } catch (stackTrace) {\n      console.error(stackTrace);\n\n      history.push({\n        pathname: pathOperationResult,\n        state: {\n          success: false,\n          message: \"Undelegate transaction failed:\",\n          error: getErrorFromStackTrace(stackTrace),\n          customButtonActionPath: `${pathValidators}/${validatorAddress}${pathUndelegate}`,\n        },\n      });\n    }\n  }\n\n  return (\n    (loading && <Loading loadingText={`Undelegating...`} />) ||\n    (!loading && (\n      <PageLayout>\n        <MainStack>\n          <HeaderTitleStack>\n            <HeaderBackMenu path={`${pathValidators}/${validatorAddress}`} />\n            <Title>Undelegate</Title>\n            <Title level={2}>{validator?.description.moniker ?? \"\"}</Title>\n          </HeaderTitleStack>\n          <FormUndelegateBalance\n            validatorAddress={validatorAddress}\n            submitUndelegateBalance={submitUndelegateBalance}\n          />\n        </MainStack>\n      </PageLayout>\n    ))\n  );\n}\n","import { Center, Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s5);\n  }\n`;\n\nexport const TitleNavStack = styled(Stack)`\n  & > * {\n    --gap: var(--s4);\n  }\n\n  h1 {\n    margin: 0;\n  }\n`;\n\nexport const NavCenter = styled(Center)`\n  --max-width: none;\n`;\n\nexport const ButtonStack = styled(Stack)`\n  & > * {\n    --gap: var(--s0);\n  }\n`;\n","import { PageLayout } from \"@cosmicdapp/design\";\nimport { nativeCoinToDisplay, useSdk } from \"@cosmicdapp/logic\";\nimport { Coin } from \"@cosmjs/launchpad\";\nimport { Decimal } from \"@cosmjs/math\";\nimport { Button, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { config } from \"../../../config\";\nimport { DataList } from \"../../components/DataList\";\nimport { HeaderBackMenu } from \"../../components/HeaderBackMenu\";\nimport { pathDelegate, pathRewards, pathUndelegate, pathValidators } from \"../../paths\";\nimport { StakingValidator, useStakingValidator } from \"../../utils/staking\";\nimport { ButtonStack, MainStack, TitleNavStack } from \"./style\";\n\nconst { Title } = Typography;\n\nfunction getValidatorMap(balance: Decimal, validator?: StakingValidator) {\n  if (!validator) return {};\n\n  const tokensCoin: Coin = { denom: config.stakingToken, amount: validator.tokens };\n  const tokensAmount = nativeCoinToDisplay(tokensCoin, config.coinMap).amount;\n  const tokens = `${tokensAmount} ${config.coinMap[config.stakingToken].denom}`;\n  const commissionPercent = `${validator.commission.commissionRates.rate.slice(0, -16)} %`;\n\n  return {\n    Tokens: tokens,\n    Commission: commissionPercent,\n    Balance: balance.toString(),\n  };\n}\n\ninterface ValidatorParams {\n  readonly validatorAddress: string;\n}\n\nexport function Validator(): JSX.Element {\n  const history = useHistory();\n  const { validatorAddress } = useParams<ValidatorParams>();\n  const validator = useStakingValidator(validatorAddress);\n\n  const { config, getStakingClient, address } = useSdk();\n  const [balance, setBalance] = useState<Decimal>(Decimal.fromUserInput(\"0\", 0));\n\n  useEffect(() => {\n    (async function updateBalance() {\n      try {\n        const { delegationResponse } = await getStakingClient().staking.unverified.delegation(\n          address,\n          validatorAddress,\n        );\n        const balance = Decimal.fromAtomics(\n          delegationResponse.balance.amount,\n          config.coinMap[config.stakingToken].fractionalDigits,\n        );\n\n        setBalance(balance);\n      } catch (error) {\n        console.error(error.message);\n      }\n    })();\n  }, [getStakingClient, address, validatorAddress, config]);\n\n  function goToDelegate() {\n    history.push(`${pathValidators}/${validatorAddress}${pathDelegate}`);\n  }\n\n  function goToUndelegate() {\n    history.push(`${pathValidators}/${validatorAddress}${pathUndelegate}`);\n  }\n\n  function goToRewards() {\n    history.push(`${pathValidators}/${validatorAddress}${pathRewards}`);\n  }\n\n  return (\n    <PageLayout>\n      <MainStack>\n        <HeaderBackMenu path={pathValidators} />\n        <TitleNavStack>\n          <Title>{validator?.description.moniker ?? \"\"}</Title>\n        </TitleNavStack>\n        <DataList {...getValidatorMap(balance, validator)} />\n        <ButtonStack>\n          <Button type=\"primary\" onClick={goToDelegate}>\n            Delegate\n          </Button>\n          <Button type=\"primary\" onClick={goToUndelegate}>\n            Undelegate\n          </Button>\n          <Button type=\"primary\" onClick={goToRewards}>\n            Rewards\n          </Button>\n        </ButtonStack>\n      </MainStack>\n    </PageLayout>\n  );\n}\n","import { Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const MainStack = styled(Stack)`\n  width: 100%;\n\n  & > * {\n    --gap: var(--s5);\n  }\n`;\n\nexport const MenuHeader = styled.header`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const ValidatorStack = styled(Stack)`\n  & > * {\n    --gap: 0;\n  }\n`;\n\nexport const ValidatorItem = styled.div`\n  --v-padding: var(--s-2);\n  --border-size: 1px;\n\n  padding-top: var(--v-padding);\n  padding-bottom: var(--v-padding);\n\n  padding-left: var(--s4);\n  margin-left: calc(-1 * var(--s4));\n  padding-right: var(--s4);\n  margin-right: calc(-1 * var(--s4));\n\n  margin-bottom: calc(-1 * var(--border-size));\n\n  cursor: pointer;\n\n  &:hover,\n  &:active,\n  &:focus {\n    background-color: var(--color-primary);\n\n    & * {\n      color: white;\n    }\n  }\n\n  &:first-child > * {\n    --border-size: 0;\n  }\n\n  & > * {\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n\n    span:first-child {\n      font-family: var(--ff-iceland);\n      font-size: var(--s2);\n    }\n\n    span:not(:first-child) {\n      font-weight: bolder;\n      font-size: var(--s-1);\n    }\n  }\n`;\n\nexport const BorderContainer = styled.div`\n  border-top: var(--border-size) solid var(--color-primary);\n  padding-top: var(--v-padding);\n  margin-top: calc(-1 * var(--v-padding));\n`;\n","import { PageLayout } from \"@cosmicdapp/design\";\nimport { useSdk } from \"@cosmicdapp/logic\";\nimport { Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AccountMenu } from \"../../components/AccountMenu\";\nimport { pathValidators } from \"../../paths\";\nimport { BorderContainer, MainStack, MenuHeader, ValidatorItem, ValidatorStack } from \"./style\";\n\nconst { Title, Text } = Typography;\n\ninterface ValidatorData {\n  readonly name: string;\n  readonly address: string;\n}\n\nfunction validatorCompare(a: ValidatorData, b: ValidatorData) {\n  if (a.name < b.name) {\n    return -1;\n  }\n  if (a.name > b.name) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function Validators(): JSX.Element {\n  const history = useHistory();\n  const { getStakingClient } = useSdk();\n\n  const [validatorsData, setValidatorsData] = useState<readonly ValidatorData[]>([]);\n\n  useEffect(() => {\n    (async function updateValidatorsData() {\n      const { validators } = await getStakingClient().staking.unverified.validators(\"BOND_STATUS_BONDED\");\n      const validatorsData: readonly ValidatorData[] = validators\n        .map((validator) => ({\n          name: validator.description.moniker,\n          address: validator.operatorAddress,\n        }))\n        .sort(validatorCompare);\n\n      setValidatorsData(validatorsData);\n    })();\n  }, [getStakingClient]);\n\n  function goToValidator(address: string) {\n    history.push(`${pathValidators}/${address}`);\n  }\n\n  return (\n    <PageLayout>\n      <MainStack>\n        <MenuHeader>\n          <AccountMenu />\n        </MenuHeader>\n        <Title>Validators</Title>\n        <ValidatorStack>\n          {validatorsData.map((validator) => (\n            <ValidatorItem key={validator.name} onClick={() => goToValidator(validator.address)}>\n              <BorderContainer>\n                <Text>{validator.name}</Text>\n              </BorderContainer>\n            </ValidatorItem>\n          ))}\n        </ValidatorStack>\n      </MainStack>\n    </PageLayout>\n  );\n}\n","import { GlobalStyle } from \"@cosmicdapp/design\";\nimport { ContractsProvider, ErrorProvider, ProtectedSwitch, SdkProvider } from \"@cosmicdapp/logic\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { config } from \"../config\";\nimport {\n  pathDelegate,\n  pathLogin,\n  pathOperationResult,\n  pathRewards,\n  pathUndelegate,\n  pathValidators,\n} from \"./paths\";\nimport { Delegate } from \"./routes/Delegate\";\nimport { Login } from \"./routes/Login\";\nimport { OperationResult } from \"./routes/OperationResult\";\nimport { Rewards } from \"./routes/Rewards\";\nimport { Undelegate } from \"./routes/Undelegate\";\nimport { Validator } from \"./routes/Validator\";\nimport { Validators } from \"./routes/Validators\";\n\nconst paramValidatorAddress = \"/:validatorAddress\";\n\nexport function App(): JSX.Element {\n  return (\n    <ErrorProvider>\n      <SdkProvider config={config}>\n        <ContractsProvider>\n          <GlobalStyle />\n          <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route exact path={pathLogin} component={Login} />\n              <ProtectedSwitch authPath={pathLogin}>\n                <Route exact path={pathValidators} component={Validators} />\n                <Route exact path={`${pathValidators}${paramValidatorAddress}`} component={Validator} />\n                <Route\n                  exact\n                  path={`${pathValidators}${paramValidatorAddress}${pathDelegate}`}\n                  component={Delegate}\n                />\n                <Route\n                  exact\n                  path={`${pathValidators}${paramValidatorAddress}${pathUndelegate}`}\n                  component={Undelegate}\n                />\n                <Route\n                  exact\n                  path={`${pathValidators}${paramValidatorAddress}${pathRewards}`}\n                  component={Rewards}\n                />\n                <Route exact path={pathOperationResult} component={OperationResult} />\n              </ProtectedSwitch>\n            </Switch>\n          </Router>\n        </ContractsProvider>\n      </SdkProvider>\n    </ErrorProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.less\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}