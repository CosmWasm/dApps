{"version":3,"sources":["App/routes/Login/assets/cosmWasmLogo.svg","App/routes/OperationResult/assets/failIcon.svg","App/routes/OperationResult/assets/successIcon.svg","App/assets/backArrow.svg","../../src/service/error.tsx","../../src/service/sdk.ts","../../src/service/wallet.tsx","../../src/service/account.tsx","../../src/service/ProtectedSwitch.tsx","../../src/utils/currency.ts","../../src/utils/errors.ts","../../src/components/layout/Center/component.tsx","../../src/components/layout/Center/style.ts","../../src/components/layout/Stack/component.tsx","../../src/components/layout/Stack/style.ts","../../src/components/layout/PageLayout/component.tsx","../../src/components/layout/PageLayout/style.ts","../../src/components/logic/BackButton/component.tsx","../../src/components/logic/BackButton/style.ts","../../src/components/logic/Loading/style.ts","../../src/components/logic/Loading/index.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/components/logic/Login/style.ts","../../src/components/logic/Login/index.tsx","../../src/config.ts","../../src/components/logic/OperationResult/style.ts","../../src/components/logic/OperationResult/index.tsx","../../src/components/logic/YourAccount/style.ts","../../src/components/logic/YourAccount/index.tsx","../../src/theme/GlobalStyle/GlobalAntOverride.ts","../../src/theme/GlobalStyle/GlobalColors.ts","../../src/theme/GlobalStyle/GlobalFonts.ts","../../src/theme/GlobalStyle/GlobalReset.ts","../../src/theme/GlobalStyle/GlobalSpacing.ts","../../src/theme/GlobalStyle/index.tsx","config.ts","App/routes/Login/index.tsx","App/paths.ts","App/routes/OperationResult/index.tsx","App/forms/validationSchemas.ts","App/routes/TokenDetail/FormSendTokens/style.ts","App/routes/TokenDetail/FormSendTokens/index.tsx","App/routes/TokenDetail/style.ts","App/routes/TokenDetail/index.tsx","App/forms/Search.tsx","App/routes/Tokens/components/FormSearchName.tsx","App/routes/Tokens/components/TokenList/style.ts","App/routes/Tokens/components/TokenList/index.tsx","App/routes/Tokens/style.ts","App/routes/Tokens/index.tsx","App/index.tsx","index.tsx"],"names":["module","exports","defaultContext","setError","clearError","ErrorContext","React","useError","ErrorProvider","children","error","context","value","loadKeplrWallet","anyWindow","Error","e","loadLedgerWallet","TransportWebUSB","ledgerTransport","hdPaths","makeCosmoshubPath","prefix","addressPrefix","loadOrCreateWallet","mnemonic","key","loaded","localStorage","generated","Bip39","Random","loadOrCreateMnemonic","hdPath","Secp256k1HdWallet","initialized","address","init","clear","getClient","getStakingClient","CosmWasmContext","useSdk","SdkProvider","config","contextWithInit","signer","firstAddress","gasPrice","GasPrice","upload","exec","migrate","send","changeAdmin","createClient","client","apiUrl","stakingClient","setValue","faucetUrl","acct","fetch","method","headers","body","JSON","ticker","useState","refreshAccount","AccountContext","useAccount","AccountProvider","sdk","account","ProtectedSwitch","authPath","location","to","pathname","state","redirectPathname","redirectState","undefined","printableCoin","coin","Decimal","nativeCoinToDisplay","coinMap","coinToDisplay","amountToDisplay","denom","amount","getErrorFromStackTrace","stackTrace","stringStackTrace","match","Center","tag","Tag","props","StyledCenter","styled","Stack","StyledStack","PageLayout","StyledPageLayout","BackButton","icon","path","history","useHistory","goBack","src","alt","onClick","StyledBackButton","StyledSpin","spinIndicator","style","fontSize","spin","Loading","tip","loadingText","indicator","Symbol","_catch","recover","result","Text","Typography","MainStack","WelcomeStack","LightText","ErrorText","Title","disableLedgerLogin","anyNavigator","Login","loadWallet","setInitializing","console","pathAfterLogin","appName","appLogo","initializing","useEffect","level","type","initBrowser","disabled","initLedger","initKeplr","chainId","chainName","rpc","rest","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMinimalDenom","coinDecimals","fractionalDigits","feeCurrencies","stakeCurrency","gasPriceStep","low","average","high","bip44","coinType","configKeplr","ResultText","OperationResult","defaultButtonAction","successIcon","failIcon","success","message","customButtonText","customButtonActionPath","customButtonActionState","buttonText","buttonAction","getResultContent","chosenButtonText","chosenButtonAction","AccountStack","YourAccount","hideTitle","hideBalance","balance","printableBalance","copyToClipboard","GlobalAntOverride","createGlobalStyle","GlobalColors","GlobalFonts","GlobalReset","GlobalSpacing","GlobalStyle","rpcUrl","httpUrl","feeToken","stakingToken","faucetToken","ushell","ureef","cosmWasmLogo","goToTokensList","push","regexStartsWithPrefix","RegExp","addressShape","Yup","required","matches","length","searchValidationSchema","shape","sendAddressValidationSchema","FormStack","FormField","div","FormSendTokens","tokenName","tokenAmount","sendTokensAction","sendValidationSchema","positive","max","parseFloat","concat","initialValues","onSubmit","validationSchema","formikProps","name","placeholder","submitForm","isValid","dirty","Amount","TokenDetail","loading","setLoading","useParams","accountProvider","nativeToken","nameToDisplay","amountInteger","amountDecimal","split","backArrowIcon","values","recipientAddress","amountToTransfer","nativeDenom","displayAmountToNative","transferAmount","sendTokens","then","isBroadcastTxFailure","Promise","reject","rawLog","catch","tokenDetailPath","tokenDetailState","TypedInput","validate","fast","onChange","$onChange","onBlur","$onBlur","restProps","ref","field","event","Search","FormSearchName","currentAddress","setCurrentAddress","enterButton","onSearch","TokenStack","TokenItem","BorderContainer","TokenList","setBalance","getAccount","amAllowed","map","denomToDisplay","data-state","token","Tokens","App","basename","process","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9fcd6ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cosmWasmLogo.15dccd19.svg\";","module.exports = __webpack_public_path__ + \"static/media/failIcon.71513020.svg\";","module.exports = __webpack_public_path__ + \"static/media/successIcon.2e305b66.svg\";","module.exports = __webpack_public_path__ + \"static/media/backArrow.9849fc2e.svg\";","import * as React from \"react\";\n\ninterface ErrorContextType {\n  readonly error?: string;\n  readonly setError: (error: string) => void;\n  readonly clearError: () => void;\n}\n\nconst defaultContext: ErrorContextType = {\n  setError: () => {\n    return;\n  },\n  clearError: () => {\n    return;\n  },\n};\n\nconst ErrorContext = React.createContext<ErrorContextType>(defaultContext);\n\nexport const useError = (): ErrorContextType => React.useContext(ErrorContext);\n\nexport function ErrorProvider({ children }: React.HTMLAttributes<HTMLOrSVGElement>): JSX.Element {\n  const [error, setError] = React.useState<string>();\n\n  const context: ErrorContextType = {\n    error: error,\n    setError: setError,\n    clearError: () => {\n      setError(undefined);\n    },\n  };\n\n  return <ErrorContext.Provider value={context}>{children}</ErrorContext.Provider>;\n}\n","import { CosmWasmFeeTable, SigningCosmWasmClient } from \"@cosmjs/cosmwasm\";\nimport { Bip39, Random } from \"@cosmjs/crypto\";\nimport {\n  GasLimits,\n  GasPrice,\n  LcdClient,\n  makeCosmoshubPath,\n  OfflineSigner,\n  Secp256k1HdWallet,\n  setupStakingExtension,\n  StakingExtension,\n} from \"@cosmjs/launchpad\";\nimport { LedgerSigner } from \"@cosmjs/launchpad-ledger\";\nimport TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\nimport { AppConfig } from \"../config\";\n\n// generateMnemonic will give you a fresh mnemonic\n// it is up to the app to store this somewhere\nexport function generateMnemonic(): string {\n  return Bip39.encode(Random.getBytes(16)).toString();\n}\n\n// some code that will only work in a browser...\nexport function loadOrCreateMnemonic(): string {\n  const key = \"burner-wallet\";\n  const loaded = localStorage.getItem(key);\n  if (loaded) {\n    return loaded;\n  }\n  const generated = generateMnemonic();\n  localStorage.setItem(key, generated);\n  return generated;\n}\n\nexport type WalletLoader = (chainId: string, addressPrefix?: string) => Promise<OfflineSigner>;\n\nexport async function loadOrCreateWallet(_chainId: string, addressPrefix?: string): Promise<OfflineSigner> {\n  const mnemonic = loadOrCreateMnemonic();\n  const hdPath = makeCosmoshubPath(0);\n  const wallet = await Secp256k1HdWallet.fromMnemonic(mnemonic, hdPath, addressPrefix);\n  return wallet;\n}\n\nexport async function loadLedgerWallet(_chainId: string, addressPrefix?: string): Promise<OfflineSigner> {\n  const interactiveTimeout = 120_000;\n  const ledgerTransport = await TransportWebUSB.create(interactiveTimeout, interactiveTimeout);\n\n  return new LedgerSigner(ledgerTransport, { hdPaths: [makeCosmoshubPath(0)], prefix: addressPrefix });\n}\n\nexport async function loadKeplrWallet(chainId: string): Promise<OfflineSigner> {\n  const anyWindow: any = window;\n  if (!anyWindow.getOfflineSigner) {\n    throw new Error(\"Keplr extension is not available\");\n  }\n  return anyWindow.getOfflineSigner(chainId);\n}\n\n// this creates a new connection to a server at URL,\n// using a signing keyring generated from the given mnemonic\nexport async function createClient(config: AppConfig, signer: OfflineSigner): Promise<SigningCosmWasmClient> {\n  const firstAddress = (await signer.getAccounts())[0].address;\n  const gasPrice = GasPrice.fromString(`${config.gasPrice}${config.feeToken}`);\n  const gasLimits: GasLimits<CosmWasmFeeTable> = {\n    upload: 1500000,\n    init: 600000,\n    exec: 400000,\n    migrate: 600000,\n    send: 80000,\n    changeAdmin: 80000,\n  };\n\n  return new SigningCosmWasmClient(config.httpUrl, firstAddress, signer, gasPrice, gasLimits);\n}\n\nexport function createStakingClient(apiUrl: string): LcdClient & StakingExtension {\n  return LcdClient.withExtensions({ apiUrl }, setupStakingExtension);\n}\n","import { SigningCosmWasmClient } from \"@cosmjs/cosmwasm\";\nimport { LcdClient, OfflineSigner, StakingExtension } from \"@cosmjs/launchpad\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { AppConfig } from \"../config\";\nimport { createClient, createStakingClient } from \"./sdk\";\n\ninterface CosmWasmContextType {\n  readonly initialized: boolean;\n  readonly address: string;\n  readonly init: (signer: OfflineSigner) => Promise<void>;\n  readonly clear: () => void;\n  readonly getClient: () => SigningCosmWasmClient;\n  readonly getStakingClient: () => LcdClient & StakingExtension;\n}\n\nconst defaultContext: CosmWasmContextType = {\n  initialized: false,\n  address: \"\",\n  init: async () => {},\n  clear: () => {},\n  getClient: (): SigningCosmWasmClient => {\n    throw new Error(\"not yet initialized\");\n  },\n  getStakingClient: (): LcdClient & StakingExtension => {\n    throw new Error(\"not yet initialized\");\n  },\n};\n\nconst CosmWasmContext = React.createContext<CosmWasmContextType>(defaultContext);\n\nexport const useSdk = (): CosmWasmContextType => React.useContext(CosmWasmContext);\n\ninterface SdkProviderProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly config: AppConfig;\n}\n\nexport function SdkProvider({ config, children }: SdkProviderProps): JSX.Element {\n  const contextWithInit = { ...defaultContext, init };\n  const [value, setValue] = useState<CosmWasmContextType>(contextWithInit);\n\n  function clear() {\n    setValue({ ...contextWithInit });\n  }\n\n  async function init(signer: OfflineSigner) {\n    const client = await createClient(config, signer);\n    const address = client.senderAddress;\n\n    // load from faucet if needed\n    if (config.faucetUrl) {\n      const acct = await client.getAccount();\n      if (!acct?.balance?.length) {\n        await fetch(config.faucetUrl, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ ticker: config.faucetToken, address }),\n        });\n      }\n    }\n\n    const stakingClient = createStakingClient(config.httpUrl);\n\n    setValue({\n      initialized: true,\n      address,\n      init: async () => {},\n      clear,\n      getClient: () => client,\n      getStakingClient: () => stakingClient,\n    });\n  }\n\n  return <CosmWasmContext.Provider value={value}>{children}</CosmWasmContext.Provider>;\n}\n","import { Account } from \"@cosmjs/launchpad\";\nimport * as React from \"react\";\nimport { useError } from \"./error\";\nimport { useSdk } from \"./wallet\";\n\ninterface State {\n  readonly account?: Account;\n}\n\ninterface AccountContextType extends State {\n  readonly refreshAccount: () => void;\n}\n\nconst defaultContext: AccountContextType = {\n  refreshAccount: () => {\n    return;\n  },\n};\n\nconst AccountContext = React.createContext<AccountContextType>(defaultContext);\n\nexport const useAccount = (): AccountContextType => React.useContext(AccountContext);\n\nexport function AccountProvider({ children }: React.HTMLAttributes<HTMLOrSVGElement>): JSX.Element {\n  const { setError } = useError();\n  const sdk = useSdk();\n\n  const [value, setValue] = React.useState<State>({});\n\n  function refreshAccount() {\n    if (sdk.initialized) {\n      sdk\n        .getClient()\n        .getAccount()\n        .then((account) => setValue({ account }))\n        .catch(setError);\n    }\n  }\n\n  // this should just be called once on startup\n  React.useEffect(refreshAccount, [sdk, setError]);\n\n  const context: AccountContextType = {\n    refreshAccount,\n    account: value.account,\n  };\n\n  return <AccountContext.Provider value={context}>{children}</AccountContext.Provider>;\n}\n","import React from \"react\";\nimport { Redirect, Switch, SwitchProps } from \"react-router-dom\";\nimport { useSdk } from \"./wallet\";\n\nexport interface RedirectLocation {\n  readonly redirectPathname: string;\n  readonly redirectState: any;\n}\n\ninterface ProtectedSwitchProps extends SwitchProps {\n  readonly authPath: string;\n}\n\nexport function ProtectedSwitch({ authPath, children, location }: ProtectedSwitchProps): JSX.Element {\n  const { initialized } = useSdk();\n\n  return initialized ? (\n    <Switch location={location}>{children}</Switch>\n  ) : (\n    <Redirect\n      to={{\n        pathname: authPath,\n        state: location ? { redirectPathname: location.pathname, redirectState: location.state } : undefined,\n      }}\n    />\n  );\n}\n","import { Coin } from \"@cosmjs/launchpad\";\nimport { Decimal } from \"@cosmjs/math\";\n\n// NARROW NO-BREAK SPACE (U+202F)\nconst thinSpace = \"\\u202F\";\n\nexport function printableCoin(coin?: Coin): string {\n  if (!coin) {\n    return \"0\";\n  }\n  if (coin.denom.startsWith(\"u\")) {\n    const ticker = coin.denom.slice(1).toUpperCase();\n    return Decimal.fromAtomics(coin.amount, 6).toString() + thinSpace + ticker;\n  } else {\n    return coin.amount + thinSpace + coin.denom;\n  }\n}\n\nexport function printableBalance(balance?: readonly Coin[]): string {\n  if (!balance || balance.length === 0) return \"–\";\n  return balance.map(printableCoin).join(\", \");\n}\n\nexport interface MappedCoin {\n  readonly denom: string;\n  readonly fractionalDigits: number;\n}\n\nexport interface CoinMap {\n  readonly [key: string]: MappedCoin;\n}\n\nexport function nativeCoinToDisplay(coin: Coin, coinMap: CoinMap): Coin {\n  if (!coinMap) return coin;\n\n  const coinToDisplay = coinMap[coin.denom];\n  if (!coinToDisplay) return coin;\n\n  const amountToDisplay = Decimal.fromAtomics(coin.amount, coinToDisplay.fractionalDigits).toString();\n\n  return { denom: coinToDisplay.denom, amount: amountToDisplay };\n}\n\n// display amount is eg \"12.0346\", return is in native tokens\n// with 6 fractional digits, this would be eg. \"12034600\"\nexport function displayAmountToNative(\n  amountToDisplay: string,\n  coinMap: CoinMap,\n  nativeDenom: string,\n): string {\n  const fractionalDigits = coinMap[nativeDenom]?.fractionalDigits;\n  if (fractionalDigits) {\n    // use https://github.com/CosmWasm/cosmjs/blob/v0.22.2/packages/math/src/decimal.ts\n    const decimalAmount = Decimal.fromUserInput(amountToDisplay, fractionalDigits);\n    return decimalAmount.atomics;\n  }\n\n  return amountToDisplay;\n}\n","// Get string error from operation stack trace. Matches last line but removes last \"message index\" part\nexport function getErrorFromStackTrace(stackTrace: any): string {\n  const stringStackTrace = (stackTrace || \"\").toString();\n  const match = stringStackTrace.match(/.*\\s*$/g)[0];\n  const error = match.substring(0, match.lastIndexOf(\";\"));\n\n  return error || stringStackTrace;\n}\n","import * as React from \"react\";\n\nexport interface CenterProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly tag?: keyof JSX.IntrinsicElements;\n}\n\nexport function Center({ tag: Tag = \"div\", children, ...props }: CenterProps): JSX.Element {\n  return <Tag {...props}>{children}</Tag>;\n}\n","import styled from \"styled-components\";\nimport { Center } from \"./component\";\n\nexport const StyledCenter = styled(Center)`\n  box-sizing: content-box;\n\n  max-width: var(--max-width, none);\n\n  margin-left: auto;\n  margin-right: auto;\n\n  text-align: center;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import * as React from \"react\";\n\nexport interface StackProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly tag?: keyof JSX.IntrinsicElements;\n}\n\nexport function Stack({ tag: Tag = \"div\", children, ...props }: StackProps): JSX.Element {\n  return <Tag {...props}>{children}</Tag>;\n}\n","import styled from \"styled-components\";\nimport { Stack } from \"./component\";\n\nexport const StyledStack = styled(Stack)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  & > * {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  & > * + * {\n    margin-top: var(--gap, var(--s0));\n  }\n`;\n","import { Center, CenterProps } from \"../Center\";\nimport * as React from \"react\";\n\nexport function PageLayout({ children, ...props }: CenterProps): JSX.Element {\n  return (\n    <Center tag=\"main\" {...props}>\n      {children}\n    </Center>\n  );\n}\n","import styled from \"styled-components\";\nimport { PageLayout } from \"./component\";\n\nexport const StyledPageLayout = styled(PageLayout)`\n  --max-width: 22rem;\n  --gap: var(--s8);\n\n  padding: var(--s4);\n\n  /* Reduces padding when width < 380px, but uses em for better media query support */\n  @media (max-width: 23.6875em) {\n    padding: var(--s-1) 0 var(--s-2) 0;\n  }\n\n  [alt=\"Back arrow\"] {\n    align-self: flex-start;\n  }\n`;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport interface BackButtonProps extends React.HTMLAttributes<HTMLOrSVGElement> {\n  readonly icon: string;\n  readonly path?: string;\n  readonly state?: any;\n}\n\nexport function BackButton({ icon, path, state, ...props }: BackButtonProps): JSX.Element {\n  const history = useHistory();\n  const goBack = path ? () => history.push(path, state) : history.goBack;\n\n  return <img src={icon} alt=\"Back arrow\" onClick={goBack} {...props} />;\n}\n","import styled from \"styled-components\";\nimport { BackButton } from \"./component\";\n\nexport const StyledBackButton = styled(BackButton)`\n  cursor: pointer;\n`;\n","import { Spin } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const StyledSpin = styled(Spin)`\n  & > span + div {\n    margin-top: var(--s2);\n  }\n`;\n","import { LoadingOutlined } from \"@ant-design/icons\";\nimport * as React from \"react\";\nimport { PageLayout } from \"../../layout/PageLayout\";\nimport { StyledSpin } from \"./style\";\n\nconst spinIndicator = <LoadingOutlined style={{ fontSize: \"6.25rem\" }} spin />;\n\ninterface LoadingProps {\n  readonly loadingText?: string;\n}\n\nexport function Loading({ loadingText }: LoadingProps): JSX.Element {\n  const tip = loadingText || \"Loading...\";\n\n  return (\n    <PageLayout>\n      <StyledSpin indicator={spinIndicator} tip={tip} />\n    </PageLayout>\n  );\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport { Stack } from \"../../layout/Stack\";\n\nconst { Text } = Typography;\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s9);\n  }\n`;\n\nexport const WelcomeStack = styled(Stack)`\n  & > * {\n    --gap: var(--s3);\n  }\n`;\n\nexport const LightText = styled(Text)`\n  display: block;\n  font-weight: lighter;\n`;\n\nexport const ErrorText = styled(Text)`\n  color: var(--color-red);\n`;\n","import {\n  AppConfig,\n  configKeplr,\n  loadKeplrWallet,\n  loadLedgerWallet,\n  loadOrCreateWallet,\n  RedirectLocation,\n  useAccount,\n  useError,\n  useSdk,\n  WalletLoader,\n} from \"@cosmicdapp/logic\";\nimport { Button, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PageLayout } from \"../../layout/PageLayout\";\nimport { Loading } from \"../../logic/Loading\";\nimport { ErrorText, LightText, MainStack, WelcomeStack } from \"./style\";\n\nconst { Title } = Typography;\n\nfunction disableLedgerLogin() {\n  const anyNavigator: any = navigator;\n  return !anyNavigator?.usb;\n}\n\nfunction disableKeplrLogin() {\n  // TODO find check that works on reload\n  //const anyWindow: any = window;\n  //return !(anyWindow.getOfflineSigner && anyWindow.keplr.experimentalSuggestChain);\n  return false;\n}\n\ninterface LoginProps {\n  readonly pathAfterLogin: string;\n  readonly appName: string;\n  readonly appLogo: string;\n  readonly config: AppConfig;\n}\n\nexport function Login({ config, pathAfterLogin, appName, appLogo }: LoginProps): JSX.Element {\n  const history = useHistory();\n  const state = history.location.state as RedirectLocation;\n  const { error, setError, clearError } = useError();\n  const sdk = useSdk();\n  const { refreshAccount, account } = useAccount();\n\n  const [initializing, setInitializing] = useState(false);\n\n  async function init(loadWallet: WalletLoader) {\n    setInitializing(true);\n    clearError();\n\n    try {\n      const signer = await loadWallet(config.chainId, config.addressPrefix);\n      await sdk.init(signer);\n    } catch (error) {\n      console.error(error);\n      setError(Error(error).message);\n      setInitializing(false);\n    }\n  }\n\n  async function initBrowser() {\n    await init(loadOrCreateWallet);\n  }\n\n  async function initLedger() {\n    await init(loadLedgerWallet);\n  }\n\n  async function initKeplr() {\n    const anyWindow: any = window;\n    try {\n      await anyWindow.keplr.experimentalSuggestChain(configKeplr(config));\n      await anyWindow.keplr.enable(config.chainId);\n      await init(loadKeplrWallet);\n    } catch (error) {\n      console.error(error);\n      setError(Error(error).message);\n    }\n  }\n\n  useEffect(() => {\n    if (sdk.initialized) {\n      refreshAccount();\n    }\n  }, [sdk.initialized, refreshAccount]);\n\n  useEffect(() => {\n    if (account) {\n      if (state) {\n        history.push(state.redirectPathname, state.redirectState);\n      } else {\n        history.push(pathAfterLogin);\n      }\n    }\n  }, [account, state, history]);\n\n  return initializing ? (\n    <Loading loadingText=\"Initializing app...\" />\n  ) : (\n    <PageLayout>\n      <MainStack>\n        <img src={appLogo} alt=\"CosmWasm logo\" />\n        <WelcomeStack>\n          <Typography>\n            <Title level={2}>Hello!</Title>\n            <LightText>Welcome to your {appName}</LightText>\n            <LightText>Select one of the following options to start:</LightText>\n          </Typography>\n          {error && <ErrorText>{error}</ErrorText>}\n          <Button type=\"primary\" onClick={initBrowser}>\n            Browser (Demo)\n          </Button>\n          <Button type=\"primary\" disabled={disableLedgerLogin()} onClick={initLedger}>\n            Ledger (Secure, Chrome)\n          </Button>\n          <Button type=\"primary\" disabled={disableKeplrLogin()} onClick={initKeplr}>\n            Keplr (Secure)\n          </Button>\n        </WelcomeStack>\n      </MainStack>\n    </PageLayout>\n  );\n}\n","import { CoinMap } from \"./utils\";\n\nexport interface KeplrCoin {\n  readonly coinDenom: string;\n  readonly coinMinimalDenom: string;\n  readonly coinDecimals: number;\n}\n\nexport interface KeplrConfig {\n  readonly chainId: string;\n  readonly chainName: string;\n  readonly rpc: string;\n  readonly rest: string;\n  readonly bech32Config: {\n    readonly bech32PrefixAccAddr: string;\n    readonly bech32PrefixAccPub: string;\n    readonly bech32PrefixValAddr: string;\n    readonly bech32PrefixValPub: string;\n    readonly bech32PrefixConsAddr: string;\n    readonly bech32PrefixConsPub: string;\n  };\n  readonly currencies: readonly KeplrCoin[];\n  readonly feeCurrencies: readonly KeplrCoin[];\n  readonly stakeCurrency: KeplrCoin;\n  readonly gasPriceStep: {\n    readonly low: number;\n    readonly average: number;\n    readonly high: number;\n  };\n  readonly bip44: { readonly coinType: number };\n  readonly coinType: number;\n}\n\nexport interface AppConfig {\n  readonly chainId: string;\n  readonly chainName: string;\n  readonly addressPrefix: string;\n  readonly rpcUrl: string;\n  readonly httpUrl: string;\n  readonly faucetUrl: string;\n  readonly feeToken: string;\n  readonly stakingToken: string;\n  readonly faucetToken: string;\n  readonly coinMap: CoinMap;\n  readonly gasPrice: number;\n  readonly codeId?: number;\n}\n\nexport function configKeplr(config: AppConfig): KeplrConfig {\n  return {\n    chainId: config.chainId,\n    chainName: config.chainName,\n    rpc: config.rpcUrl,\n    rest: config.httpUrl,\n    bech32Config: {\n      bech32PrefixAccAddr: `${config.addressPrefix}`,\n      bech32PrefixAccPub: `${config.addressPrefix}pub`,\n      bech32PrefixValAddr: `${config.addressPrefix}valoper`,\n      bech32PrefixValPub: `${config.addressPrefix}valoperpub`,\n      bech32PrefixConsAddr: `${config.addressPrefix}valcons`,\n      bech32PrefixConsPub: `${config.addressPrefix}valconspub`,\n    },\n    currencies: [\n      {\n        coinDenom: config.coinMap[config.feeToken].denom,\n        coinMinimalDenom: config.feeToken,\n        coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n      },\n      {\n        coinDenom: config.coinMap[config.stakingToken].denom,\n        coinMinimalDenom: config.stakingToken,\n        coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n      },\n    ],\n    feeCurrencies: [\n      {\n        coinDenom: config.coinMap[config.feeToken].denom,\n        coinMinimalDenom: config.feeToken,\n        coinDecimals: config.coinMap[config.feeToken].fractionalDigits,\n      },\n    ],\n    stakeCurrency: {\n      coinDenom: config.coinMap[config.stakingToken].denom,\n      coinMinimalDenom: config.stakingToken,\n      coinDecimals: config.coinMap[config.stakingToken].fractionalDigits,\n    },\n    gasPriceStep: {\n      low: config.gasPrice / 2,\n      average: config.gasPrice,\n      high: config.gasPrice * 2,\n    },\n    bip44: { coinType: 118 },\n    coinType: 118,\n  };\n}\n","import { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport { Stack } from \"../../layout/Stack\";\n\nconst { Text } = Typography;\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s3);\n  }\n`;\n\nexport const ResultText = styled(Text)`\n  font-size: var(--s-1);\n\n  &[data-result=\"success\"] {\n    color: var(--color-green);\n  }\n\n  &[data-result=\"failure\"] {\n    color: var(--color-red);\n  }\n`;\n","import { Button } from \"antd\";\nimport { History } from \"history\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PageLayout } from \"../../layout/PageLayout\";\nimport { MainStack, ResultText } from \"./style\";\n\ninterface ResultContent {\n  readonly result: \"success\" | \"failure\";\n  readonly icon: string;\n  readonly buttonText: string;\n  readonly buttonAction: () => void;\n}\n\nexport interface OperationResultState {\n  readonly success: boolean;\n  readonly message: string;\n  readonly error?: string;\n  readonly customButtonText?: string;\n  readonly customButtonActionPath?: string;\n  readonly customButtonActionState?: any;\n}\n\nexport interface OperationResultProps {\n  readonly defaultButtonAction: (history: History) => void;\n  readonly successIcon: string;\n  readonly failIcon: string;\n}\n\nexport function OperationResult({\n  defaultButtonAction,\n  successIcon,\n  failIcon,\n}: OperationResultProps): JSX.Element {\n  const history = useHistory();\n\n  const {\n    success,\n    message,\n    error,\n    customButtonText,\n    customButtonActionPath,\n    customButtonActionState,\n  } = history.location.state as OperationResultState;\n\n  function getResultContent(success: boolean): ResultContent {\n    if (success) {\n      return {\n        result: \"success\",\n        icon: successIcon,\n        buttonText: \"Home\",\n        buttonAction: () => defaultButtonAction(history),\n      };\n    }\n\n    return {\n      result: \"failure\",\n      icon: failIcon,\n      buttonText: \"Retry\",\n      buttonAction: history.goBack,\n    };\n  }\n\n  const { icon, result, buttonText, buttonAction } = getResultContent(success);\n\n  const chosenButtonText = customButtonText || buttonText;\n  const chosenButtonAction = customButtonActionPath\n    ? () => history.push(customButtonActionPath, customButtonActionState)\n    : buttonAction;\n\n  return (\n    <PageLayout>\n      <MainStack>\n        <img src={icon} alt=\"Result icon\" />\n        <ResultText data-result={result}>{message}</ResultText>\n        {error && <ResultText data-result={result}>{error}</ResultText>}\n        <Button type=\"primary\" onClick={chosenButtonAction}>\n          {chosenButtonText}\n        </Button>\n      </MainStack>\n    </PageLayout>\n  );\n}\n","import styled from \"styled-components\";\nimport { Stack } from \"../../layout/Stack\";\n\nexport const AccountStack = styled(Stack)`\n  & > * {\n    --gap: var(--s-2);\n  }\n\n  h3,\n  div[role=\"separator\"] {\n    margin: 0;\n  }\n\n  span,\n  button {\n    overflow-wrap: anywhere;\n  }\n\n  span {\n    display: block;\n    font-size: var(--s-1);\n  }\n\n  span + span {\n    font-weight: bold;\n  }\n\n  button,\n  button span {\n    font-size: var(--s0);\n  }\n\n  button {\n    height: 100%;\n    white-space: normal;\n  }\n`;\n","import { printableBalance, useAccount } from \"@cosmicdapp/logic\";\nimport { Button, Divider, Typography } from \"antd\";\nimport copyToClipboard from \"clipboard-copy\";\nimport React from \"react\";\nimport { StackProps } from \"../../layout/Stack\";\nimport { AccountStack } from \"./style\";\n\nconst { Title, Text } = Typography;\n\ninterface YourAccountProps extends StackProps {\n  readonly hideTitle?: boolean;\n  readonly hideBalance?: boolean;\n}\n\nexport function YourAccount({ tag, hideTitle, hideBalance }: YourAccountProps): JSX.Element {\n  const accountProvider = useAccount();\n  const { address, balance } = accountProvider.account ?? { address: \"\", balance: [] };\n\n  return (\n    <AccountStack tag={tag}>\n      {!hideTitle && (\n        <header>\n          <Title level={3}>Your Account</Title>\n          {!hideBalance && <Divider />}\n        </header>\n      )}\n      <Text>{address}</Text>\n      {!hideBalance && <Text>({printableBalance(balance)})</Text>}\n      <Button type=\"primary\" onClick={() => copyToClipboard(address)}>\n        Copy Account Address\n      </Button>\n    </AccountStack>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalAntOverride = createGlobalStyle`\n  .ant-btn:not(.ant-input-search-button) {\n    width: var(--max-width);\n    max-width: 100vw;\n  }\n  \n  .ant-form div[role=\"alert\"] li {\n    color: var(--form-error);\n    font-size: var(--s-1);\n    text-align: left;\n    margin: var(--s-1);\n  \n    &::before {\n      content: \"* \";\n    }\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalColors = createGlobalStyle`\n  :root {\n    --color-black: #333;\n    --color-gray-light: #f2f2f2;\n    --color-red: #eb5757;\n    --color-green: #27ae60;\n    --color-blue: #2f80ed;\n    --color-blue-light: #1890ff;\n\n    --color-primary: var(--color-blue);\n    --button-color: var(--color-blue-light);\n    --text-color: var(--color-primary);\n    --heading-color: var(--color-primary);\n    --form-error: var(--color-red);\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalFonts = createGlobalStyle`\n  :root {\n    --ff-montserrat: Montserrat, sans-serif;\n    --ff-iceland: Iceland, serif;\n\n    --ff-text: var(--ff-montserrat);\n    --ff-heading: var(--ff-iceland);\n    \n    font-family: var(--ff-text);\n  }\n\n  p,\n  span {\n    font-family: var(--ff-text);\n    font-size: var(--s0);\n    overflow-wrap: anywhere;\n  }\n  \n  h1,\n  h2,\n  h3 {\n    font-family: var(--ff-heading);\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalReset = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n  \n  html {\n    scroll-behavior: smooth;\n  }\n  \n  body {\n    min-height: 100vh;\n    line-height: 1.5;\n    text-rendering: optimizeSpeed;\n  }\n  \n  body,\n  h1,\n  h2,\n  p,\n  ul[class],\n  ol[class] {\n    margin: 0;\n  }\n  \n  ul[class],\n  ol[class] {\n    padding: 0;\n    list-style: none;\n  }\n  \n  button,\n  input,\n  select,\n  textarea {\n    font: inherit;\n  }\n  \n  img {\n    display: block;\n    max-width: 100%;\n  }\n  \n  @media (prefers-reduced-motion: reduce) {\n    * {\n      animation-duration: 0.01s !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01s !important;\n      scroll-behavior: auto !important;\n    }\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalSpacing = createGlobalStyle`\n  :root {\n    --ratio: 1.25;\n\n    --s-6: calc(var(--s-5) / var(--ratio));\n    --s-5: calc(var(--s-4) / var(--ratio));\n    --s-4: calc(var(--s-3) / var(--ratio));\n    --s-3: calc(var(--s-2) / var(--ratio));\n    --s-2: calc(var(--s-1) / var(--ratio));\n    --s-1: calc(var(--s0) / var(--ratio));\n    --s0: 1rem;\n    --s1: calc(var(--s0) * var(--ratio));\n    --s2: calc(var(--s1) * var(--ratio));\n    --s3: calc(var(--s2) * var(--ratio));\n    --s4: calc(var(--s3) * var(--ratio));\n    --s5: calc(var(--s4) * var(--ratio));\n    --s6: calc(var(--s5) * var(--ratio));\n    --s7: calc(var(--s6) * var(--ratio));\n    --s8: calc(var(--s7) * var(--ratio));\n    --s9: calc(var(--s8) * var(--ratio));\n  }\n`;\n","import React from \"react\";\nimport { GlobalAntOverride } from \"./GlobalAntOverride\";\nimport { GlobalColors } from \"./GlobalColors\";\nimport { GlobalFonts } from \"./GlobalFonts\";\nimport { GlobalReset } from \"./GlobalReset\";\nimport { GlobalSpacing } from \"./GlobalSpacing\";\n\nexport function GlobalStyle(): JSX.Element {\n  return (\n    <>\n      <GlobalReset />\n      <GlobalSpacing />\n      <GlobalColors />\n      <GlobalFonts />\n      <GlobalAntOverride />\n    </>\n  );\n}\n","import { AppConfig } from \"@cosmicdapp/logic\";\n\nconst local: AppConfig = {\n  chainId: \"testing\",\n  chainName: \"Testing\",\n  addressPrefix: \"cosmos\",\n  rpcUrl: \"http://localhost:26657\",\n  httpUrl: \"http://localhost:1317\",\n  faucetUrl: \"http://localhost:8000/credit\",\n  feeToken: \"ucosm\",\n  stakingToken: \"uatom\",\n  faucetToken: \"COSM\",\n  coinMap: {\n    ucosm: { denom: \"COSM\", fractionalDigits: 6 },\n    uatom: { denom: \"ATOM\", fractionalDigits: 6 },\n  },\n  gasPrice: 0.025,\n};\n\nconst coralnet: AppConfig = {\n  chainId: \"cosmwasm-coral\",\n  chainName: \"Coral\",\n  addressPrefix: \"coral\",\n  rpcUrl: \"https://rpc.coralnet.cosmwasm.com\",\n  httpUrl: \"https://lcd.coralnet.cosmwasm.com\",\n  faucetUrl: \"https://faucet.coralnet.cosmwasm.com/credit\",\n  feeToken: \"ushell\",\n  stakingToken: \"ureef\",\n  faucetToken: \"SHELL\",\n  coinMap: {\n    ushell: { denom: \"SHELL\", fractionalDigits: 6 },\n    ureef: { denom: \"REEF\", fractionalDigits: 6 },\n  },\n  gasPrice: 0.025,\n};\n\n// REACT_APP_LOCAL is set via `yarn start:local`\nconst isLocal = process.env.NODE_ENV !== \"production\" && !!process.env.REACT_APP_LOCAL;\n\nexport const config = isLocal ? local : coralnet;\n","import { Login as LoginDesign } from \"@cosmicdapp/design\";\nimport React from \"react\";\nimport { config } from \"../../../config\";\nimport { pathTokens } from \"../../paths\";\nimport cosmWasmLogo from \"./assets/cosmWasmLogo.svg\";\n\nexport function Login(): JSX.Element {\n  return <LoginDesign pathAfterLogin={pathTokens} appName=\"Wallet\" appLogo={cosmWasmLogo} config={config} />;\n}\n","export const pathLogin = \"/login\";\nexport const pathTokens = \"/tokens\";\nexport const pathOperationResult = \"/result\";\n","import { OperationResult as OperationResultDesign } from \"@cosmicdapp/design\";\nimport { History } from \"history\";\nimport React from \"react\";\nimport { pathTokens } from \"../../paths\";\nimport failIcon from \"./assets/failIcon.svg\";\nimport successIcon from \"./assets/successIcon.svg\";\n\nfunction goToTokensList(history: History) {\n  history.push(pathTokens);\n}\n\nexport function OperationResult(): JSX.Element {\n  return (\n    <OperationResultDesign\n      defaultButtonAction={goToTokensList}\n      successIcon={successIcon}\n      failIcon={failIcon}\n    />\n  );\n}\n","import * as Yup from \"yup\";\nimport { config } from \"../../config\";\n\nconst regexStartsWithPrefix = new RegExp(`^${config.addressPrefix}`);\n\nconst addressShape = {\n  address: Yup.string()\n    .required(\"An address is required\")\n    .matches(regexStartsWithPrefix, `\"${config.addressPrefix}\" prefix required`)\n    .length(39 + config.addressPrefix.length, \"Address invalid\"),\n};\n\nexport const searchValidationSchema = Yup.object().shape(addressShape);\n\nexport const sendAddressValidationSchema = Yup.object().shape(addressShape);\n","import { Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const FormStack = styled(Stack)`\n  & > * {\n    --gap: var(--s0);\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n\n  button {\n    margin-top: var(--s2);\n  }\n`;\n\nexport const FormField = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  & > * + * {\n    margin-left: var(--s0);\n  }\n\n  span {\n    font-family: var(--ff-iceland);\n    font-size: var(--s2);\n  }\n`;\n","import { Button, Typography } from \"antd\";\nimport { Formik } from \"formik\";\nimport { Form, FormItem, Input } from \"formik-antd\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { sendAddressValidationSchema } from \"../../../forms/validationSchemas\";\nimport { FormField, FormStack } from \"./style\";\n\nconst { Text } = Typography;\n\ninterface FormSendTokensProps {\n  readonly tokenName: string;\n  readonly tokenAmount: string;\n  readonly sendTokensAction: (values: unknown) => void;\n}\n\nexport function FormSendTokens({\n  tokenName,\n  tokenAmount,\n  sendTokensAction,\n}: FormSendTokensProps): JSX.Element {\n  const sendAmountValidationSchema = Yup.object().shape({\n    amount: Yup.number()\n      .required(\"An amount is required\")\n      .positive(\"Amount should be positive\")\n      .max(parseFloat(tokenAmount), `Amount cannot be greater than ${tokenAmount}`),\n  });\n\n  const sendValidationSchema = sendAmountValidationSchema.concat(sendAddressValidationSchema);\n\n  return (\n    <Formik\n      initialValues={{ amount: \"\", address: \"\" }}\n      onSubmit={sendTokensAction}\n      validationSchema={sendValidationSchema}\n    >\n      {(formikProps) => (\n        <Form>\n          <FormStack>\n            <FormField>\n              <Text>Send</Text>\n              <FormItem name=\"amount\">\n                <Input name=\"amount\" placeholder=\"Enter amount\" />\n              </FormItem>\n              <Text>{tokenName}</Text>\n            </FormField>\n            <FormField>\n              <Text>to</Text>\n              <FormItem name=\"address\">\n                <Input name=\"address\" placeholder=\"Enter address\" />\n              </FormItem>\n            </FormField>\n            <Button\n              type=\"primary\"\n              onClick={formikProps.submitForm}\n              disabled={!(formikProps.isValid && formikProps.dirty)}\n            >\n              Send\n            </Button>\n          </FormStack>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s4);\n  }\n\n  h1 {\n    margin: 0;\n  }\n\n  .ant-form {\n    margin-top: var(--gap);\n  }\n`;\n\nexport const AccountStack = styled(Stack)`\n  & > * {\n    --gap: var(--s2);\n  }\n`;\n\nexport const Amount = styled.div`\n  span {\n    font-size: var(--s4);\n    font-weight: bolder;\n    overflow-wrap: anywhere;\n  }\n\n  span + span {\n    font-size: var(--s1);\n  }\n`;\n","import { BackButton, Loading, OperationResultState, PageLayout, YourAccount } from \"@cosmicdapp/design\";\nimport {\n  displayAmountToNative,\n  getErrorFromStackTrace,\n  nativeCoinToDisplay,\n  useAccount,\n  useSdk,\n} from \"@cosmicdapp/logic\";\nimport { Coin, isBroadcastTxFailure } from \"@cosmjs/launchpad\";\nimport { Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { config } from \"../../../config\";\nimport backArrowIcon from \"../../assets/backArrow.svg\";\nimport { pathOperationResult, pathTokens } from \"../../paths\";\nimport { FormSendTokens } from \"./FormSendTokens\";\nimport { AccountStack, Amount, MainStack } from \"./style\";\n\nconst { Title, Text } = Typography;\n\ninterface TokenDetailParams {\n  readonly tokenName: string;\n}\n\nexport interface TokenDetailState {\n  readonly tokenAmount: string;\n}\n\nexport function TokenDetail(): JSX.Element {\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const { tokenName }: TokenDetailParams = useParams();\n  const { tokenAmount } = history.location.state as TokenDetailState;\n\n  const { getClient } = useSdk();\n  const accountProvider = useAccount();\n\n  const sendTokensAction = (values) => {\n    setLoading(true);\n    const { address, amount } = values;\n    const recipientAddress: string = address;\n\n    // TODO: Add try catch so it does not fail i.e. too many decimals\n    const amountToTransfer = displayAmountToNative(amount, config.coinMap, tokenName);\n\n    const nativeTokenToTransfer: Coin = { denom: tokenName, amount: amountToTransfer };\n    const transferAmount: readonly Coin[] = [nativeTokenToTransfer];\n\n    getClient()\n      .sendTokens(recipientAddress, transferAmount)\n      .then((result) => {\n        if (isBroadcastTxFailure(result)) {\n          return Promise.reject(result.rawLog);\n        }\n\n        accountProvider.refreshAccount();\n\n        history.push({\n          pathname: pathOperationResult,\n          state: {\n            success: true,\n            message: `${amount} ${tokenName} successfully sent to ${recipientAddress}`,\n            customButtonText: \"Tokens\",\n          } as OperationResultState,\n        });\n      })\n      .catch((stackTrace) => {\n        console.error(stackTrace);\n\n        const tokenDetailPath = `${pathTokens}/${tokenName}`;\n        const tokenDetailState: TokenDetailState = { tokenAmount };\n\n        history.push({\n          pathname: pathOperationResult,\n          state: {\n            success: false,\n            message: \"Send transaction failed:\",\n            error: getErrorFromStackTrace(stackTrace),\n            customButtonActionPath: tokenDetailPath,\n            customButtonActionState: tokenDetailState,\n          } as OperationResultState,\n        });\n      });\n  };\n\n  const nativeToken: Coin = { denom: tokenName, amount: tokenAmount };\n  // TODO: Add try catch so it does not fail i.e. too many decimals\n  const { denom: nameToDisplay, amount: amountToDisplay } = nativeCoinToDisplay(nativeToken, config.coinMap);\n  const [amountInteger, amountDecimal] = amountToDisplay.split(\".\");\n\n  return (\n    (loading && <Loading loadingText={`Sending ${nameToDisplay}...`} />) ||\n    (!loading && (\n      <PageLayout>\n        <MainStack>\n          <BackButton icon={backArrowIcon} path={pathTokens} />\n          <AccountStack>\n            <Title>{nameToDisplay}</Title>\n            <YourAccount hideTitle hideBalance />\n          </AccountStack>\n          <Amount>\n            <Text>{`${amountInteger}${amountDecimal ? \".\" : \"\"}`}</Text>\n            {amountDecimal && <Text>{amountDecimal}</Text>}\n            <Text>{\" tokens\"}</Text>\n          </Amount>\n          <FormSendTokens\n            tokenName={nameToDisplay}\n            tokenAmount={amountToDisplay}\n            sendTokensAction={sendTokensAction}\n          />\n        </MainStack>\n      </PageLayout>\n    ))\n  );\n}\n","// Search form not present in form-antd: https://github.com/jannikbuschke/formik-antd/blob/master/src/input/index.tsx\nimport { Input as BaseInput } from \"antd\";\nimport { InputProps as BaseInputProps, SearchProps as BaseSearchProps } from \"antd/lib/input\";\nimport { FieldProps } from \"formik\";\nimport { Field } from \"formik-antd\";\nimport * as React from \"react\";\nimport Search from \"antd/lib/input/Search\";\n\ninterface FormikFieldProps {\n  name: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  validate?: (value: any) => undefined | string | Promise<any>;\n  fast?: boolean;\n}\n\ntype InputProps = FormikFieldProps & BaseInputProps;\n\ninterface InputType\n  extends React.ForwardRefExoticComponent<\n    FormikFieldProps & BaseInputProps & React.RefAttributes<BaseInput>\n  > {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  Search: React.ForwardRefExoticComponent<FormikFieldProps & BaseSearchProps & React.RefAttributes<Search>>;\n}\n\n// eslint-disable-next-line react/display-name\nconst Input = React.forwardRef((\n  { name, validate, fast, onChange: $onChange, onBlur: $onBlur, ...restProps }: InputProps,\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  ref: React.Ref<Search>,\n) => (\n  <Field name={name} validate={validate} fast={fast}>\n    {({ field: { value, onChange, onBlur } }: FieldProps) => (\n      <BaseInput\n        ref={ref}\n        name={name}\n        value={value}\n        onChange={(event) => {\n          onChange(event);\n          $onChange && $onChange(event);\n        }}\n        onBlur={(event) => {\n          onBlur(event);\n          $onBlur && $onBlur(event);\n        }}\n        {...restProps}\n      />\n    )}\n  </Field>\n));\n\nconst TypedInput = (Input as unknown) as InputType;\ntype SearchProps = FormikFieldProps & BaseSearchProps;\n\n// eslint-disable-next-line react/display-name\nTypedInput.Search = React.forwardRef(\n  (\n    { name, validate, fast, onChange: $onChange, onBlur: $onBlur, ...restProps }: SearchProps,\n    ref: React.Ref<BaseInput>,\n  ) => (\n    <Field name={name} validate={validate} fast={fast}>\n      {({ field: { value, onChange, onBlur } }: FieldProps) => (\n        <BaseInput.Search\n          ref={ref}\n          name={name}\n          value={value}\n          onChange={(event) => {\n            onChange(event);\n            $onChange && $onChange(event);\n          }}\n          onBlur={(event) => {\n            onBlur(event);\n            $onBlur && $onBlur(event);\n          }}\n          {...restProps}\n        />\n      )}\n    </Field>\n  ),\n);\n\nexport default TypedInput.Search;\n","import { Formik } from \"formik\";\nimport { Form, FormItem } from \"formik-antd\";\nimport React from \"react\";\nimport Search from \"../../../forms/Search\";\nimport { searchValidationSchema } from \"../../../forms/validationSchemas\";\n\ninterface FormSearchNameProps {\n  readonly currentAddress: string;\n  readonly setCurrentAddress: (value: React.SetStateAction<string>) => void;\n}\n\nexport function FormSearchName({ currentAddress, setCurrentAddress }: FormSearchNameProps): JSX.Element {\n  return (\n    <Formik\n      initialValues={{ address: currentAddress }}\n      validationSchema={searchValidationSchema}\n      onSubmit={(values) => {\n        setCurrentAddress(values.address);\n      }}\n    >\n      {(formikProps) => (\n        <Form>\n          <FormItem name=\"address\">\n            <Search\n              name=\"address\"\n              placeholder=\"Enter address\"\n              enterButton\n              onSearch={formikProps.submitForm}\n            />\n          </FormItem>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const TokenStack = styled(Stack)`\n  & > * {\n    --gap: 0;\n  }\n`;\n\nexport const TokenItem = styled.div`\n  --v-padding: var(--s-2);\n  --border-size: 1px;\n\n  padding-top: var(--v-padding);\n  padding-bottom: var(--v-padding);\n\n  padding-left: var(--s4);\n  margin-left: calc(-1 * var(--s4));\n  padding-right: var(--s4);\n  margin-right: calc(-1 * var(--s4));\n\n  margin-bottom: calc(-1 * var(--border-size));\n\n  cursor: pointer;\n\n  &:hover,\n  &:active,\n  &:focus {\n    background-color: var(--color-primary);\n\n    & * {\n      color: white;\n    }\n  }\n\n  &:first-child > * {\n    --border-size: 0;\n  }\n\n  & > * {\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n\n    span:first-child {\n      font-family: var(--ff-iceland);\n      font-size: var(--s2);\n    }\n\n    span:not(:first-child) {\n      font-weight: bolder;\n      font-size: var(--s-1);\n    }\n  }\n\n  &[data-state=\"forbidden\"] {\n    &:hover,\n    &:active,\n    &:focus {\n      background-color: var(--color-black);\n      cursor: not-allowed;\n    }\n  }\n`;\n\nexport const BorderContainer = styled.div`\n  border-top: var(--border-size) solid var(--color-primary);\n  padding-top: var(--v-padding);\n  margin-top: calc(-1 * var(--v-padding));\n`;\n","import { nativeCoinToDisplay, useAccount, useError, useSdk } from \"@cosmicdapp/logic\";\nimport { Coin } from \"@cosmjs/launchpad\";\nimport { Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { config } from \"../../../../../config\";\nimport { pathTokens } from \"../../../../paths\";\nimport { TokenDetailState } from \"../../../TokenDetail\";\nimport { BorderContainer, TokenItem, TokenStack } from \"./style\";\n\nconst { Text } = Typography;\n\ninterface TokenListProps {\n  readonly currentAddress: string;\n}\n\nexport function TokenList({ currentAddress }: TokenListProps): JSX.Element {\n  const { getClient } = useSdk();\n  const { setError } = useError();\n  const [balance, setBalance] = useState<readonly Coin[]>([]);\n\n  useEffect(() => {\n    getClient()\n      .getAccount(currentAddress)\n      .then(({ balance }) => setBalance(balance))\n      .catch(setError);\n  }, [getClient, currentAddress, setError]);\n\n  const { account } = useAccount();\n  const amAllowed = account.address === currentAddress;\n\n  const history = useHistory<TokenDetailState>();\n  function goTokenDetail(token: Coin) {\n    history.push(`${pathTokens}/${token.denom}`, { tokenAmount: token.amount });\n  }\n\n  return (\n    <TokenStack>\n      {balance.map((nativeToken) => {\n        const { denom: denomToDisplay, amount: amountToDisplay } = nativeCoinToDisplay(\n          nativeToken,\n          config.coinMap,\n        );\n\n        return (\n          <TokenItem\n            key={nativeToken.denom}\n            data-state={amAllowed ? \"\" : \"forbidden\"}\n            onClick={() => {\n              amAllowed && goTokenDetail(nativeToken);\n            }}\n          >\n            <BorderContainer>\n              <Text>{denomToDisplay}</Text>\n              <Text>{amountToDisplay !== \"0\" ? amountToDisplay : \"No tokens\"}</Text>\n            </BorderContainer>\n          </TokenItem>\n        );\n      })}\n    </TokenStack>\n  );\n}\n","import { Stack } from \"@cosmicdapp/design\";\nimport styled from \"styled-components\";\n\nexport const MainStack = styled(Stack)`\n  & > * {\n    --gap: var(--s4);\n  }\n\n  h1 {\n    margin: 0;\n  }\n\n  .ant-form {\n    margin-top: var(--gap);\n  }\n`;\n","import { PageLayout, YourAccount } from \"@cosmicdapp/design\";\nimport { useAccount } from \"@cosmicdapp/logic\";\nimport { Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport { FormSearchName } from \"./components/FormSearchName\";\nimport { TokenList } from \"./components/TokenList\";\nimport { MainStack } from \"./style\";\n\nconst { Title } = Typography;\n\nexport function Tokens(): JSX.Element {\n  const { account } = useAccount();\n  const [currentAddress, setCurrentAddress] = useState(account.address);\n\n  return (\n    <PageLayout>\n      <MainStack>\n        <Title>Tokens</Title>\n        <FormSearchName currentAddress={currentAddress} setCurrentAddress={setCurrentAddress} />\n        <TokenList currentAddress={currentAddress} />\n        <YourAccount hideTitle hideBalance />\n      </MainStack>\n    </PageLayout>\n  );\n}\n","import { GlobalStyle } from \"@cosmicdapp/design\";\nimport { AccountProvider, ErrorProvider, ProtectedSwitch, SdkProvider } from \"@cosmicdapp/logic\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { config } from \"../config\";\nimport { pathLogin, pathOperationResult, pathTokens } from \"./paths\";\nimport { Login } from \"./routes/Login\";\nimport { OperationResult } from \"./routes/OperationResult\";\nimport { TokenDetail } from \"./routes/TokenDetail\";\nimport { Tokens } from \"./routes/Tokens\";\n\nexport function App(): JSX.Element {\n  return (\n    <ErrorProvider>\n      <SdkProvider config={config}>\n        <AccountProvider>\n          <GlobalStyle />\n          <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route exact path={pathLogin} component={Login} />\n              <ProtectedSwitch authPath={pathLogin}>\n                <Route exact path={pathTokens} component={Tokens} />\n                <Route exact path={`${pathTokens}/:tokenName`} component={TokenDetail} />\n                <Route exact path={pathOperationResult} component={OperationResult} />\n              </ProtectedSwitch>\n            </Switch>\n          </Router>\n        </AccountProvider>\n      </SdkProvider>\n    </ErrorProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.less\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}