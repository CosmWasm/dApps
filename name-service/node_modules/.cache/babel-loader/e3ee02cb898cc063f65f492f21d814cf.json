{"ast":null,"code":"import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/lodash-es/_assignValue.js"],"names":["baseAssignValue","eq","objectProto","Object","prototype","hasOwnProperty","assignValue","object","key","value","objValue","call","undefined"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uBAA5B;AACA,OAAOC,EAAP,MAAe,SAAf;AAEA;;AACA,IAAIC,WAAW,GAAGC,MAAM,CAACC,SAAzB;AAEA;;AACA,IAAIC,cAAc,GAAGH,WAAW,CAACG,cAAjC;AAEA;;;;;;;;;;;AAUA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,GAA7B,EAAkCC,KAAlC,EAAyC;AACvC,MAAIC,QAAQ,GAAGH,MAAM,CAACC,GAAD,CAArB;;AACA,MAAI,EAAEH,cAAc,CAACM,IAAf,CAAoBJ,MAApB,EAA4BC,GAA5B,KAAoCP,EAAE,CAACS,QAAD,EAAWD,KAAX,CAAxC,KACCA,KAAK,KAAKG,SAAV,IAAuB,EAAEJ,GAAG,IAAID,MAAT,CAD5B,EAC+C;AAC7CP,IAAAA,eAAe,CAACO,MAAD,EAASC,GAAT,EAAcC,KAAd,CAAf;AACD;AACF;;AAED,eAAeH,WAAf","sourcesContent":["import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n"]},"metadata":{},"sourceType":"module"}