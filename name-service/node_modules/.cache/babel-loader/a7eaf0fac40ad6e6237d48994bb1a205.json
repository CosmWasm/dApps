{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isUint8Array = exports.isNonNullObject = void 0;\n/**\n * Checks if data is a non-null object (i.e. matches the TypeScript object type)\n */\n\nfunction isNonNullObject(data) {\n  return typeof data === \"object\" && data !== null;\n}\n\nexports.isNonNullObject = isNonNullObject;\n/**\n * Checks if data is an Uint8Array. Note: Buffer is treated as not a Uint8Array\n */\n\nfunction isUint8Array(data) {\n  if (!isNonNullObject(data)) return false; // Avoid instanceof check which is unreliable in some JS environments\n  // https://medium.com/@simonwarta/limitations-of-the-instanceof-operator-f4bcdbe7a400\n  // Use check that was discussed in https://github.com/crypto-browserify/pbkdf2/pull/81\n\n  if (Object.prototype.toString.call(data) !== \"[object Uint8Array]\") return false;\n\n  if (typeof Buffer !== \"undefined\" && typeof Buffer.isBuffer !== \"undefined\") {\n    // Buffer.isBuffer is available at runtime\n    if (Buffer.isBuffer(data)) return false;\n  }\n\n  return true;\n}\n\nexports.isUint8Array = isUint8Array;","map":{"version":3,"sources":["../src/typechecks.ts"],"names":[],"mappings":";;;;;;AAAA;;;;AAGA,SAAgB,eAAhB,CAAgC,IAAhC,EAA6C;AAC3C,SAAO,OAAO,IAAP,KAAgB,QAAhB,IAA4B,IAAI,KAAK,IAA5C;AACD;;AAFD,OAAA,CAAA,eAAA,GAAA,eAAA;AAIA;;;;AAGA,SAAgB,YAAhB,CAA6B,IAA7B,EAA0C;AACxC,MAAI,CAAC,eAAe,CAAC,IAAD,CAApB,EAA4B,OAAO,KAAP,CADY,CAGxC;AACA;AAEA;;AACA,MAAI,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,IAA/B,MAAyC,qBAA7C,EAAoE,OAAO,KAAP;;AAEpE,MAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,OAAO,MAAM,CAAC,QAAd,KAA2B,WAAhE,EAA6E;AAC3E;AACA,QAAI,MAAM,CAAC,QAAP,CAAgB,IAAhB,CAAJ,EAA2B,OAAO,KAAP;AAC5B;;AAED,SAAO,IAAP;AACD;;AAfD,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isUint8Array = exports.isNonNullObject = void 0;\n/**\n * Checks if data is a non-null object (i.e. matches the TypeScript object type)\n */\nfunction isNonNullObject(data) {\n    return typeof data === \"object\" && data !== null;\n}\nexports.isNonNullObject = isNonNullObject;\n/**\n * Checks if data is an Uint8Array. Note: Buffer is treated as not a Uint8Array\n */\nfunction isUint8Array(data) {\n    if (!isNonNullObject(data))\n        return false;\n    // Avoid instanceof check which is unreliable in some JS environments\n    // https://medium.com/@simonwarta/limitations-of-the-instanceof-operator-f4bcdbe7a400\n    // Use check that was discussed in https://github.com/crypto-browserify/pbkdf2/pull/81\n    if (Object.prototype.toString.call(data) !== \"[object Uint8Array]\")\n        return false;\n    if (typeof Buffer !== \"undefined\" && typeof Buffer.isBuffer !== \"undefined\") {\n        // Buffer.isBuffer is available at runtime\n        if (Buffer.isBuffer(data))\n            return false;\n    }\n    return true;\n}\nexports.isUint8Array = isUint8Array;\n//# sourceMappingURL=typechecks.js.map"]},"metadata":{},"sourceType":"script"}