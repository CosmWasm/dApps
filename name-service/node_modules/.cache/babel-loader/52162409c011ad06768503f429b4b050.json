{"ast":null,"code":"import\"antd/lib/button/style\";import _Button from\"antd/lib/button\";import\"antd/lib/typography/style\";import _Typography from\"antd/lib/typography\";import React from\"react\";import{useHistory}from\"react-router-dom\";import Center from\"../../../theme/layout/Center\";import Stack from\"../../../theme/layout/Stack\";import{pathHome}from\"../../paths\";import failIcon from\"./assets/failIcon.svg\";import successIcon from\"./assets/successIcon.svg\";import\"./OperationResult.less\";const{Text}=_Typography;function goToHome(history){history.push(pathHome);}function getResultContent(success,history){if(success){return{icon:successIcon,textClass:\"SuccessText\",buttonText:\"Home\",buttonAction:()=>goToHome(history)};}return{icon:failIcon,textClass:\"FailText\",buttonText:\"Retry\",buttonAction:history.goBack};}function OperationResult(){const history=useHistory();const{success,message,error,customButtonText,customButtonActionPath}=history.location.state;const{icon,textClass,buttonText,buttonAction}=getResultContent(success,history);const chosenButtonText=customButtonText||buttonText;const chosenButtonAction=customButtonActionPath?()=>history.push(customButtonActionPath):buttonAction;return/*#__PURE__*/React.createElement(Center,{tag:\"main\",className:\"OperationResult\"},/*#__PURE__*/React.createElement(Stack,{className:\"MainStack\"},/*#__PURE__*/React.createElement(\"img\",{src:icon,alt:\"Result icon\"}),/*#__PURE__*/React.createElement(Text,{className:textClass},message),error&&/*#__PURE__*/React.createElement(Text,{className:textClass},error),/*#__PURE__*/React.createElement(_Button,{type:\"primary\",onClick:chosenButtonAction},chosenButtonText)));}export default OperationResult;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/packages/name-service/src/App/routes/OperationResult/index.tsx"],"names":["React","useHistory","Center","Stack","pathHome","Text","goToHome","history","push","getResultContent","success","icon","successIcon","textClass","buttonText","buttonAction","failIcon","goBack","OperationResult","message","error","customButtonText","customButtonActionPath","location","state","chosenButtonText","chosenButtonAction"],"mappings":"kJAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,8BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,6BAAlB,CACA,OAASC,QAAT,KAAyB,aAAzB,C,8FAGA,MAAO,wBAAP,CAEA,KAAM,CAAEC,IAAF,aAAN,CAEA,QAASC,CAAAA,QAAT,CAAkBC,OAAlB,CAAoC,CAClCA,OAAO,CAACC,IAAR,CAAaJ,QAAb,EACD,CASD,QAASK,CAAAA,gBAAT,CAA0BC,OAA1B,CAA4CH,OAA5C,CAA6E,CAC3E,GAAIG,OAAJ,CAAa,CACX,MAAO,CACLC,IAAI,CAAEC,WADD,CAELC,SAAS,CAAE,aAFN,CAGLC,UAAU,CAAE,MAHP,CAILC,YAAY,CAAE,IAAMT,QAAQ,CAACC,OAAD,CAJvB,CAAP,CAMD,CAED,MAAO,CACLI,IAAI,CAAEK,QADD,CAELH,SAAS,CAAE,UAFN,CAGLC,UAAU,CAAE,OAHP,CAILC,YAAY,CAAER,OAAO,CAACU,MAJjB,CAAP,CAMD,CAUD,QAASC,CAAAA,eAAT,EAAwC,CACtC,KAAMX,CAAAA,OAAO,CAAGN,UAAU,EAA1B,CAEA,KAAM,CAAES,OAAF,CAAWS,OAAX,CAAoBC,KAApB,CAA2BC,gBAA3B,CAA6CC,sBAA7C,EAAwEf,OAAO,CAACgB,QAAR,CAC3EC,KADH,CAEA,KAAM,CAAEb,IAAF,CAAQE,SAAR,CAAmBC,UAAnB,CAA+BC,YAA/B,EAAgDN,gBAAgB,CAACC,OAAD,CAAUH,OAAV,CAAtE,CAEA,KAAMkB,CAAAA,gBAAgB,CAAGJ,gBAAgB,EAAIP,UAA7C,CACA,KAAMY,CAAAA,kBAAkB,CAAGJ,sBAAsB,CAC7C,IAAMf,OAAO,CAACC,IAAR,CAAac,sBAAb,CADuC,CAE7CP,YAFJ,CAIA,mBACE,oBAAC,MAAD,EAAQ,GAAG,CAAC,MAAZ,CAAmB,SAAS,CAAC,iBAA7B,eACE,oBAAC,KAAD,EAAO,SAAS,CAAC,WAAjB,eACE,2BAAK,GAAG,CAAEJ,IAAV,CAAgB,GAAG,CAAC,aAApB,EADF,cAEE,oBAAC,IAAD,EAAM,SAAS,CAAEE,SAAjB,EAA6BM,OAA7B,CAFF,CAGGC,KAAK,eAAI,oBAAC,IAAD,EAAM,SAAS,CAAEP,SAAjB,EAA6BO,KAA7B,CAHZ,cAIE,6BAAQ,IAAI,CAAC,SAAb,CAAuB,OAAO,CAAEM,kBAAhC,EACGD,gBADH,CAJF,CADF,CADF,CAYD,CAED,cAAeP,CAAAA,eAAf","sourcesContent":["import { Button, Typography } from \"antd\";\nimport { History } from \"history\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Center from \"../../../theme/layout/Center\";\nimport Stack from \"../../../theme/layout/Stack\";\nimport { pathHome } from \"../../paths\";\nimport failIcon from \"./assets/failIcon.svg\";\nimport successIcon from \"./assets/successIcon.svg\";\nimport \"./OperationResult.less\";\n\nconst { Text } = Typography;\n\nfunction goToHome(history: History) {\n  history.push(pathHome);\n}\n\ninterface ResultContent {\n  readonly icon: string;\n  readonly textClass: string;\n  readonly buttonText: string;\n  readonly buttonAction: () => void;\n}\n\nfunction getResultContent(success: boolean, history: History): ResultContent {\n  if (success) {\n    return {\n      icon: successIcon,\n      textClass: \"SuccessText\",\n      buttonText: \"Home\",\n      buttonAction: () => goToHome(history),\n    };\n  }\n\n  return {\n    icon: failIcon,\n    textClass: \"FailText\",\n    buttonText: \"Retry\",\n    buttonAction: history.goBack,\n  };\n}\n\nexport interface OperationResultState {\n  readonly success: boolean;\n  readonly message: string;\n  readonly error?: string;\n  readonly customButtonText?: string;\n  readonly customButtonActionPath?: string;\n}\n\nfunction OperationResult(): JSX.Element {\n  const history = useHistory();\n\n  const { success, message, error, customButtonText, customButtonActionPath } = history.location\n    .state as OperationResultState;\n  const { icon, textClass, buttonText, buttonAction } = getResultContent(success, history);\n\n  const chosenButtonText = customButtonText || buttonText;\n  const chosenButtonAction = customButtonActionPath\n    ? () => history.push(customButtonActionPath)\n    : buttonAction;\n\n  return (\n    <Center tag=\"main\" className=\"OperationResult\">\n      <Stack className=\"MainStack\">\n        <img src={icon} alt=\"Result icon\" />\n        <Text className={textClass}>{message}</Text>\n        {error && <Text className={textClass}>{error}</Text>}\n        <Button type=\"primary\" onClick={chosenButtonAction}>\n          {chosenButtonText}\n        </Button>\n      </Stack>\n    </Center>\n  );\n}\n\nexport default OperationResult;\n"]},"metadata":{},"sourceType":"module"}