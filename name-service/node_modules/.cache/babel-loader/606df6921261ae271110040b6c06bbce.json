{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Random = void 0;\n\nclass Random {\n  /**\n   * Returns `count` cryptographically secure random bytes\n   */\n  static getBytes(count) {\n    try {\n      const globalObject = typeof window === \"object\" ? window : self;\n      const cryptoApi = typeof globalObject.crypto !== \"undefined\" ? globalObject.crypto : globalObject.msCrypto;\n      const out = new Uint8Array(count);\n      cryptoApi.getRandomValues(out);\n      return out;\n    } catch (_a) {\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const crypto = require(\"crypto\");\n\n        return new Uint8Array([...crypto.randomBytes(count)]);\n      } catch (_b) {\n        throw new Error(\"No secure random number generator found\");\n      }\n    }\n  }\n\n}\n\nexports.Random = Random;","map":{"version":3,"sources":["../src/random.ts"],"names":[],"mappings":";;;;;;;AAGA,MAAa,MAAb,CAAmB;AACjB;;;AAGO,SAAO,QAAP,CAAgB,KAAhB,EAA6B;AAClC,QAAI;AACF,YAAM,YAAY,GAAG,OAAO,MAAP,KAAkB,QAAlB,GAA6B,MAA7B,GAAsC,IAA3D;AACA,YAAM,SAAS,GACb,OAAO,YAAY,CAAC,MAApB,KAA+B,WAA/B,GAA6C,YAAY,CAAC,MAA1D,GAAmE,YAAY,CAAC,QADlF;AAGA,YAAM,GAAG,GAAG,IAAI,UAAJ,CAAe,KAAf,CAAZ;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,GAA1B;AACA,aAAO,GAAP;AACD,KARD,CAQE,OAAA,EAAA,EAAM;AACN,UAAI;AACF;AACA,cAAM,MAAM,GAAG,OAAO,CAAC,QAAD,CAAtB;;AACA,eAAO,IAAI,UAAJ,CAAe,CAAC,GAAG,MAAM,CAAC,WAAP,CAAmB,KAAnB,CAAJ,CAAf,CAAP;AACD,OAJD,CAIE,OAAA,EAAA,EAAM;AACN,cAAM,IAAI,KAAJ,CAAU,yCAAV,CAAN;AACD;AACF;AACF;;AAtBgB;;AAAnB,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Random = void 0;\nclass Random {\n    /**\n     * Returns `count` cryptographically secure random bytes\n     */\n    static getBytes(count) {\n        try {\n            const globalObject = typeof window === \"object\" ? window : self;\n            const cryptoApi = typeof globalObject.crypto !== \"undefined\" ? globalObject.crypto : globalObject.msCrypto;\n            const out = new Uint8Array(count);\n            cryptoApi.getRandomValues(out);\n            return out;\n        }\n        catch (_a) {\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\n                const crypto = require(\"crypto\");\n                return new Uint8Array([...crypto.randomBytes(count)]);\n            }\n            catch (_b) {\n                throw new Error(\"No secure random number generator found\");\n            }\n        }\n    }\n}\nexports.Random = Random;\n//# sourceMappingURL=random.js.map"]},"metadata":{},"sourceType":"script"}