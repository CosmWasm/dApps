{"ast":null,"code":"import castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\n\nfunction createCaseFirst(methodName) {\n  return function (string) {\n    string = toString(string);\n    var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;\n    var chr = strSymbols ? strSymbols[0] : string.charAt(0);\n    var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);\n    return chr[methodName]() + trailing;\n  };\n}\n\nexport default createCaseFirst;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/lodash-es/_createCaseFirst.js"],"names":["castSlice","hasUnicode","stringToArray","toString","createCaseFirst","methodName","string","strSymbols","undefined","chr","charAt","trailing","join","slice"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA;;;;;;;;AAOA,SAASC,eAAT,CAAyBC,UAAzB,EAAqC;AACnC,SAAO,UAASC,MAAT,EAAiB;AACtBA,IAAAA,MAAM,GAAGH,QAAQ,CAACG,MAAD,CAAjB;AAEA,QAAIC,UAAU,GAAGN,UAAU,CAACK,MAAD,CAAV,GACbJ,aAAa,CAACI,MAAD,CADA,GAEbE,SAFJ;AAIA,QAAIC,GAAG,GAAGF,UAAU,GAChBA,UAAU,CAAC,CAAD,CADM,GAEhBD,MAAM,CAACI,MAAP,CAAc,CAAd,CAFJ;AAIA,QAAIC,QAAQ,GAAGJ,UAAU,GACrBP,SAAS,CAACO,UAAD,EAAa,CAAb,CAAT,CAAyBK,IAAzB,CAA8B,EAA9B,CADqB,GAErBN,MAAM,CAACO,KAAP,CAAa,CAAb,CAFJ;AAIA,WAAOJ,GAAG,CAACJ,UAAD,CAAH,KAAoBM,QAA3B;AACD,GAhBD;AAiBD;;AAED,eAAeP,eAAf","sourcesContent":["import castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nexport default createCaseFirst;\n"]},"metadata":{},"sourceType":"module"}