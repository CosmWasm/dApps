{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useSelection;\nexports.SELECTION_INVERT = exports.SELECTION_ALL = void 0;\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _rcTable = require(\"rc-table\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\")); // TODO: warning if use ajax!!!\n\n\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map()); // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1];\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, undefined, getRowKey);\n  }, [data, getRowKey, checkStrictly]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys, []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys, halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\n    var availableKeys;\n    var records;\n\n    if (preserveSelectedRowKeys) {\n      // Keep key if mark as preserveSelectedRowKeys\n      var newCache = new Map();\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n        return record;\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n\n    if (onSelectionChange) {\n      onSelectionChange(availableKeys, records);\n    }\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          (0, _devWarning[\"default\"])(!(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) === 'boolean'), 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                setSelectedKeys(keys);\n\n                if (onSelectMultiple) {\n                  onSelectMultiple(!checked, keys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }), changedKeys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }));\n                }\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = (0, _toArray2[\"default\"])(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n    }\n\n    return [(0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat((0, _toConsumableArray2[\"default\"])(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/antd/lib/table/hooks/useSelection.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","useSelection","SELECTION_INVERT","SELECTION_ALL","_toArray2","_defineProperty2","_extends2","_slicedToArray2","_toConsumableArray2","React","_DownOutlined","_treeUtil","_conductUtil","_util","_rcTable","_useMergedState3","_checkbox","_dropdown","_menu","_radio","_devWarning","getFixedType","column","fixed","flattenData","data","childrenColumnName","list","forEach","record","push","concat","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","expandIconColumnIndex","getPopupContainer","preserveRecordsRef","useRef","Map","_useMergedState","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","_useMemo","useMemo","keyEntities","convertDataToEntities","undefined","flattedData","checkboxPropsMap","map","index","key","checkboxProps","set","process","env","NODE_ENV","isCheckboxDisabled","useCallback","r","_a","get","disabled","_useMemo2","_conductCheck","conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","keys","slice","Set","derivedHalfSelectedKeySet","_useState","useState","_useState2","lastSelectedKey","setLastSelectedKey","useEffect","setSelectedKeys","availableKeys","records","newCache","current","has","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","selectInvert","keySet","add","Array","from","transformColumns","columns","recordKeys","filter","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabled","checked","length","indeterminate","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref2","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","arrDel","arrAdd","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","selectionColumn","width","columnTitle","render","INTERNAL_COL_DEFINE","_columns","expandColumn","restColumns","selectionFixed"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useSelection;\nexports.SELECTION_INVERT = exports.SELECTION_ALL = void 0;\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _rcTable = require(\"rc-table\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\"));\n\n// TODO: warning if use ajax!!!\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map()); // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1];\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, undefined, getRowKey);\n  }, [data, getRowKey, checkStrictly]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys, []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys, halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\n    var availableKeys;\n    var records;\n\n    if (preserveSelectedRowKeys) {\n      // Keep key if mark as preserveSelectedRowKeys\n      var newCache = new Map();\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n        return record;\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n\n    if (onSelectionChange) {\n      onSelectionChange(availableKeys, records);\n    }\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          (0, _devWarning[\"default\"])(!(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) === 'boolean'), 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                setSelectedKeys(keys);\n\n                if (onSelectMultiple) {\n                  onSelectMultiple(!checked, keys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }), changedKeys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }));\n                }\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = (0, _toArray2[\"default\"])(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n    }\n\n    return [(0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat((0, _toConsumableArray2[\"default\"])(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"]},"metadata":{},"sourceType":"script"}