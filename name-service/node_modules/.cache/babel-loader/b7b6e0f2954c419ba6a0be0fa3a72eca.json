{"ast":null,"code":"import \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Field, getIn } from 'formik';\nexport const FormItem = _a => {\n  var {\n    name,\n    showValidateSuccess,\n    showInitialErrorAfterTouched = false,\n    children,\n    validate\n  } = _a,\n      restProps = __rest(_a, [\"name\", \"showValidateSuccess\", \"showInitialErrorAfterTouched\", \"children\", \"validate\"]);\n\n  return React.createElement(Field, {\n    name: name,\n    validate: validate\n  }, ({\n    form: {\n      errors = {},\n      touched = {},\n      initialErrors = {}\n    }\n  }) => {\n    const error = getIn(errors, name, undefined);\n    const initialError = getIn(initialErrors, name, undefined);\n    let isTouched = getIn(touched, name, false);\n\n    if (Array.isArray(isTouched)) {\n      isTouched = isTouched.reduce((acc, value) => acc || value, false);\n    }\n\n    const hasError = error !== undefined && isTouched;\n    const hasInitialError = initialError !== undefined;\n    const isValid = !error && isTouched;\n    const showHelp = hasError || hasInitialError && (!isTouched || showInitialErrorAfterTouched);\n    return React.createElement(_Form.Item, Object.assign({\n      validateStatus: hasError || hasInitialError && !isTouched ? 'error' : isValid && showValidateSuccess ? 'success' : undefined,\n      hasFeedback: isValid,\n      help: showHelp && React.createElement(React.Fragment, null, hasError && React.createElement(\"li\", null, error), hasInitialError && (!isTouched || showInitialErrorAfterTouched) && React.createElement(\"li\", null, initialError))\n    }, restProps), children);\n  });\n};\nexport default FormItem;","map":{"version":3,"sources":["../../src/form-item/index.tsx"],"names":[],"mappings":";;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,KAAT,EAA4B,KAA5B,QAAsD,QAAtD;AAUA,OAAO,MAAM,QAAQ,GAAI,EAAD,IAOJ;MAPK;AACvB,IAAA,IADuB;AAEvB,IAAA,mBAFuB;AAGvB,IAAA,4BAA4B,GAAG,KAHR;AAIvB,IAAA,QAJuB;AAKvB,IAAA;AALuB,MAKf,E;MACR,SAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,EAAA,qBAAA,EAAA,8BAAA,EAAA,UAAA,EAAA,UAAA,CAAA,C;;AACmB,SACnB,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,IAAA,IAAI,EAAE,IAAP;AAAa,IAAA,QAAQ,EAAE;AAAvB,GAAN,EACG,CAAC;AACA,IAAA,IAAI,EAAE;AAAE,MAAA,MAAM,GAAG,EAAX;AAAe,MAAA,OAAO,GAAG,EAAzB;AAA6B,MAAA,aAAa,GAAG;AAA7C;AADN,GAAD,KAEgB;AACf,UAAM,KAAK,GAAG,KAAK,CAAC,MAAD,EAAS,IAAT,EAAe,SAAf,CAAnB;AACA,UAAM,YAAY,GAAG,KAAK,CAAC,aAAD,EAAgB,IAAhB,EAAsB,SAAtB,CAA1B;AACA,QAAI,SAAS,GAAG,KAAK,CAAC,OAAD,EAAU,IAAV,EAAgB,KAAhB,CAArB;;AACA,QAAI,KAAK,CAAC,OAAN,CAAc,SAAd,CAAJ,EAA8B;AAC5B,MAAA,SAAS,GAAG,SAAS,CAAC,MAAV,CAAiB,CAAC,GAAD,EAAM,KAAN,KAAgB,GAAG,IAAI,KAAxC,EAA+C,KAA/C,CAAZ;AACD;;AACD,UAAM,QAAQ,GAAG,KAAK,KAAK,SAAV,IAAuB,SAAxC;AACA,UAAM,eAAe,GAAG,YAAY,KAAK,SAAzC;AACA,UAAM,OAAO,GAAG,CAAC,KAAD,IAAU,SAA1B;AACA,UAAM,QAAQ,GACZ,QAAQ,IACP,eAAe,KAAK,CAAC,SAAD,IAAc,4BAAnB,CAFlB;AAIA,WACE,KAAA,CAAA,aAAA,CAAC,MAAK,IAAN,EAAU,MAAA,CAAA,MAAA,CAAA;AACR,MAAA,cAAc,EACZ,QAAQ,IAAK,eAAe,IAAI,CAAC,SAAjC,GACI,OADJ,GAEI,OAAO,IAAI,mBAAX,GACA,SADA,GAEA,SANE;AAQR,MAAA,WAAW,EAAE,OARL;AASR,MAAA,IAAI,EACF,QAAQ,IACN,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,QAAQ,IAAI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAK,KAAL,CADf,EAEG,eAAe,KACb,CAAC,SAAD,IAAc,4BADD,CAAf,IAEG,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAK,YAAL,CAJN;AAXI,KAAA,EAoBJ,SApBI,CAAV,EAsBG,QAtBH,CADF;AA0BD,GA3CH,CADmB;AA8CpB,CArDM;AAuDP,eAAe,QAAf","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Field, getIn } from 'formik';\nimport { Form } from 'antd';\nexport const FormItem = (_a) => {\n    var { name, showValidateSuccess, showInitialErrorAfterTouched = false, children, validate } = _a, restProps = __rest(_a, [\"name\", \"showValidateSuccess\", \"showInitialErrorAfterTouched\", \"children\", \"validate\"]);\n    return (React.createElement(Field, { name: name, validate: validate }, ({ form: { errors = {}, touched = {}, initialErrors = {} }, }) => {\n        const error = getIn(errors, name, undefined);\n        const initialError = getIn(initialErrors, name, undefined);\n        let isTouched = getIn(touched, name, false);\n        if (Array.isArray(isTouched)) {\n            isTouched = isTouched.reduce((acc, value) => acc || value, false);\n        }\n        const hasError = error !== undefined && isTouched;\n        const hasInitialError = initialError !== undefined;\n        const isValid = !error && isTouched;\n        const showHelp = hasError ||\n            (hasInitialError && (!isTouched || showInitialErrorAfterTouched));\n        return (React.createElement(Form.Item, Object.assign({ validateStatus: hasError || (hasInitialError && !isTouched)\n                ? 'error'\n                : isValid && showValidateSuccess\n                    ? 'success'\n                    : undefined, hasFeedback: isValid, help: showHelp && (React.createElement(React.Fragment, null,\n                hasError && React.createElement(\"li\", null, error),\n                hasInitialError &&\n                    (!isTouched || showInitialErrorAfterTouched) && (React.createElement(\"li\", null, initialError)))) }, restProps), children));\n    }));\n};\nexport default FormItem;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}