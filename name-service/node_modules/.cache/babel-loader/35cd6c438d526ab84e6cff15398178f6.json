{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupStakingExtension = exports.BondStatus = void 0;\n/**\n * Numeric bonding status\n *\n * @see https://github.com/cosmos/cosmos-sdk/blob/v0.38.5/types/staking.go#L43-L49\n */\n\nvar BondStatus;\n\n(function (BondStatus) {\n  BondStatus[BondStatus[\"Unbonded\"] = 0] = \"Unbonded\";\n  BondStatus[BondStatus[\"Unbonding\"] = 1] = \"Unbonding\";\n  BondStatus[BondStatus[\"Bonded\"] = 2] = \"Bonded\";\n})(BondStatus = exports.BondStatus || (exports.BondStatus = {}));\n\nfunction setupStakingExtension(base) {\n  return {\n    staking: {\n      delegatorDelegations: async delegatorAddress => base.get(`/staking/delegators/${delegatorAddress}/delegations`),\n      delegatorUnbondingDelegations: async delegatorAddress => base.get(`/staking/delegators/${delegatorAddress}/unbonding_delegations`),\n      delegatorTransactions: async delegatorAddress => base.get(`/staking/delegators/${delegatorAddress}/txs`),\n      delegatorValidators: async delegatorAddress => base.get(`/staking/delegators/${delegatorAddress}/validators`),\n      delegatorValidator: async (delegatorAddress, validatorAddress) => base.get(`/staking/delegators/${delegatorAddress}/validators/${validatorAddress}`),\n      delegation: async (delegatorAddress, validatorAddress) => base.get(`/staking/delegators/${delegatorAddress}/delegations/${validatorAddress}`),\n      unbondingDelegation: async (delegatorAddress, validatorAddress) => base.get(`/staking/delegators/${delegatorAddress}/unbonding_delegations/${validatorAddress}`),\n      redelegations: async () => base.get(`/staking/redelegations`),\n      validators: async params => base.get(`/staking/validators`, params),\n      validator: async validatorAddress => base.get(`/staking/validators/${validatorAddress}`),\n      validatorDelegations: async validatorAddress => base.get(`/staking/validators/${validatorAddress}/delegations`),\n      validatorUnbondingDelegations: async validatorAddress => base.get(`/staking/validators/${validatorAddress}/unbonding_delegations`),\n      historicalInfo: async height => base.get(`/staking/historical_info/${height}`),\n      pool: async () => base.get(`/staking/pool`),\n      parameters: async () => base.get(`/staking/parameters`)\n    }\n  };\n}\n\nexports.setupStakingExtension = setupStakingExtension;","map":{"version":3,"sources":["../../src/lcdapi/staking.ts"],"names":[],"mappings":";;;;;;AAKA;;;;;;AAKA,IAAY,UAAZ;;AAAA,CAAA,UAAY,UAAZ,EAAsB;AACpB,EAAA,UAAA,CAAA,UAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,UAAA,CAAA,UAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACA,EAAA,UAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACD,CAJD,EAAY,UAAU,GAAV,OAAA,CAAA,UAAA,KAAA,OAAA,CAAA,UAAA,GAAU,EAAV,CAAZ;;AAkNA,SAAgB,qBAAhB,CAAsC,IAAtC,EAAqD;AACnD,SAAO;AACL,IAAA,OAAO,EAAE;AACP,MAAA,oBAAoB,EAAE,MAAO,gBAAP,IACpB,IAAI,CAAC,GAAL,CAAS,uBAAuB,gBAAgB,cAAhD,CAFK;AAGP,MAAA,6BAA6B,EAAE,MAAO,gBAAP,IAC7B,IAAI,CAAC,GAAL,CAAS,uBAAuB,gBAAgB,wBAAhD,CAJK;AAKP,MAAA,qBAAqB,EAAE,MAAO,gBAAP,IACrB,IAAI,CAAC,GAAL,CAAS,uBAAuB,gBAAgB,MAAhD,CANK;AAOP,MAAA,mBAAmB,EAAE,MAAO,gBAAP,IACnB,IAAI,CAAC,GAAL,CAAS,uBAAuB,gBAAgB,aAAhD,CARK;AASP,MAAA,kBAAkB,EAAE,OAAO,gBAAP,EAAiC,gBAAjC,KAClB,IAAI,CAAC,GAAL,CAAS,uBAAuB,gBAAgB,eAAe,gBAAgB,EAA/E,CAVK;AAWP,MAAA,UAAU,EAAE,OAAO,gBAAP,EAAiC,gBAAjC,KACV,IAAI,CAAC,GAAL,CAAS,uBAAuB,gBAAgB,gBAAgB,gBAAgB,EAAhF,CAZK;AAaP,MAAA,mBAAmB,EAAE,OAAO,gBAAP,EAAiC,gBAAjC,KACnB,IAAI,CAAC,GAAL,CAAS,uBAAuB,gBAAgB,0BAA0B,gBAAgB,EAA1F,CAdK;AAeP,MAAA,aAAa,EAAE,YAAY,IAAI,CAAC,GAAL,CAAS,wBAAT,CAfpB;AAgBP,MAAA,UAAU,EAAE,MAAO,MAAP,IAA4C,IAAI,CAAC,GAAL,CAAS,qBAAT,EAAgC,MAAhC,CAhBjD;AAiBP,MAAA,SAAS,EAAE,MAAO,gBAAP,IAAoC,IAAI,CAAC,GAAL,CAAS,uBAAuB,gBAAgB,EAAhD,CAjBxC;AAkBP,MAAA,oBAAoB,EAAE,MAAO,gBAAP,IACpB,IAAI,CAAC,GAAL,CAAS,uBAAuB,gBAAgB,cAAhD,CAnBK;AAoBP,MAAA,6BAA6B,EAAE,MAAO,gBAAP,IAC7B,IAAI,CAAC,GAAL,CAAS,uBAAuB,gBAAgB,wBAAhD,CArBK;AAsBP,MAAA,cAAc,EAAE,MAAO,MAAP,IAA0B,IAAI,CAAC,GAAL,CAAS,4BAA4B,MAAM,EAA3C,CAtBnC;AAuBP,MAAA,IAAI,EAAE,YAAY,IAAI,CAAC,GAAL,CAAS,eAAT,CAvBX;AAwBP,MAAA,UAAU,EAAE,YAAY,IAAI,CAAC,GAAL,CAAS,qBAAT;AAxBjB;AADJ,GAAP;AA4BD;;AA7BD,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupStakingExtension = exports.BondStatus = void 0;\n/**\n * Numeric bonding status\n *\n * @see https://github.com/cosmos/cosmos-sdk/blob/v0.38.5/types/staking.go#L43-L49\n */\nvar BondStatus;\n(function (BondStatus) {\n    BondStatus[BondStatus[\"Unbonded\"] = 0] = \"Unbonded\";\n    BondStatus[BondStatus[\"Unbonding\"] = 1] = \"Unbonding\";\n    BondStatus[BondStatus[\"Bonded\"] = 2] = \"Bonded\";\n})(BondStatus = exports.BondStatus || (exports.BondStatus = {}));\nfunction setupStakingExtension(base) {\n    return {\n        staking: {\n            delegatorDelegations: async (delegatorAddress) => base.get(`/staking/delegators/${delegatorAddress}/delegations`),\n            delegatorUnbondingDelegations: async (delegatorAddress) => base.get(`/staking/delegators/${delegatorAddress}/unbonding_delegations`),\n            delegatorTransactions: async (delegatorAddress) => base.get(`/staking/delegators/${delegatorAddress}/txs`),\n            delegatorValidators: async (delegatorAddress) => base.get(`/staking/delegators/${delegatorAddress}/validators`),\n            delegatorValidator: async (delegatorAddress, validatorAddress) => base.get(`/staking/delegators/${delegatorAddress}/validators/${validatorAddress}`),\n            delegation: async (delegatorAddress, validatorAddress) => base.get(`/staking/delegators/${delegatorAddress}/delegations/${validatorAddress}`),\n            unbondingDelegation: async (delegatorAddress, validatorAddress) => base.get(`/staking/delegators/${delegatorAddress}/unbonding_delegations/${validatorAddress}`),\n            redelegations: async () => base.get(`/staking/redelegations`),\n            validators: async (params) => base.get(`/staking/validators`, params),\n            validator: async (validatorAddress) => base.get(`/staking/validators/${validatorAddress}`),\n            validatorDelegations: async (validatorAddress) => base.get(`/staking/validators/${validatorAddress}/delegations`),\n            validatorUnbondingDelegations: async (validatorAddress) => base.get(`/staking/validators/${validatorAddress}/unbonding_delegations`),\n            historicalInfo: async (height) => base.get(`/staking/historical_info/${height}`),\n            pool: async () => base.get(`/staking/pool`),\n            parameters: async () => base.get(`/staking/parameters`),\n        },\n    };\n}\nexports.setupStakingExtension = setupStakingExtension;\n//# sourceMappingURL=staking.js.map"]},"metadata":{},"sourceType":"script"}