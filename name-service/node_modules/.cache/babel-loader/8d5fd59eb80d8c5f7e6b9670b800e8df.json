{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport TreeNode from '../TreeNode';\nexport function convertChildrenToData(nodes) {\n  return toArray(nodes).map(function (node) {\n    if (!React.isValidElement(node) || !node.type) {\n      return null;\n    }\n\n    var key = node.key,\n        _node$props = node.props,\n        children = _node$props.children,\n        value = _node$props.value,\n        restProps = _objectWithoutProperties(_node$props, [\"children\", \"value\"]);\n\n    var data = _objectSpread({\n      key: key,\n      value: value\n    }, restProps);\n\n    var childData = convertChildrenToData(children);\n\n    if (childData.length) {\n      data.children = childData;\n    }\n\n    return data;\n  }).filter(function (data) {\n    return data;\n  });\n}\nexport function fillLegacyProps(dataNode) {\n  // Skip if not dataNode exist\n  if (!dataNode) {\n    return dataNode;\n  }\n\n  var cloneNode = _objectSpread({}, dataNode);\n\n  if (!('props' in cloneNode)) {\n    Object.defineProperty(cloneNode, 'props', {\n      get: function get() {\n        warning(false, 'New `rc-tree-select` not support return node instance as argument anymore. Please consider to remove `props` access.');\n        return cloneNode;\n      }\n    });\n  }\n\n  return cloneNode;\n}\nexport function fillAdditionalInfo(extra, triggerValue, checkedValues, treeData, showPosition) {\n  var triggerNode = null;\n  var nodeList = null;\n\n  function generateMap() {\n    function dig(list) {\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n      var parentIncluded = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return list.map(function (dataNode, index) {\n        var pos = \"\".concat(level, \"-\").concat(index);\n        var included = checkedValues.includes(dataNode.value);\n        var children = dig(dataNode.children || [], pos, included);\n        var node = React.createElement(TreeNode, Object.assign({}, dataNode), children.map(function (child) {\n          return child.node;\n        })); // Link with trigger node\n\n        if (triggerValue === dataNode.value) {\n          triggerNode = node;\n        }\n\n        if (included) {\n          var checkedNode = {\n            pos: pos,\n            node: node,\n            children: children\n          };\n\n          if (!parentIncluded) {\n            nodeList.push(checkedNode);\n          }\n\n          return checkedNode;\n        }\n\n        return null;\n      }).filter(function (node) {\n        return node;\n      });\n    }\n\n    if (!nodeList) {\n      nodeList = [];\n      dig(treeData); // Sort to keep the checked node length\n\n      nodeList.sort(function (_ref, _ref2) {\n        var val1 = _ref.node.props.value;\n        var val2 = _ref2.node.props.value;\n        var index1 = checkedValues.indexOf(val1);\n        var index2 = checkedValues.indexOf(val2);\n        return index1 - index2;\n      });\n    }\n  }\n\n  Object.defineProperty(extra, 'triggerNode', {\n    get: function get() {\n      warning(false, '`triggerNode` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n      return triggerNode;\n    }\n  });\n  Object.defineProperty(extra, 'allCheckedNodes', {\n    get: function get() {\n      warning(false, '`allCheckedNodes` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n\n      if (showPosition) {\n        return nodeList;\n      }\n\n      return nodeList.map(function (_ref3) {\n        var node = _ref3.node;\n        return node;\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/rc-tree-select/es/utils/legacyUtil.js"],"names":["_defineProperty","_objectWithoutProperties","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","toArray","warning","TreeNode","convertChildrenToData","nodes","map","node","isValidElement","type","_node$props","props","children","value","restProps","data","childData","fillLegacyProps","dataNode","cloneNode","get","fillAdditionalInfo","extra","triggerValue","checkedValues","treeData","showPosition","triggerNode","nodeList","generateMap","dig","list","level","undefined","parentIncluded","index","pos","concat","included","includes","createElement","assign","child","checkedNode","sort","_ref","_ref2","val1","val2","index1","indexOf","index2","_ref3"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport TreeNode from '../TreeNode';\nexport function convertChildrenToData(nodes) {\n  return toArray(nodes).map(function (node) {\n    if (!React.isValidElement(node) || !node.type) {\n      return null;\n    }\n\n    var key = node.key,\n        _node$props = node.props,\n        children = _node$props.children,\n        value = _node$props.value,\n        restProps = _objectWithoutProperties(_node$props, [\"children\", \"value\"]);\n\n    var data = _objectSpread({\n      key: key,\n      value: value\n    }, restProps);\n\n    var childData = convertChildrenToData(children);\n\n    if (childData.length) {\n      data.children = childData;\n    }\n\n    return data;\n  }).filter(function (data) {\n    return data;\n  });\n}\nexport function fillLegacyProps(dataNode) {\n  // Skip if not dataNode exist\n  if (!dataNode) {\n    return dataNode;\n  }\n\n  var cloneNode = _objectSpread({}, dataNode);\n\n  if (!('props' in cloneNode)) {\n    Object.defineProperty(cloneNode, 'props', {\n      get: function get() {\n        warning(false, 'New `rc-tree-select` not support return node instance as argument anymore. Please consider to remove `props` access.');\n        return cloneNode;\n      }\n    });\n  }\n\n  return cloneNode;\n}\nexport function fillAdditionalInfo(extra, triggerValue, checkedValues, treeData, showPosition) {\n  var triggerNode = null;\n  var nodeList = null;\n\n  function generateMap() {\n    function dig(list) {\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n      var parentIncluded = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return list.map(function (dataNode, index) {\n        var pos = \"\".concat(level, \"-\").concat(index);\n        var included = checkedValues.includes(dataNode.value);\n        var children = dig(dataNode.children || [], pos, included);\n        var node = React.createElement(TreeNode, Object.assign({}, dataNode), children.map(function (child) {\n          return child.node;\n        })); // Link with trigger node\n\n        if (triggerValue === dataNode.value) {\n          triggerNode = node;\n        }\n\n        if (included) {\n          var checkedNode = {\n            pos: pos,\n            node: node,\n            children: children\n          };\n\n          if (!parentIncluded) {\n            nodeList.push(checkedNode);\n          }\n\n          return checkedNode;\n        }\n\n        return null;\n      }).filter(function (node) {\n        return node;\n      });\n    }\n\n    if (!nodeList) {\n      nodeList = [];\n      dig(treeData); // Sort to keep the checked node length\n\n      nodeList.sort(function (_ref, _ref2) {\n        var val1 = _ref.node.props.value;\n        var val2 = _ref2.node.props.value;\n        var index1 = checkedValues.indexOf(val1);\n        var index2 = checkedValues.indexOf(val2);\n        return index1 - index2;\n      });\n    }\n  }\n\n  Object.defineProperty(extra, 'triggerNode', {\n    get: function get() {\n      warning(false, '`triggerNode` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n      return triggerNode;\n    }\n  });\n  Object.defineProperty(extra, 'allCheckedNodes', {\n    get: function get() {\n      warning(false, '`allCheckedNodes` is deprecated. Please consider decoupling data with node.');\n      generateMap();\n\n      if (showPosition) {\n        return nodeList;\n      }\n\n      return nodeList.map(function (_ref3) {\n        var node = _ref3.node;\n        return node;\n      });\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}