{"ast":null,"code":"import\"antd/lib/button/style\";import _Button from\"antd/lib/button\";import{Formik}from\"formik\";import{Form,FormItem,Input}from\"formik-antd\";import React from\"react\";import{TransferValidationSchema}from\"../../forms/validationSchemas\";function FormTransferName({setNewOwnerAddress,transferButtonText,transferButtonAction}){return/*#__PURE__*/React.createElement(Formik,{initialValues:{address:\"\"},validationSchema:TransferValidationSchema,onSubmit:transferButtonAction},formikProps=>/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(FormItem,{name:\"address\"},/*#__PURE__*/React.createElement(Input,{name:\"address\",placeholder:\"Enter address\",onChange:event=>{setNewOwnerAddress(event.target.value);}})),/*#__PURE__*/React.createElement(_Button,{type:\"primary\",onClick:transferButtonAction,disabled:!(formikProps.isValid&&formikProps.dirty)},transferButtonText)));}export default FormTransferName;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/packages/name-service/src/App/routes/Transfer/FormTransferName.tsx"],"names":["Formik","Form","FormItem","Input","React","TransferValidationSchema","FormTransferName","setNewOwnerAddress","transferButtonText","transferButtonAction","address","formikProps","event","target","value","isValid","dirty"],"mappings":"mEACA,OAASA,MAAT,KAAuB,QAAvB,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,KAAzB,KAAsC,aAAtC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,wBAAT,KAAyC,+BAAzC,CAQA,QAASC,CAAAA,gBAAT,CAA0B,CACxBC,kBADwB,CAExBC,kBAFwB,CAGxBC,oBAHwB,CAA1B,CAIuC,CACrC,mBACE,oBAAC,MAAD,EACE,aAAa,CAAE,CAAEC,OAAO,CAAE,EAAX,CADjB,CAEE,gBAAgB,CAAEL,wBAFpB,CAGE,QAAQ,CAAEI,oBAHZ,EAKIE,WAAD,eACC,oBAAC,IAAD,mBACE,oBAAC,QAAD,EAAU,IAAI,CAAC,SAAf,eACE,oBAAC,KAAD,EACE,IAAI,CAAC,SADP,CAEE,WAAW,CAAC,eAFd,CAGE,QAAQ,CAAGC,KAAD,EAAW,CACnBL,kBAAkB,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB,CACD,CALH,EADF,CADF,cAUE,6BACE,IAAI,CAAC,SADP,CAEE,OAAO,CAAEL,oBAFX,CAGE,QAAQ,CAAE,EAAEE,WAAW,CAACI,OAAZ,EAAuBJ,WAAW,CAACK,KAArC,CAHZ,EAKGR,kBALH,CAVF,CANJ,CADF,CA4BD,CAED,cAAeF,CAAAA,gBAAf","sourcesContent":["import { Button } from \"antd\";\nimport { Formik } from \"formik\";\nimport { Form, FormItem, Input } from \"formik-antd\";\nimport React from \"react\";\nimport { TransferValidationSchema } from \"../../forms/validationSchemas\";\n\ninterface FormTransferNameProps {\n  readonly setNewOwnerAddress: (value: React.SetStateAction<string>) => void;\n  readonly transferButtonText: string;\n  readonly transferButtonAction: () => void;\n}\n\nfunction FormTransferName({\n  setNewOwnerAddress,\n  transferButtonText,\n  transferButtonAction,\n}: FormTransferNameProps): JSX.Element {\n  return (\n    <Formik\n      initialValues={{ address: \"\" }}\n      validationSchema={TransferValidationSchema}\n      onSubmit={transferButtonAction}\n    >\n      {(formikProps) => (\n        <Form>\n          <FormItem name=\"address\">\n            <Input\n              name=\"address\"\n              placeholder=\"Enter address\"\n              onChange={(event) => {\n                setNewOwnerAddress(event.target.value);\n              }}\n            />\n          </FormItem>\n          <Button\n            type=\"primary\"\n            onClick={transferButtonAction}\n            disabled={!(formikProps.isValid && formikProps.dirty)}\n          >\n            {transferButtonText}\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default FormTransferName;\n"]},"metadata":{},"sourceType":"module"}