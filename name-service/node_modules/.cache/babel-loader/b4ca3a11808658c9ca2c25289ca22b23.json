{"ast":null,"code":"/* global DOMException */\nmodule.exports = clipboardCopy;\n\nfunction clipboardCopy(text) {\n  // Use the Async Clipboard API when available. Requires a secure browing\n  // context (i.e. HTTPS)\n  if (navigator.clipboard) {\n    return navigator.clipboard.writeText(text).catch(function (err) {\n      throw err !== undefined ? err : new DOMException('The request is not allowed', 'NotAllowedError');\n    });\n  } // ...Otherwise, use document.execCommand() fallback\n  // Put the text to copy into a <span>\n\n\n  var span = document.createElement('span');\n  span.textContent = text; // Preserve consecutive spaces and newlines\n\n  span.style.whiteSpace = 'pre'; // Add the <span> to the page\n\n  document.body.appendChild(span); // Make a selection object representing the range of text selected by the user\n\n  var selection = window.getSelection();\n  var range = window.document.createRange();\n  selection.removeAllRanges();\n  range.selectNode(span);\n  selection.addRange(range); // Copy text to the clipboard\n\n  var success = false;\n\n  try {\n    success = window.document.execCommand('copy');\n  } catch (err) {\n    console.log('error', err);\n  } // Cleanup\n\n\n  selection.removeAllRanges();\n  window.document.body.removeChild(span);\n  return success ? Promise.resolve() : Promise.reject(new DOMException('The request is not allowed', 'NotAllowedError'));\n}","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/clipboard-copy/index.js"],"names":["module","exports","clipboardCopy","text","navigator","clipboard","writeText","catch","err","undefined","DOMException","span","document","createElement","textContent","style","whiteSpace","body","appendChild","selection","window","getSelection","range","createRange","removeAllRanges","selectNode","addRange","success","execCommand","console","log","removeChild","Promise","resolve","reject"],"mappings":"AAAA;AAEAA,MAAM,CAACC,OAAP,GAAiBC,aAAjB;;AAEA,SAASA,aAAT,CAAwBC,IAAxB,EAA8B;AAC5B;AACA;AACA,MAAIC,SAAS,CAACC,SAAd,EAAyB;AACvB,WAAOD,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BH,IAA9B,EAAoCI,KAApC,CAA0C,UAAUC,GAAV,EAAe;AAC9D,YAAOA,GAAG,KAAKC,SAAR,GAAoBD,GAApB,GAA0B,IAAIE,YAAJ,CAAiB,4BAAjB,EAA+C,iBAA/C,CAAjC;AACD,KAFM,CAAP;AAGD,GAP2B,CAS5B;AAEA;;;AACA,MAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,EAAAA,IAAI,CAACG,WAAL,GAAmBX,IAAnB,CAb4B,CAe5B;;AACAQ,EAAAA,IAAI,CAACI,KAAL,CAAWC,UAAX,GAAwB,KAAxB,CAhB4B,CAkB5B;;AACAJ,EAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,IAA1B,EAnB4B,CAqB5B;;AACA,MAAIQ,SAAS,GAAGC,MAAM,CAACC,YAAP,EAAhB;AACA,MAAIC,KAAK,GAAGF,MAAM,CAACR,QAAP,CAAgBW,WAAhB,EAAZ;AACAJ,EAAAA,SAAS,CAACK,eAAV;AACAF,EAAAA,KAAK,CAACG,UAAN,CAAiBd,IAAjB;AACAQ,EAAAA,SAAS,CAACO,QAAV,CAAmBJ,KAAnB,EA1B4B,CA4B5B;;AACA,MAAIK,OAAO,GAAG,KAAd;;AACA,MAAI;AACFA,IAAAA,OAAO,GAAGP,MAAM,CAACR,QAAP,CAAgBgB,WAAhB,CAA4B,MAA5B,CAAV;AACD,GAFD,CAEE,OAAOpB,GAAP,EAAY;AACZqB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBtB,GAArB;AACD,GAlC2B,CAoC5B;;;AACAW,EAAAA,SAAS,CAACK,eAAV;AACAJ,EAAAA,MAAM,CAACR,QAAP,CAAgBK,IAAhB,CAAqBc,WAArB,CAAiCpB,IAAjC;AAEA,SAAOgB,OAAO,GACVK,OAAO,CAACC,OAAR,EADU,GAEVD,OAAO,CAACE,MAAR,CAAe,IAAIxB,YAAJ,CAAiB,4BAAjB,EAA+C,iBAA/C,CAAf,CAFJ;AAGD","sourcesContent":["/* global DOMException */\n\nmodule.exports = clipboardCopy\n\nfunction clipboardCopy (text) {\n  // Use the Async Clipboard API when available. Requires a secure browing\n  // context (i.e. HTTPS)\n  if (navigator.clipboard) {\n    return navigator.clipboard.writeText(text).catch(function (err) {\n      throw (err !== undefined ? err : new DOMException('The request is not allowed', 'NotAllowedError'))\n    })\n  }\n\n  // ...Otherwise, use document.execCommand() fallback\n\n  // Put the text to copy into a <span>\n  var span = document.createElement('span')\n  span.textContent = text\n\n  // Preserve consecutive spaces and newlines\n  span.style.whiteSpace = 'pre'\n\n  // Add the <span> to the page\n  document.body.appendChild(span)\n\n  // Make a selection object representing the range of text selected by the user\n  var selection = window.getSelection()\n  var range = window.document.createRange()\n  selection.removeAllRanges()\n  range.selectNode(span)\n  selection.addRange(range)\n\n  // Copy text to the clipboard\n  var success = false\n  try {\n    success = window.document.execCommand('copy')\n  } catch (err) {\n    console.log('error', err)\n  }\n\n  // Cleanup\n  selection.removeAllRanges()\n  window.document.body.removeChild(span)\n\n  return success\n    ? Promise.resolve()\n    : Promise.reject(new DOMException('The request is not allowed', 'NotAllowedError'))\n}\n"]},"metadata":{},"sourceType":"script"}