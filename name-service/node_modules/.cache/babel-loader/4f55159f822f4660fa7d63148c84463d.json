{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport Header from './Header';\nimport ColGroup from '../ColGroup';\nimport TableContext from '../context/TableContext';\n\nfunction useColumnWidth(colWidths, columCount) {\n  return useMemo(function () {\n    var cloneColumns = [];\n\n    for (var i = 0; i < columCount; i += 1) {\n      var val = colWidths[i];\n\n      if (val) {\n        cloneColumns[i] = val;\n      } else {\n        return null;\n      }\n    }\n\n    return cloneColumns;\n  }, [colWidths.join('_'), columCount]);\n}\n\nfunction FixedHeader(_ref) {\n  var columns = _ref.columns,\n      flattenColumns = _ref.flattenColumns,\n      colWidths = _ref.colWidths,\n      columCount = _ref.columCount,\n      stickyOffsets = _ref.stickyOffsets,\n      direction = _ref.direction,\n      props = _objectWithoutProperties(_ref, [\"columns\", \"flattenColumns\", \"colWidths\", \"columCount\", \"stickyOffsets\", \"direction\"]);\n\n  var _React$useContext = React.useContext(TableContext),\n      prefixCls = _React$useContext.prefixCls,\n      scrollbarSize = _React$useContext.scrollbarSize; // Add scrollbar column\n\n\n  var lastColumn = flattenColumns[flattenColumns.length - 1];\n  var ScrollBarColumn = {\n    fixed: lastColumn ? lastColumn.fixed : null,\n    onHeaderCell: function onHeaderCell() {\n      return {\n        className: \"\".concat(prefixCls, \"-cell-scrollbar\")\n      };\n    }\n  };\n  var columnsWithScrollbar = useMemo(function () {\n    return scrollbarSize ? [].concat(_toConsumableArray(columns), [ScrollBarColumn]) : columns;\n  }, [scrollbarSize, columns]);\n  var flattenColumnsWithScrollbar = useMemo(function () {\n    return scrollbarSize ? [].concat(_toConsumableArray(flattenColumns), [ScrollBarColumn]) : flattenColumns;\n  }, [scrollbarSize, flattenColumns]); // Calculate the sticky offsets\n\n  var headerStickyOffsets = useMemo(function () {\n    var right = stickyOffsets.right,\n        left = stickyOffsets.left;\n    return _objectSpread(_objectSpread({}, stickyOffsets), {}, {\n      left: direction === 'rtl' ? [].concat(_toConsumableArray(left.map(function (width) {\n        return width + scrollbarSize;\n      })), [0]) : left,\n      right: direction === 'rtl' ? right : [].concat(_toConsumableArray(right.map(function (width) {\n        return width + scrollbarSize;\n      })), [0])\n    });\n  }, [scrollbarSize, stickyOffsets]);\n  var mergedColumnWidth = useColumnWidth(colWidths, columCount);\n  return React.createElement(\"table\", {\n    style: {\n      tableLayout: 'fixed',\n      visibility: mergedColumnWidth ? null : 'hidden'\n    }\n  }, React.createElement(ColGroup, {\n    colWidths: mergedColumnWidth ? [].concat(_toConsumableArray(mergedColumnWidth), [scrollbarSize]) : [],\n    columCount: columCount + 1,\n    columns: flattenColumnsWithScrollbar\n  }), React.createElement(Header, Object.assign({}, props, {\n    stickyOffsets: headerStickyOffsets,\n    columns: columnsWithScrollbar,\n    flattenColumns: flattenColumnsWithScrollbar\n  })));\n}\n\nexport default FixedHeader;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/rc-table/es/Header/FixedHeader.js"],"names":["_defineProperty","_toConsumableArray","_objectWithoutProperties","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","useMemo","Header","ColGroup","TableContext","useColumnWidth","colWidths","columCount","cloneColumns","val","join","FixedHeader","_ref","columns","flattenColumns","stickyOffsets","direction","props","_React$useContext","useContext","prefixCls","scrollbarSize","lastColumn","ScrollBarColumn","fixed","onHeaderCell","className","concat","columnsWithScrollbar","flattenColumnsWithScrollbar","headerStickyOffsets","right","left","map","width","mergedColumnWidth","createElement","style","tableLayout","visibility","assign"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport Header from './Header';\nimport ColGroup from '../ColGroup';\nimport TableContext from '../context/TableContext';\n\nfunction useColumnWidth(colWidths, columCount) {\n  return useMemo(function () {\n    var cloneColumns = [];\n\n    for (var i = 0; i < columCount; i += 1) {\n      var val = colWidths[i];\n\n      if (val) {\n        cloneColumns[i] = val;\n      } else {\n        return null;\n      }\n    }\n\n    return cloneColumns;\n  }, [colWidths.join('_'), columCount]);\n}\n\nfunction FixedHeader(_ref) {\n  var columns = _ref.columns,\n      flattenColumns = _ref.flattenColumns,\n      colWidths = _ref.colWidths,\n      columCount = _ref.columCount,\n      stickyOffsets = _ref.stickyOffsets,\n      direction = _ref.direction,\n      props = _objectWithoutProperties(_ref, [\"columns\", \"flattenColumns\", \"colWidths\", \"columCount\", \"stickyOffsets\", \"direction\"]);\n\n  var _React$useContext = React.useContext(TableContext),\n      prefixCls = _React$useContext.prefixCls,\n      scrollbarSize = _React$useContext.scrollbarSize; // Add scrollbar column\n\n\n  var lastColumn = flattenColumns[flattenColumns.length - 1];\n  var ScrollBarColumn = {\n    fixed: lastColumn ? lastColumn.fixed : null,\n    onHeaderCell: function onHeaderCell() {\n      return {\n        className: \"\".concat(prefixCls, \"-cell-scrollbar\")\n      };\n    }\n  };\n  var columnsWithScrollbar = useMemo(function () {\n    return scrollbarSize ? [].concat(_toConsumableArray(columns), [ScrollBarColumn]) : columns;\n  }, [scrollbarSize, columns]);\n  var flattenColumnsWithScrollbar = useMemo(function () {\n    return scrollbarSize ? [].concat(_toConsumableArray(flattenColumns), [ScrollBarColumn]) : flattenColumns;\n  }, [scrollbarSize, flattenColumns]); // Calculate the sticky offsets\n\n  var headerStickyOffsets = useMemo(function () {\n    var right = stickyOffsets.right,\n        left = stickyOffsets.left;\n    return _objectSpread(_objectSpread({}, stickyOffsets), {}, {\n      left: direction === 'rtl' ? [].concat(_toConsumableArray(left.map(function (width) {\n        return width + scrollbarSize;\n      })), [0]) : left,\n      right: direction === 'rtl' ? right : [].concat(_toConsumableArray(right.map(function (width) {\n        return width + scrollbarSize;\n      })), [0])\n    });\n  }, [scrollbarSize, stickyOffsets]);\n  var mergedColumnWidth = useColumnWidth(colWidths, columCount);\n  return React.createElement(\"table\", {\n    style: {\n      tableLayout: 'fixed',\n      visibility: mergedColumnWidth ? null : 'hidden'\n    }\n  }, React.createElement(ColGroup, {\n    colWidths: mergedColumnWidth ? [].concat(_toConsumableArray(mergedColumnWidth), [scrollbarSize]) : [],\n    columCount: columCount + 1,\n    columns: flattenColumnsWithScrollbar\n  }), React.createElement(Header, Object.assign({}, props, {\n    stickyOffsets: headerStickyOffsets,\n    columns: columnsWithScrollbar,\n    flattenColumns: flattenColumnsWithScrollbar\n  })));\n}\n\nexport default FixedHeader;"]},"metadata":{},"sourceType":"module"}