{"ast":null,"code":"import \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport Field from '../field';\nconst Input = React.forwardRef((_a, ref) => {\n  var {\n    name,\n    validate,\n    fast,\n    onChange: $onChange,\n    onBlur: $onBlur\n  } = _a,\n      restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\", \"onBlur\"]);\n\n  return React.createElement(Field, {\n    name: name,\n    validate: validate,\n    fast: fast\n  }, ({\n    field: {\n      value,\n      onChange,\n      onBlur\n    }\n  }) => React.createElement(_Input, Object.assign({\n    ref: ref,\n    name: name,\n    value: value,\n    onChange: event => {\n      onChange(event);\n      $onChange && $onChange(event);\n    },\n    onBlur: event => {\n      onBlur(event);\n      $onBlur && $onBlur(event);\n    }\n  }, restProps)));\n});\nconst TypedInput = Input;\nTypedInput.Password = React.forwardRef((_a, ref) => {\n  var {\n    name,\n    validate,\n    fast,\n    onChange: $onChange,\n    onBlur: $onBlur\n  } = _a,\n      restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\", \"onBlur\"]);\n\n  return React.createElement(Field, {\n    name: name,\n    validate: validate,\n    fast: fast\n  }, ({\n    field: {\n      value,\n      onChange,\n      onBlur\n    }\n  }) => React.createElement(_Input.Password, Object.assign({\n    ref: ref,\n    name: name,\n    value: value,\n    onChange: event => {\n      onChange(event);\n      $onChange && $onChange(event);\n    },\n    onBlur: event => {\n      onBlur(event);\n      $onBlur && $onBlur(event);\n    }\n  }, restProps)));\n});\nTypedInput.TextArea = React.forwardRef((_a, ref) => {\n  var {\n    name,\n    validate,\n    fast,\n    onChange: $onChange,\n    onBlur: $onBlur\n  } = _a,\n      restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\", \"onBlur\"]);\n\n  return React.createElement(Field, {\n    name: name,\n    validate: validate,\n    fast: fast\n  }, ({\n    field: {\n      value,\n      onChange,\n      onBlur\n    }\n  }) => React.createElement(_Input.TextArea, Object.assign({\n    ref: ref,\n    name: name,\n    value: value,\n    onChange: event => {\n      onChange(event);\n      $onChange && $onChange(event);\n    },\n    onBlur: event => {\n      onBlur(event);\n      $onBlur && $onBlur(event);\n    }\n  }, restProps)));\n});\nexport { TypedInput as Input };\nexport default TypedInput;","map":{"version":3,"sources":["../../src/input/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport { Input as $Input } from 'antd';\nimport * as React from 'react';\nimport Field from '../field';\nconst Input = React.forwardRef((_a, ref) => {\n    var { name, validate, fast, onChange: $onChange, onBlur: $onBlur } = _a, restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\", \"onBlur\"]);\n    return (React.createElement(Field, { name: name, validate: validate, fast: fast }, ({ field: { value, onChange, onBlur } }) => (React.createElement($Input, Object.assign({ ref: ref, name: name, value: value, onChange: (event) => {\n            onChange(event);\n            $onChange && $onChange(event);\n        }, onBlur: (event) => {\n            onBlur(event);\n            $onBlur && $onBlur(event);\n        } }, restProps)))));\n});\nconst TypedInput = Input;\nTypedInput.Password = React.forwardRef((_a, ref) => {\n    var { name, validate, fast, onChange: $onChange, onBlur: $onBlur } = _a, restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\", \"onBlur\"]);\n    return (React.createElement(Field, { name: name, validate: validate, fast: fast }, ({ field: { value, onChange, onBlur } }) => (React.createElement($Input.Password, Object.assign({ ref: ref, name: name, value: value, onChange: (event) => {\n            onChange(event);\n            $onChange && $onChange(event);\n        }, onBlur: (event) => {\n            onBlur(event);\n            $onBlur && $onBlur(event);\n        } }, restProps)))));\n});\nTypedInput.TextArea = React.forwardRef((_a, ref) => {\n    var { name, validate, fast, onChange: $onChange, onBlur: $onBlur } = _a, restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\", \"onBlur\"]);\n    return (React.createElement(Field, { name: name, validate: validate, fast: fast }, ({ field: { value, onChange, onBlur } }) => (React.createElement($Input.TextArea, Object.assign({ ref: ref, name: name, value: value, onChange: (event) => {\n            onChange(event);\n            $onChange && $onChange(event);\n        }, onBlur: (event) => {\n            onBlur(event);\n            $onBlur && $onBlur(event);\n        } }, restProps)))));\n});\nexport { TypedInput as Input };\nexport default TypedInput;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}