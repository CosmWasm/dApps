{"ast":null,"code":"import inherits from './util/inherits';\nimport MixedSchema from './mixed';\nexport default BooleanSchema;\n\nfunction BooleanSchema() {\n  var _this = this;\n\n  if (!(this instanceof BooleanSchema)) return new BooleanSchema();\n  MixedSchema.call(this, {\n    type: 'boolean'\n  });\n  this.withMutation(function () {\n    _this.transform(function (value) {\n      if (!this.isType(value)) {\n        if (/^(true|1)$/i.test(value)) return true;\n        if (/^(false|0)$/i.test(value)) return false;\n      }\n\n      return value;\n    });\n  });\n}\n\ninherits(BooleanSchema, MixedSchema, {\n  _typeCheck: function _typeCheck(v) {\n    if (v instanceof Boolean) v = v.valueOf();\n    return typeof v === 'boolean';\n  }\n});","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/yup/es/boolean.js"],"names":["inherits","MixedSchema","BooleanSchema","_this","call","type","withMutation","transform","value","isType","test","_typeCheck","v","Boolean","valueOf"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,eAAeC,aAAf;;AAEA,SAASA,aAAT,GAAyB;AACvB,MAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAI,EAAE,gBAAgBD,aAAlB,CAAJ,EAAsC,OAAO,IAAIA,aAAJ,EAAP;AACtCD,EAAAA,WAAW,CAACG,IAAZ,CAAiB,IAAjB,EAAuB;AACrBC,IAAAA,IAAI,EAAE;AADe,GAAvB;AAGA,OAAKC,YAAL,CAAkB,YAAY;AAC5BH,IAAAA,KAAK,CAACI,SAAN,CAAgB,UAAUC,KAAV,EAAiB;AAC/B,UAAI,CAAC,KAAKC,MAAL,CAAYD,KAAZ,CAAL,EAAyB;AACvB,YAAI,cAAcE,IAAd,CAAmBF,KAAnB,CAAJ,EAA+B,OAAO,IAAP;AAC/B,YAAI,eAAeE,IAAf,CAAoBF,KAApB,CAAJ,EAAgC,OAAO,KAAP;AACjC;;AAED,aAAOA,KAAP;AACD,KAPD;AAQD,GATD;AAUD;;AAEDR,QAAQ,CAACE,aAAD,EAAgBD,WAAhB,EAA6B;AACnCU,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,CAApB,EAAuB;AACjC,QAAIA,CAAC,YAAYC,OAAjB,EAA0BD,CAAC,GAAGA,CAAC,CAACE,OAAF,EAAJ;AAC1B,WAAO,OAAOF,CAAP,KAAa,SAApB;AACD;AAJkC,CAA7B,CAAR","sourcesContent":["import inherits from './util/inherits';\nimport MixedSchema from './mixed';\nexport default BooleanSchema;\n\nfunction BooleanSchema() {\n  var _this = this;\n\n  if (!(this instanceof BooleanSchema)) return new BooleanSchema();\n  MixedSchema.call(this, {\n    type: 'boolean'\n  });\n  this.withMutation(function () {\n    _this.transform(function (value) {\n      if (!this.isType(value)) {\n        if (/^(true|1)$/i.test(value)) return true;\n        if (/^(false|0)$/i.test(value)) return false;\n      }\n\n      return value;\n    });\n  });\n}\n\ninherits(BooleanSchema, MixedSchema, {\n  _typeCheck: function _typeCheck(v) {\n    if (v instanceof Boolean) v = v.valueOf();\n    return typeof v === 'boolean';\n  }\n});"]},"metadata":{},"sourceType":"module"}