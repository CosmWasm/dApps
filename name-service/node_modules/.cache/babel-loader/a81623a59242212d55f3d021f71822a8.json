{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/**\n * Legacy code. Should avoid to use if you are new to import these code.\n */\n\nimport React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport TreeNode from './TreeNode';\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\nexport function arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\nexport function arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\nexport function posToArr(pos) {\n  return pos.split('-');\n}\nexport function getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\nexport function isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\nexport function getDragNodesKeys(dragNodeKey, keyEntities) {\n  var dragNodesKeys = [dragNodeKey];\n  var entity = keyEntities[dragNodeKey];\n\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n          children = _ref.children;\n      dragNodesKeys.push(key);\n      dig(children);\n    });\n  }\n\n  dig(entity.children);\n  return dragNodesKeys;\n} // Only used when drag, not affect SSR.\n\nexport function calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n\n  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(),\n      top = _treeNode$selectHandl.top,\n      bottom = _treeNode$selectHandl.bottom,\n      height = _treeNode$selectHandl.height;\n\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n\n  if (clientY <= top + des) {\n    return -1;\n  }\n\n  if (clientY >= bottom - des) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nexport function convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref2 = processor || {},\n      _ref2$processProps = _ref2.processProps,\n      processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n        props = _objectWithoutProperties(_ref3, [\"children\"]);\n\n    var childrenNodes = convertDataToTree(children, processor);\n    return React.createElement(TreeNode, Object.assign({}, processProps(props)), childrenNodes);\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if (_typeof(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return _toConsumableArray(expandedKeys);\n}\n/**\n * Returns only the data- and aria- key/value pairs\n */\n\nexport function getDataAndAria(props) {\n  var omitProps = {};\n  Object.keys(props).forEach(function (key) {\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      omitProps[key] = props[key];\n    }\n  });\n  return omitProps;\n}","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/rc-tree/es/util.js"],"names":["_toConsumableArray","_typeof","_objectWithoutProperties","React","warning","TreeNode","DRAG_SIDE_RANGE","DRAG_MIN_GAP","arrDel","list","value","clone","slice","index","indexOf","splice","arrAdd","push","posToArr","pos","split","getPosition","level","concat","isTreeNode","node","type","getDragNodesKeys","dragNodeKey","keyEntities","dragNodesKeys","entity","dig","arguments","length","undefined","forEach","_ref","key","children","calcDropPosition","event","treeNode","clientY","_treeNode$selectHandl","selectHandle","getBoundingClientRect","top","bottom","height","des","Math","max","calcSelectedKeys","selectedKeys","props","multiple","internalProcessProps","convertDataToTree","treeData","processor","_ref2","_ref2$processProps","processProps","Array","isArray","map","_ref3","childrenNodes","createElement","Object","assign","parseCheckedKeys","keys","keyProps","checkedKeys","halfCheckedKeys","checked","halfChecked","conductExpandParent","keyList","expandedKeys","Set","conductUp","has","add","parent","disabled","getDataAndAria","omitProps","startsWith"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/**\n * Legacy code. Should avoid to use if you are new to import these code.\n */\nimport React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport TreeNode from './TreeNode';\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\nexport function arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\nexport function arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\nexport function posToArr(pos) {\n  return pos.split('-');\n}\nexport function getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\nexport function isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\nexport function getDragNodesKeys(dragNodeKey, keyEntities) {\n  var dragNodesKeys = [dragNodeKey];\n  var entity = keyEntities[dragNodeKey];\n\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n          children = _ref.children;\n      dragNodesKeys.push(key);\n      dig(children);\n    });\n  }\n\n  dig(entity.children);\n  return dragNodesKeys;\n} // Only used when drag, not affect SSR.\n\nexport function calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n\n  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(),\n      top = _treeNode$selectHandl.top,\n      bottom = _treeNode$selectHandl.bottom,\n      height = _treeNode$selectHandl.height;\n\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n\n  if (clientY <= top + des) {\n    return -1;\n  }\n\n  if (clientY >= bottom - des) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nexport function convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref2 = processor || {},\n      _ref2$processProps = _ref2.processProps,\n      processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n        props = _objectWithoutProperties(_ref3, [\"children\"]);\n\n    var childrenNodes = convertDataToTree(children, processor);\n    return React.createElement(TreeNode, Object.assign({}, processProps(props)), childrenNodes);\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if (_typeof(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return _toConsumableArray(expandedKeys);\n}\n/**\n * Returns only the data- and aria- key/value pairs\n */\n\nexport function getDataAndAria(props) {\n  var omitProps = {};\n  Object.keys(props).forEach(function (key) {\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      omitProps[key] = props[key];\n    }\n  });\n  return omitProps;\n}"]},"metadata":{},"sourceType":"module"}