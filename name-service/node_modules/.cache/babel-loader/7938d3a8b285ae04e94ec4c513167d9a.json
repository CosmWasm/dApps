{"ast":null,"code":"function ProtectedRoutes(routeProps, {\n  children\n}) {\n  /* const initialized = useSdk().initialized;\n   return initialized ? (\n    <>{children}</>\n  ) : (\n    <Redirect\n      to={{\n        pathname: pathLogin,\n        state: { redirectPathname: routeProps.location.pathname, redirectState: routeProps.location.state },\n      }}\n    />\n  ); */\n  return children;\n}\n\nexport default ProtectedRoutes;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/packages/name-service/src/App/ProtectedRoutes.tsx"],"names":["ProtectedRoutes","routeProps","children"],"mappings":"AAKA,SAASA,eAAT,CACEC,UADF,EAEE;AAAEC,EAAAA;AAAF,CAFF,EAGe;AACb;;;;;;;;;;;AAaA,SAAOA,QAAP;AACD;;AAED,eAAeF,eAAf","sourcesContent":["import React from \"react\";\nimport { Redirect, RouteProps } from \"react-router-dom\";\nimport { useSdk } from \"../service\";\nimport { pathLogin } from \"./paths\";\n\nfunction ProtectedRoutes(\n  routeProps: RouteProps,\n  { children }: React.HTMLAttributes<HTMLOrSVGElement>,\n): JSX.Element {\n  /* const initialized = useSdk().initialized;\n\n  return initialized ? (\n    <>{children}</>\n  ) : (\n    <Redirect\n      to={{\n        pathname: pathLogin,\n        state: { redirectPathname: routeProps.location.pathname, redirectState: routeProps.location.state },\n      }}\n    />\n  ); */\n\n  return children;\n}\n\nexport default ProtectedRoutes;\n"]},"metadata":{},"sourceType":"module"}