{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPathValue = getPathValue;\nexports.getColumnsKey = getColumnsKey;\nexports.mergeObject = mergeObject;\nexports.validateValue = validateValue;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar INTERNAL_KEY_PREFIX = 'RC_TABLE_KEY';\n\nfunction toArray(arr) {\n  if (arr === undefined || arr === null) {\n    return [];\n  }\n\n  return Array.isArray(arr) ? arr : [arr];\n}\n\nfunction getPathValue(record, path) {\n  // Skip if path is empty\n  if (!path && typeof path !== 'number') {\n    return record;\n  }\n\n  var pathList = toArray(path);\n  var current = record;\n\n  for (var i = 0; i < pathList.length; i += 1) {\n    if (!current) {\n      return null;\n    }\n\n    var prop = pathList[i];\n    current = current[prop];\n  }\n\n  return current;\n}\n\nfunction getColumnsKey(columns) {\n  var columnKeys = [];\n  var keys = {};\n  columns.forEach(function (column) {\n    var _ref = column || {},\n        key = _ref.key,\n        dataIndex = _ref.dataIndex;\n\n    var mergedKey = key || toArray(dataIndex).join('-') || INTERNAL_KEY_PREFIX;\n\n    while (keys[mergedKey]) {\n      mergedKey = \"\".concat(mergedKey, \"_next\");\n    }\n\n    keys[mergedKey] = true;\n    columnKeys.push(mergedKey);\n  });\n  return columnKeys;\n}\n\nfunction mergeObject() {\n  var merged = {};\n  /* eslint-disable no-param-reassign */\n\n  function fillProps(obj, clone) {\n    if (clone) {\n      Object.keys(clone).forEach(function (key) {\n        var value = clone[key];\n\n        if (value && (0, _typeof2.default)(value) === 'object') {\n          obj[key] = obj[key] || {};\n          fillProps(obj[key], value);\n        } else {\n          obj[key] = value;\n        }\n      });\n    }\n  }\n  /* eslint-enable */\n\n\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  objects.forEach(function (clone) {\n    fillProps(merged, clone);\n  });\n  return merged;\n}\n\nfunction validateValue(val) {\n  return val !== null && val !== undefined;\n}","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/rc-table/lib/utils/valueUtil.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getPathValue","getColumnsKey","mergeObject","validateValue","_typeof2","INTERNAL_KEY_PREFIX","toArray","arr","undefined","Array","isArray","record","path","pathList","current","i","length","prop","columns","columnKeys","keys","forEach","column","_ref","key","dataIndex","mergedKey","join","concat","push","merged","fillProps","obj","clone","default","_len","arguments","objects","_key","val"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPathValue = getPathValue;\nexports.getColumnsKey = getColumnsKey;\nexports.mergeObject = mergeObject;\nexports.validateValue = validateValue;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar INTERNAL_KEY_PREFIX = 'RC_TABLE_KEY';\n\nfunction toArray(arr) {\n  if (arr === undefined || arr === null) {\n    return [];\n  }\n\n  return Array.isArray(arr) ? arr : [arr];\n}\n\nfunction getPathValue(record, path) {\n  // Skip if path is empty\n  if (!path && typeof path !== 'number') {\n    return record;\n  }\n\n  var pathList = toArray(path);\n  var current = record;\n\n  for (var i = 0; i < pathList.length; i += 1) {\n    if (!current) {\n      return null;\n    }\n\n    var prop = pathList[i];\n    current = current[prop];\n  }\n\n  return current;\n}\n\nfunction getColumnsKey(columns) {\n  var columnKeys = [];\n  var keys = {};\n  columns.forEach(function (column) {\n    var _ref = column || {},\n        key = _ref.key,\n        dataIndex = _ref.dataIndex;\n\n    var mergedKey = key || toArray(dataIndex).join('-') || INTERNAL_KEY_PREFIX;\n\n    while (keys[mergedKey]) {\n      mergedKey = \"\".concat(mergedKey, \"_next\");\n    }\n\n    keys[mergedKey] = true;\n    columnKeys.push(mergedKey);\n  });\n  return columnKeys;\n}\n\nfunction mergeObject() {\n  var merged = {};\n  /* eslint-disable no-param-reassign */\n\n  function fillProps(obj, clone) {\n    if (clone) {\n      Object.keys(clone).forEach(function (key) {\n        var value = clone[key];\n\n        if (value && (0, _typeof2.default)(value) === 'object') {\n          obj[key] = obj[key] || {};\n          fillProps(obj[key], value);\n        } else {\n          obj[key] = value;\n        }\n      });\n    }\n  }\n  /* eslint-enable */\n\n\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  objects.forEach(function (clone) {\n    fillProps(merged, clone);\n  });\n  return merged;\n}\n\nfunction validateValue(val) {\n  return val !== null && val !== undefined;\n}"]},"metadata":{},"sourceType":"script"}