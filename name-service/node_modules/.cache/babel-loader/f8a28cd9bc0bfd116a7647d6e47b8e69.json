{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n */\n\n\nimport * as React from 'react';\nimport { useState, useRef, useEffect, useMemo } from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Selector from './Selector';\nimport SelectTrigger from './SelectTrigger';\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport useDelayReset from './hooks/useDelayReset';\nimport useLayoutEffect from './hooks/useLayoutEffect';\nimport { getSeparatedContent } from './utils/valueUtil';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useCacheDisplayValue from './hooks/useCacheDisplayValue';\nimport useCacheOptions from './hooks/useCacheOptions';\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown'];\n/**\n * This function is in internal usage.\n * Do not use it in your prod env since we may refactor this.\n */\n\nexport default function generateSelector(config) {\n  var defaultPrefixCls = config.prefixCls,\n      OptionList = config.components.optionList,\n      convertChildrenToData = config.convertChildrenToData,\n      flattenOptions = config.flattenOptions,\n      getLabeledValue = config.getLabeledValue,\n      filterOptions = config.filterOptions,\n      isValueDisabled = config.isValueDisabled,\n      findValueOption = config.findValueOption,\n      warningProps = config.warningProps,\n      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\n      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\n\n  function Select(props, ref) {\n    var _classNames2;\n\n    var _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\n        className = props.className,\n        id = props.id,\n        open = props.open,\n        defaultOpen = props.defaultOpen,\n        options = props.options,\n        children = props.children,\n        mode = props.mode,\n        value = props.value,\n        defaultValue = props.defaultValue,\n        labelInValue = props.labelInValue,\n        showSearch = props.showSearch,\n        inputValue = props.inputValue,\n        searchValue = props.searchValue,\n        filterOption = props.filterOption,\n        _props$optionFilterPr = props.optionFilterProp,\n        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\n        _props$autoClearSearc = props.autoClearSearchValue,\n        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n        onSearch = props.onSearch,\n        allowClear = props.allowClear,\n        clearIcon = props.clearIcon,\n        showArrow = props.showArrow,\n        inputIcon = props.inputIcon,\n        menuItemSelectedIcon = props.menuItemSelectedIcon,\n        disabled = props.disabled,\n        loading = props.loading,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        _props$notFoundConten = props.notFoundContent,\n        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n        optionLabelProp = props.optionLabelProp,\n        backfill = props.backfill,\n        getInputElement = props.getInputElement,\n        getPopupContainer = props.getPopupContainer,\n        _props$listHeight = props.listHeight,\n        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n        _props$listItemHeight = props.listItemHeight,\n        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n        animation = props.animation,\n        transitionName = props.transitionName,\n        virtual = props.virtual,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n        dropdownRender = props.dropdownRender,\n        dropdownAlign = props.dropdownAlign,\n        _props$showAction = props.showAction,\n        showAction = _props$showAction === void 0 ? [] : _props$showAction,\n        direction = props.direction,\n        tokenSeparators = props.tokenSeparators,\n        tagRender = props.tagRender,\n        onPopupScroll = props.onPopupScroll,\n        onDropdownVisibleChange = props.onDropdownVisibleChange,\n        onFocus = props.onFocus,\n        onBlur = props.onBlur,\n        onKeyUp = props.onKeyUp,\n        onKeyDown = props.onKeyDown,\n        onMouseDown = props.onMouseDown,\n        onChange = props.onChange,\n        onSelect = props.onSelect,\n        onDeselect = props.onDeselect,\n        _props$internalProps = props.internalProps,\n        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\n        restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"internalProps\"]);\n\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\n      delete domProps[prop];\n    });\n    var containerRef = useRef(null);\n    var triggerRef = useRef(null);\n    var selectorRef = useRef(null);\n    var listRef = useRef(null);\n    var tokenWithEnter = useMemo(function () {\n      return (tokenSeparators || []).some(function (tokenSeparator) {\n        return ['\\n', '\\r\\n'].includes(tokenSeparator);\n      });\n    }, [tokenSeparators]);\n    /** Used for component focused management */\n\n    var _useDelayReset = useDelayReset(),\n        _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n        mockFocused = _useDelayReset2[0],\n        setMockFocused = _useDelayReset2[1],\n        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\n\n\n    var _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        innerId = _useState2[0],\n        setInnerId = _useState2[1];\n\n    useEffect(function () {\n      setInnerId(\"rc_select_\".concat(getUUID()));\n    }, []);\n    var mergedId = id || innerId; // optionLabelProp\n\n    var mergedOptionLabelProp = optionLabelProp;\n\n    if (mergedOptionLabelProp === undefined) {\n      mergedOptionLabelProp = options ? 'label' : 'children';\n    } // labelInValue\n\n\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\n    var isMultiple = mode === 'tags' || mode === 'multiple';\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ============================== Ref ===============================\n\n    var selectorDomRef = useRef(null);\n    React.useImperativeHandle(ref, function () {\n      return {\n        focus: selectorRef.current.focus,\n        blur: selectorRef.current.blur\n      };\n    }); // ============================= Value ==============================\n\n    var _useMergedState = useMergedState(defaultValue, {\n      value: value\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        mergedValue = _useMergedState2[0],\n        setMergedValue = _useMergedState2[1];\n    /** Unique raw values */\n\n\n    var mergedRawValue = useMemo(function () {\n      return toInnerValue(mergedValue, {\n        labelInValue: mergedLabelInValue,\n        combobox: mode === 'combobox'\n      });\n    }, [mergedValue, mergedLabelInValue]);\n    /** We cache a set of raw values to speed up check */\n\n    var rawValues = useMemo(function () {\n      return new Set(mergedRawValue);\n    }, [mergedRawValue]); // ============================= Option =============================\n    // Set by option list active, it will merge into search input when mode is `combobox`\n\n    var _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeValue = _useState4[0],\n        setActiveValue = _useState4[1];\n\n    var _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        innerSearchValue = _useState6[0],\n        setInnerSearchValue = _useState6[1];\n\n    var mergedSearchValue = innerSearchValue;\n\n    if (mode === 'combobox' && mergedValue !== undefined) {\n      mergedSearchValue = mergedValue;\n    } else if (searchValue !== undefined) {\n      mergedSearchValue = searchValue;\n    } else if (inputValue) {\n      mergedSearchValue = inputValue;\n    }\n\n    var mergedOptions = useMemo(function () {\n      var newOptions = options;\n\n      if (newOptions === undefined) {\n        newOptions = convertChildrenToData(children);\n      }\n      /**\n       * `tags` should fill un-list item.\n       * This is not cool here since TreeSelect do not need this\n       */\n\n\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\n        newOptions = fillOptionsWithMissingValue(newOptions, mergedValue, mergedOptionLabelProp, labelInValue);\n      }\n\n      return newOptions || [];\n    }, [options, children, mode, mergedValue]);\n    var mergedFlattenOptions = useMemo(function () {\n      return flattenOptions(mergedOptions, props);\n    }, [mergedOptions]);\n    var getValueOption = useCacheOptions(mergedRawValue, mergedFlattenOptions); // Display options for OptionList\n\n    var displayOptions = useMemo(function () {\n      if (!mergedSearchValue || !mergedShowSearch) {\n        return _toConsumableArray(mergedOptions);\n      }\n\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\n        optionFilterProp: optionFilterProp,\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\n          return true;\n        } : filterOption\n      });\n\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\n        return opt.value !== mergedSearchValue;\n      })) {\n        filteredOptions.unshift({\n          value: mergedSearchValue,\n          label: mergedSearchValue,\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\n        });\n      }\n\n      return filteredOptions;\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch]);\n    var displayFlattenOptions = useMemo(function () {\n      return flattenOptions(displayOptions, props);\n    }, [displayOptions]);\n    useEffect(function () {\n      if (listRef.current && listRef.current.scrollTo) {\n        listRef.current.scrollTo(0);\n      }\n    }, [mergedSearchValue]); // ============================ Selector ============================\n\n    var displayValues = useMemo(function () {\n      var tmpValues = mergedRawValue.map(function (val) {\n        var valueOptions = getValueOption([val]);\n        var displayValue = getLabeledValue(val, {\n          options: valueOptions,\n          prevValue: mergedValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        });\n        return _objectSpread(_objectSpread({}, displayValue), {}, {\n          disabled: isValueDisabled(val, valueOptions)\n        });\n      });\n\n      if (!mode && tmpValues.length === 1 && tmpValues[0].value === null && tmpValues[0].label === null) {\n        return [];\n      }\n\n      return tmpValues;\n    }, [mergedValue, mergedOptions, mode]); // Polyfill with cache label\n\n    displayValues = useCacheDisplayValue(displayValues);\n\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\n      var newValueOption = getValueOption([newValue]);\n      var outOption = findValueOption([newValue], newValueOption)[0];\n\n      if (!internalProps.skipTriggerSelect) {\n        // Skip trigger `onSelect` or `onDeselect` if configured\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\n          options: newValueOption,\n          prevValue: mergedValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        }) : newValue;\n\n        if (isSelect && onSelect) {\n          onSelect(selectValue, outOption);\n        } else if (!isSelect && onDeselect) {\n          onDeselect(selectValue, outOption);\n        }\n      } // Trigger internal event\n\n\n      if (useInternalProps) {\n        if (isSelect && internalProps.onRawSelect) {\n          internalProps.onRawSelect(newValue, outOption, source);\n        } else if (!isSelect && internalProps.onRawDeselect) {\n          internalProps.onRawDeselect(newValue, outOption, source);\n        }\n      }\n    }; // We need cache options here in case user update the option list\n\n\n    var _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        prevValueOptions = _useState8[0],\n        setPrevValueOptions = _useState8[1];\n\n    var triggerChange = function triggerChange(newRawValues) {\n      if (useInternalProps && internalProps.skipTriggerChange) {\n        return;\n      }\n\n      var newRawValuesOptions = getValueOption(newRawValues);\n      var outValues = toOuterValues(Array.from(newRawValues), {\n        labelInValue: mergedLabelInValue,\n        options: newRawValuesOptions,\n        getLabeledValue: getLabeledValue,\n        prevValue: mergedValue,\n        optionLabelProp: mergedOptionLabelProp\n      });\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\n\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\n        var outOptions = findValueOption(newRawValues, newRawValuesOptions, {\n          prevValueOptions: prevValueOptions\n        }); // We will cache option in case it removed by ajax\n\n        setPrevValueOptions(outOptions.map(function (option, index) {\n          var clone = _objectSpread({}, option);\n\n          Object.defineProperty(clone, '_INTERNAL_OPTION_VALUE_', {\n            get: function get() {\n              return newRawValues[index];\n            }\n          });\n          return clone;\n        }));\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\n      }\n\n      setMergedValue(outValue);\n    };\n\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\n      var selected = _ref.selected,\n          source = _ref.source;\n\n      if (disabled) {\n        return;\n      }\n\n      var newRawValue;\n\n      if (isMultiple) {\n        newRawValue = new Set(mergedRawValue);\n\n        if (selected) {\n          newRawValue.add(newValue);\n        } else {\n          newRawValue.delete(newValue);\n        }\n      } else {\n        newRawValue = new Set();\n        newRawValue.add(newValue);\n      } // Multiple always trigger change and single should change if value changed\n\n\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\n        triggerChange(Array.from(newRawValue));\n      } // Trigger `onSelect`. Single mode always trigger select\n\n\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\n\n      if (mode === 'combobox') {\n        setInnerSearchValue(String(newValue));\n        setActiveValue('');\n      } else if (!isMultiple || autoClearSearchValue) {\n        setInnerSearchValue('');\n        setActiveValue('');\n      }\n    };\n\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'option'\n      }));\n    };\n\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'selection'\n      }));\n    }; // ============================= Input ==============================\n    // Only works in `combobox`\n\n\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\n\n    var _useMergedState3 = useMergedState(undefined, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n        _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n        innerOpen = _useMergedState4[0],\n        setInnerOpen = _useMergedState4[1];\n\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n    var emptyListContent = !notFoundContent && !displayOptions.length;\n\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n      mergedOpen = false;\n    }\n\n    var triggerOpen = emptyListContent ? false : mergedOpen;\n\n    var onToggleOpen = function onToggleOpen(newOpen) {\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n      if (innerOpen !== nextOpen && !disabled) {\n        setInnerOpen(nextOpen);\n\n        if (onDropdownVisibleChange) {\n          onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\n\n    var triggerSearch = function triggerSearch(searchText, fromTyping, isCompositing) {\n      var ret = true;\n      var newSearchText = searchText;\n      setActiveValue(null); // Check if match the `tokenSeparators`\n\n      var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n      var patchRawValues = patchLabels;\n\n      if (mode === 'combobox') {\n        // Only typing will trigger onChange\n        if (fromTyping) {\n          triggerChange([newSearchText]);\n        }\n      } else if (patchLabels) {\n        newSearchText = '';\n\n        if (mode !== 'tags') {\n          patchRawValues = patchLabels.map(function (label) {\n            var item = mergedFlattenOptions.find(function (_ref2) {\n              var data = _ref2.data;\n              return data[mergedOptionLabelProp] === label;\n            });\n            return item ? item.data.value : null;\n          }).filter(function (val) {\n            return val !== null;\n          });\n        }\n\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\n        triggerChange(newRawValues);\n        newRawValues.forEach(function (newRawValue) {\n          triggerSelect(newRawValue, true, 'input');\n        }); // Should close when paste finish\n\n        onToggleOpen(false); // Tell Selector that break next actions\n\n        ret = false;\n      }\n\n      setInnerSearchValue(newSearchText);\n\n      if (onSearch && mergedSearchValue !== newSearchText) {\n        onSearch(newSearchText);\n      }\n\n      return ret;\n    }; // Only triggered when menu is closed & mode is tags\n    // If menu is open, OptionList will take charge\n    // If mode isn't tags, press enter is not meaningful when you can't see any option\n\n\n    var onSearchSubmit = function onSearchSubmit(searchText) {\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [searchText])));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true, 'input');\n      });\n      setInnerSearchValue('');\n    }; // Close dropdown when disabled change\n\n\n    useEffect(function () {\n      if (innerOpen && !!disabled) {\n        setInnerOpen(false);\n      }\n    }, [disabled]); // Close will clean up single mode search text\n\n    useEffect(function () {\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\n        triggerSearch('', false, false);\n      }\n    }, [mergedOpen]); // ============================ Keyboard ============================\n\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n\n    var _useLock = useLock(),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getClearLock = _useLock2[0],\n        setClearLock = _useLock2[1]; // KeyDown\n\n\n    var onInternalKeyDown = function onInternalKeyDown(event) {\n      var clearLock = getClearLock();\n      var which = event.which; // We only manage open state here, close logic should handle by list component\n\n      if (!mergedOpen && which === KeyCode.ENTER) {\n        onToggleOpen(true);\n      }\n\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\n\n        if (removeInfo.removedValue !== null) {\n          triggerChange(removeInfo.values);\n          triggerSelect(removeInfo.removedValue, false, 'input');\n        }\n      }\n\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current;\n\n        (_listRef$current = listRef.current).onKeyDown.apply(_listRef$current, [event].concat(rest));\n      }\n\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    }; // KeyUp\n\n\n    var onInternalKeyUp = function onInternalKeyUp(event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current2;\n\n        (_listRef$current2 = listRef.current).onKeyUp.apply(_listRef$current2, [event].concat(rest));\n      }\n\n      if (onKeyUp) {\n        onKeyUp.apply(void 0, [event].concat(rest));\n      }\n    }; // ========================== Focus / Blur ==========================\n\n    /** Record real focus status */\n\n\n    var focusRef = useRef(false);\n\n    var onContainerFocus = function onContainerFocus() {\n      setMockFocused(true);\n\n      if (!disabled) {\n        if (onFocus && !focusRef.current) {\n          onFocus.apply(void 0, arguments);\n        } // `showAction` should handle `focus` if set\n\n\n        if (showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n\n      focusRef.current = true;\n    };\n\n    var onContainerBlur = function onContainerBlur() {\n      setMockFocused(false, function () {\n        focusRef.current = false;\n        onToggleOpen(false);\n      });\n\n      if (disabled) {\n        return;\n      }\n\n      if (mergedSearchValue) {\n        // `tags` mode should move `searchValue` into values\n        if (mode === 'tags') {\n          triggerSearch('', false, false);\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\n        } else if (mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          setInnerSearchValue('');\n        }\n      }\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    var activeTimeoutIds = [];\n    useEffect(function () {\n      return function () {\n        activeTimeoutIds.forEach(function (timeoutId) {\n          return clearTimeout(timeoutId);\n        });\n        activeTimeoutIds.splice(0, activeTimeoutIds.length);\n      };\n    }, []);\n\n    var onInternalMouseDown = function onInternalMouseDown(event) {\n      var target = event.target;\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n      if (popupElement && popupElement.contains(target)) {\n        var timeoutId = setTimeout(function () {\n          var index = activeTimeoutIds.indexOf(timeoutId);\n\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n\n          cancelSetMockFocused();\n\n          if (!popupElement.contains(document.activeElement)) {\n            selectorRef.current.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n\n      if (onMouseDown) {\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          restArgs[_key3 - 1] = arguments[_key3];\n        }\n\n        onMouseDown.apply(void 0, [event].concat(restArgs));\n      }\n    }; // ========================= Accessibility ==========================\n\n\n    var _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        accessibilityIndex = _useState10[0],\n        setAccessibilityIndex = _useState10[1];\n\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n\n    var onActiveValue = function onActiveValue(active, index) {\n      setAccessibilityIndex(index);\n\n      if (backfill && mode === 'combobox' && active !== null) {\n        setActiveValue(String(active));\n      }\n    }; // ============================= Popup ==============================\n\n\n    var _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        containerWidth = _useState12[0],\n        setContainerWidth = _useState12[1];\n\n    var _useState13 = useState({}),\n        _useState14 = _slicedToArray(_useState13, 2),\n        forceUpdate = _useState14[1]; // We need force update here since popup dom is render async\n\n\n    function onPopupMouseEnter() {\n      forceUpdate({});\n    }\n\n    useLayoutEffect(function () {\n      if (triggerOpen) {\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\n\n        if (containerWidth !== newWidth) {\n          setContainerWidth(newWidth);\n        }\n      }\n    }, [triggerOpen]);\n    var popupNode = React.createElement(OptionList, {\n      ref: listRef,\n      prefixCls: prefixCls,\n      id: mergedId,\n      open: mergedOpen,\n      childrenAsData: !options,\n      options: displayOptions,\n      flattenOptions: displayFlattenOptions,\n      multiple: isMultiple,\n      values: rawValues,\n      height: listHeight,\n      itemHeight: listItemHeight,\n      onSelect: onInternalOptionSelect,\n      onToggleOpen: onToggleOpen,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      notFoundContent: notFoundContent,\n      onScroll: onPopupScroll,\n      searchValue: mergedSearchValue,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n      onMouseEnter: onPopupMouseEnter\n    }); // ============================= Clear ==============================\n\n    var clearNode;\n\n    var onClearMouseDown = function onClearMouseDown() {\n      // Trigger internal `onClear` event\n      if (useInternalProps && internalProps.onClear) {\n        internalProps.onClear();\n      }\n\n      triggerChange([]);\n      triggerSearch('', false, false);\n    };\n\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\n      clearNode = React.createElement(TransBtn, {\n        className: \"\".concat(prefixCls, \"-clear\"),\n        onMouseDown: onClearMouseDown,\n        customizeIcon: clearIcon\n      }, \"\\xD7\");\n    } // ============================= Arrow ==============================\n\n\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\n    var arrowNode;\n\n    if (mergedShowArrow) {\n      arrowNode = React.createElement(TransBtn, {\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n        customizeIcon: inputIcon,\n        customizeIconProps: {\n          loading: loading,\n          searchValue: mergedSearchValue,\n          open: mergedOpen,\n          focused: mockFocused,\n          showSearch: mergedShowSearch\n        }\n      });\n    } // ============================ Warning =============================\n\n\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\n      warningProps(props);\n    } // ============================= Render =============================\n\n\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n    return React.createElement(\"div\", Object.assign({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(mergedRawValue.join(', '))), React.createElement(SelectTrigger, {\n      ref: triggerRef,\n      disabled: disabled,\n      prefixCls: prefixCls,\n      visible: triggerOpen,\n      popupElement: popupNode,\n      containerWidth: containerWidth,\n      animation: animation,\n      transitionName: transitionName,\n      dropdownStyle: dropdownStyle,\n      dropdownClassName: dropdownClassName,\n      direction: direction,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      dropdownRender: dropdownRender,\n      dropdownAlign: dropdownAlign,\n      getPopupContainer: getPopupContainer,\n      empty: !mergedOptions.length,\n      getTriggerDOMNode: function getTriggerDOMNode() {\n        return selectorDomRef.current;\n      }\n    }, React.createElement(Selector, Object.assign({}, props, {\n      domRef: selectorDomRef,\n      prefixCls: prefixCls,\n      inputElement: customizeInputElement,\n      ref: selectorRef,\n      id: mergedId,\n      showSearch: mergedShowSearch,\n      mode: mode,\n      accessibilityIndex: accessibilityIndex,\n      multiple: isMultiple,\n      tagRender: tagRender,\n      values: displayValues,\n      open: mergedOpen,\n      onToggleOpen: onToggleOpen,\n      searchValue: mergedSearchValue,\n      activeValue: activeValue,\n      onSearch: triggerSearch,\n      onSearchSubmit: onSearchSubmit,\n      onSelect: onInternalSelectionSelect,\n      tokenWithEnter: tokenWithEnter\n    }))), arrowNode, clearNode);\n  }\n\n  var RefSelect = React.forwardRef(Select);\n  return RefSelect;\n}","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/rc-select/es/generate.js"],"names":["_defineProperty","_toConsumableArray","_slicedToArray","_objectWithoutProperties","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","useState","useRef","useEffect","useMemo","KeyCode","classNames","useMergedState","Selector","SelectTrigger","INTERNAL_PROPS_MARK","toInnerValue","toOuterValues","removeLastEnabledValue","getUUID","TransBtn","useLock","useDelayReset","useLayoutEffect","getSeparatedContent","useSelectTriggerControl","useCacheDisplayValue","useCacheOptions","DEFAULT_OMIT_PROPS","generateSelector","config","defaultPrefixCls","prefixCls","OptionList","components","optionList","convertChildrenToData","flattenOptions","getLabeledValue","filterOptions","isValueDisabled","findValueOption","warningProps","fillOptionsWithMissingValue","omitDOMProps","Select","props","ref","_classNames2","_props$prefixCls","className","id","open","defaultOpen","options","children","mode","value","defaultValue","labelInValue","showSearch","inputValue","searchValue","filterOption","_props$optionFilterPr","optionFilterProp","_props$autoClearSearc","autoClearSearchValue","onSearch","allowClear","clearIcon","showArrow","inputIcon","menuItemSelectedIcon","disabled","loading","defaultActiveFirstOption","_props$notFoundConten","notFoundContent","optionLabelProp","backfill","getInputElement","getPopupContainer","_props$listHeight","listHeight","_props$listItemHeight","listItemHeight","animation","transitionName","virtual","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","_props$showAction","showAction","direction","tokenSeparators","tagRender","onPopupScroll","onDropdownVisibleChange","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","onChange","onSelect","onDeselect","_props$internalProps","internalProps","restProps","useInternalProps","mark","domProps","prop","containerRef","triggerRef","selectorRef","listRef","tokenWithEnter","some","tokenSeparator","includes","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","_useState","_useState2","innerId","setInnerId","concat","mergedId","mergedOptionLabelProp","undefined","mergedLabelInValue","isMultiple","mergedShowSearch","selectorDomRef","useImperativeHandle","focus","current","blur","_useMergedState","_useMergedState2","mergedValue","setMergedValue","mergedRawValue","combobox","rawValues","Set","_useState3","_useState4","activeValue","setActiveValue","_useState5","_useState6","innerSearchValue","setInnerSearchValue","mergedSearchValue","mergedOptions","newOptions","mergedFlattenOptions","getValueOption","displayOptions","filteredOptions","every","opt","unshift","label","displayFlattenOptions","scrollTo","displayValues","tmpValues","map","val","valueOptions","displayValue","prevValue","triggerSelect","newValue","isSelect","newValueOption","outOption","skipTriggerSelect","selectValue","onRawSelect","onRawDeselect","_useState7","_useState8","prevValueOptions","setPrevValueOptions","triggerChange","newRawValues","skipTriggerChange","newRawValuesOptions","outValues","Array","from","outValue","outOptions","option","index","clone","get","onInternalSelect","_ref","selected","newRawValue","add","delete","String","onInternalOptionSelect","info","onInternalSelectionSelect","customizeInputElement","_useMergedState3","_useMergedState4","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","newOpen","nextOpen","getPopupElement","triggerSearch","searchText","fromTyping","isCompositing","ret","newSearchText","patchLabels","patchRawValues","item","find","_ref2","data","onSearchSubmit","_useLock","_useLock2","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","BACKSPACE","removeInfo","removedValue","values","_len","rest","_key","_listRef$current","onInternalKeyUp","_len2","_key2","_listRef$current2","focusRef","onContainerFocus","onContainerBlur","activeTimeoutIds","timeoutId","clearTimeout","splice","onInternalMouseDown","popupElement","contains","setTimeout","indexOf","document","activeElement","_len3","restArgs","_key3","_useState9","_useState10","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_useState11","_useState12","containerWidth","setContainerWidth","_useState13","_useState14","forceUpdate","onPopupMouseEnter","newWidth","Math","ceil","offsetWidth","popupNode","createElement","childrenAsData","multiple","height","itemHeight","onScroll","onMouseEnter","clearNode","onClearMouseDown","onClear","customizeIcon","mergedShowArrow","arrowNode","customizeIconProps","focused","process","env","NODE_ENV","mergedClassName","assign","style","width","display","overflow","opacity","join","visible","empty","getTriggerDOMNode","domRef","inputElement","RefSelect","forwardRef"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAExB,QAAAA,eAAe,CAACkB,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;AAAEjB,MAAAA,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;AAEthB;;;;;;;;;;AAQA,OAAO,KAAKU,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,EAAsCC,OAAtC,QAAqD,OAArD;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,sBAAtC,EAA8DC,OAA9D,QAA6E,oBAA7E;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,OAAOC,uBAAP,MAAoC,iCAApC;AACA,OAAOC,oBAAP,MAAiC,8BAAjC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,IAAIC,kBAAkB,GAAG,CAAC,YAAD,EAAe,aAAf,EAA8B,WAA9B,EAA2C,aAA3C,EAA0D,kBAA1D,EAA8E,mBAA9E,EAAmG,sBAAnG,EAA2H,gBAA3H,CAAzB;AACA;;;;;AAKA,eAAe,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AAC/C,MAAIC,gBAAgB,GAAGD,MAAM,CAACE,SAA9B;AAAA,MACIC,UAAU,GAAGH,MAAM,CAACI,UAAP,CAAkBC,UADnC;AAAA,MAEIC,qBAAqB,GAAGN,MAAM,CAACM,qBAFnC;AAAA,MAGIC,cAAc,GAAGP,MAAM,CAACO,cAH5B;AAAA,MAIIC,eAAe,GAAGR,MAAM,CAACQ,eAJ7B;AAAA,MAKIC,aAAa,GAAGT,MAAM,CAACS,aAL3B;AAAA,MAMIC,eAAe,GAAGV,MAAM,CAACU,eAN7B;AAAA,MAOIC,eAAe,GAAGX,MAAM,CAACW,eAP7B;AAAA,MAQIC,YAAY,GAAGZ,MAAM,CAACY,YAR1B;AAAA,MASIC,2BAA2B,GAAGb,MAAM,CAACa,2BATzC;AAAA,MAUIC,YAAY,GAAGd,MAAM,CAACc,YAV1B,CAD+C,CAWP;;AAExC,WAASC,MAAT,CAAgBC,KAAhB,EAAuBC,GAAvB,EAA4B;AAC1B,QAAIC,YAAJ;;AAEA,QAAIC,gBAAgB,GAAGH,KAAK,CAACd,SAA7B;AAAA,QACIA,SAAS,GAAGiB,gBAAgB,KAAK,KAAK,CAA1B,GAA8BlB,gBAA9B,GAAiDkB,gBADjE;AAAA,QAEIC,SAAS,GAAGJ,KAAK,CAACI,SAFtB;AAAA,QAGIC,EAAE,GAAGL,KAAK,CAACK,EAHf;AAAA,QAIIC,IAAI,GAAGN,KAAK,CAACM,IAJjB;AAAA,QAKIC,WAAW,GAAGP,KAAK,CAACO,WALxB;AAAA,QAMIC,OAAO,GAAGR,KAAK,CAACQ,OANpB;AAAA,QAOIC,QAAQ,GAAGT,KAAK,CAACS,QAPrB;AAAA,QAQIC,IAAI,GAAGV,KAAK,CAACU,IARjB;AAAA,QASIC,KAAK,GAAGX,KAAK,CAACW,KATlB;AAAA,QAUIC,YAAY,GAAGZ,KAAK,CAACY,YAVzB;AAAA,QAWIC,YAAY,GAAGb,KAAK,CAACa,YAXzB;AAAA,QAYIC,UAAU,GAAGd,KAAK,CAACc,UAZvB;AAAA,QAaIC,UAAU,GAAGf,KAAK,CAACe,UAbvB;AAAA,QAcIC,WAAW,GAAGhB,KAAK,CAACgB,WAdxB;AAAA,QAeIC,YAAY,GAAGjB,KAAK,CAACiB,YAfzB;AAAA,QAgBIC,qBAAqB,GAAGlB,KAAK,CAACmB,gBAhBlC;AAAA,QAiBIA,gBAAgB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,OAAnC,GAA6CA,qBAjBpE;AAAA,QAkBIE,qBAAqB,GAAGpB,KAAK,CAACqB,oBAlBlC;AAAA,QAmBIA,oBAAoB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,IAAnC,GAA0CA,qBAnBrE;AAAA,QAoBIE,QAAQ,GAAGtB,KAAK,CAACsB,QApBrB;AAAA,QAqBIC,UAAU,GAAGvB,KAAK,CAACuB,UArBvB;AAAA,QAsBIC,SAAS,GAAGxB,KAAK,CAACwB,SAtBtB;AAAA,QAuBIC,SAAS,GAAGzB,KAAK,CAACyB,SAvBtB;AAAA,QAwBIC,SAAS,GAAG1B,KAAK,CAAC0B,SAxBtB;AAAA,QAyBIC,oBAAoB,GAAG3B,KAAK,CAAC2B,oBAzBjC;AAAA,QA0BIC,QAAQ,GAAG5B,KAAK,CAAC4B,QA1BrB;AAAA,QA2BIC,OAAO,GAAG7B,KAAK,CAAC6B,OA3BpB;AAAA,QA4BIC,wBAAwB,GAAG9B,KAAK,CAAC8B,wBA5BrC;AAAA,QA6BIC,qBAAqB,GAAG/B,KAAK,CAACgC,eA7BlC;AAAA,QA8BIA,eAAe,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,WAAnC,GAAiDA,qBA9BvE;AAAA,QA+BIE,eAAe,GAAGjC,KAAK,CAACiC,eA/B5B;AAAA,QAgCIC,QAAQ,GAAGlC,KAAK,CAACkC,QAhCrB;AAAA,QAiCIC,eAAe,GAAGnC,KAAK,CAACmC,eAjC5B;AAAA,QAkCIC,iBAAiB,GAAGpC,KAAK,CAACoC,iBAlC9B;AAAA,QAmCIC,iBAAiB,GAAGrC,KAAK,CAACsC,UAnC9B;AAAA,QAoCIA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,GAA/B,GAAqCA,iBApCtD;AAAA,QAqCIE,qBAAqB,GAAGvC,KAAK,CAACwC,cArClC;AAAA,QAsCIA,cAAc,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAtC7D;AAAA,QAuCIE,SAAS,GAAGzC,KAAK,CAACyC,SAvCtB;AAAA,QAwCIC,cAAc,GAAG1C,KAAK,CAAC0C,cAxC3B;AAAA,QAyCIC,OAAO,GAAG3C,KAAK,CAAC2C,OAzCpB;AAAA,QA0CIC,aAAa,GAAG5C,KAAK,CAAC4C,aA1C1B;AAAA,QA2CIC,iBAAiB,GAAG7C,KAAK,CAAC6C,iBA3C9B;AAAA,QA4CIC,wBAAwB,GAAG9C,KAAK,CAAC8C,wBA5CrC;AAAA,QA6CIC,cAAc,GAAG/C,KAAK,CAAC+C,cA7C3B;AAAA,QA8CIC,aAAa,GAAGhD,KAAK,CAACgD,aA9C1B;AAAA,QA+CIC,iBAAiB,GAAGjD,KAAK,CAACkD,UA/C9B;AAAA,QAgDIA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,EAA/B,GAAoCA,iBAhDrD;AAAA,QAiDIE,SAAS,GAAGnD,KAAK,CAACmD,SAjDtB;AAAA,QAkDIC,eAAe,GAAGpD,KAAK,CAACoD,eAlD5B;AAAA,QAmDIC,SAAS,GAAGrD,KAAK,CAACqD,SAnDtB;AAAA,QAoDIC,aAAa,GAAGtD,KAAK,CAACsD,aApD1B;AAAA,QAqDIC,uBAAuB,GAAGvD,KAAK,CAACuD,uBArDpC;AAAA,QAsDIC,OAAO,GAAGxD,KAAK,CAACwD,OAtDpB;AAAA,QAuDIC,MAAM,GAAGzD,KAAK,CAACyD,MAvDnB;AAAA,QAwDIC,OAAO,GAAG1D,KAAK,CAAC0D,OAxDpB;AAAA,QAyDIC,SAAS,GAAG3D,KAAK,CAAC2D,SAzDtB;AAAA,QA0DIC,WAAW,GAAG5D,KAAK,CAAC4D,WA1DxB;AAAA,QA2DIC,QAAQ,GAAG7D,KAAK,CAAC6D,QA3DrB;AAAA,QA4DIC,QAAQ,GAAG9D,KAAK,CAAC8D,QA5DrB;AAAA,QA6DIC,UAAU,GAAG/D,KAAK,CAAC+D,UA7DvB;AAAA,QA8DIC,oBAAoB,GAAGhE,KAAK,CAACiE,aA9DjC;AAAA,QA+DIA,aAAa,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,EAAlC,GAAuCA,oBA/D3D;AAAA,QAgEIE,SAAS,GAAGpI,wBAAwB,CAACkE,KAAD,EAAQ,CAAC,WAAD,EAAc,WAAd,EAA2B,IAA3B,EAAiC,MAAjC,EAAyC,aAAzC,EAAwD,SAAxD,EAAmE,UAAnE,EAA+E,MAA/E,EAAuF,OAAvF,EAAgG,cAAhG,EAAgH,cAAhH,EAAgI,YAAhI,EAA8I,YAA9I,EAA4J,aAA5J,EAA2K,cAA3K,EAA2L,kBAA3L,EAA+M,sBAA/M,EAAuO,UAAvO,EAAmP,YAAnP,EAAiQ,WAAjQ,EAA8Q,WAA9Q,EAA2R,WAA3R,EAAwS,sBAAxS,EAAgU,UAAhU,EAA4U,SAA5U,EAAuV,0BAAvV,EAAmX,iBAAnX,EAAsY,iBAAtY,EAAyZ,UAAzZ,EAAqa,iBAAra,EAAwb,mBAAxb,EAA6c,YAA7c,EAA2d,gBAA3d,EAA6e,WAA7e,EAA0f,gBAA1f,EAA4gB,SAA5gB,EAAuhB,eAAvhB,EAAwiB,mBAAxiB,EAA6jB,0BAA7jB,EAAylB,gBAAzlB,EAA2mB,eAA3mB,EAA4nB,YAA5nB,EAA0oB,WAA1oB,EAAupB,iBAAvpB,EAA0qB,WAA1qB,EAAurB,eAAvrB,EAAwsB,yBAAxsB,EAAmuB,SAAnuB,EAA8uB,QAA9uB,EAAwvB,SAAxvB,EAAmwB,WAAnwB,EAAgxB,aAAhxB,EAA+xB,UAA/xB,EAA2yB,UAA3yB,EAAuzB,YAAvzB,EAAq0B,eAAr0B,CAAR,CAhExC;;AAkEA,QAAImE,gBAAgB,GAAGF,aAAa,CAACG,IAAd,KAAuBnG,mBAA9C;AACA,QAAIoG,QAAQ,GAAGvE,YAAY,GAAGA,YAAY,CAACoE,SAAD,CAAf,GAA6BA,SAAxD;AACApF,IAAAA,kBAAkB,CAAC5B,OAAnB,CAA2B,UAAUoH,IAAV,EAAgB;AACzC,aAAOD,QAAQ,CAACC,IAAD,CAAf;AACD,KAFD;AAGA,QAAIC,YAAY,GAAG9G,MAAM,CAAC,IAAD,CAAzB;AACA,QAAI+G,UAAU,GAAG/G,MAAM,CAAC,IAAD,CAAvB;AACA,QAAIgH,WAAW,GAAGhH,MAAM,CAAC,IAAD,CAAxB;AACA,QAAIiH,OAAO,GAAGjH,MAAM,CAAC,IAAD,CAApB;AACA,QAAIkH,cAAc,GAAGhH,OAAO,CAAC,YAAY;AACvC,aAAO,CAACyF,eAAe,IAAI,EAApB,EAAwBwB,IAAxB,CAA6B,UAAUC,cAAV,EAA0B;AAC5D,eAAO,CAAC,IAAD,EAAO,MAAP,EAAeC,QAAf,CAAwBD,cAAxB,CAAP;AACD,OAFM,CAAP;AAGD,KAJ2B,EAIzB,CAACzB,eAAD,CAJyB,CAA5B;AAKA;;AAEA,QAAI2B,cAAc,GAAGvG,aAAa,EAAlC;AAAA,QACIwG,eAAe,GAAGnJ,cAAc,CAACkJ,cAAD,EAAiB,CAAjB,CADpC;AAAA,QAEIE,WAAW,GAAGD,eAAe,CAAC,CAAD,CAFjC;AAAA,QAGIE,cAAc,GAAGF,eAAe,CAAC,CAAD,CAHpC;AAAA,QAIIG,oBAAoB,GAAGH,eAAe,CAAC,CAAD,CAJ1C,CArF0B,CAyFqB;;;AAG/C,QAAII,SAAS,GAAG5H,QAAQ,EAAxB;AAAA,QACI6H,UAAU,GAAGxJ,cAAc,CAACuJ,SAAD,EAAY,CAAZ,CAD/B;AAAA,QAEIE,OAAO,GAAGD,UAAU,CAAC,CAAD,CAFxB;AAAA,QAGIE,UAAU,GAAGF,UAAU,CAAC,CAAD,CAH3B;;AAKA3H,IAAAA,SAAS,CAAC,YAAY;AACpB6H,MAAAA,UAAU,CAAC,aAAaC,MAAb,CAAoBnH,OAAO,EAA3B,CAAD,CAAV;AACD,KAFQ,EAEN,EAFM,CAAT;AAGA,QAAIoH,QAAQ,GAAGpF,EAAE,IAAIiF,OAArB,CApG0B,CAoGI;;AAE9B,QAAII,qBAAqB,GAAGzD,eAA5B;;AAEA,QAAIyD,qBAAqB,KAAKC,SAA9B,EAAyC;AACvCD,MAAAA,qBAAqB,GAAGlF,OAAO,GAAG,OAAH,GAAa,UAA5C;AACD,KA1GyB,CA0GxB;;;AAGF,QAAIoF,kBAAkB,GAAGlF,IAAI,KAAK,UAAT,GAAsB,KAAtB,GAA8BG,YAAvD;AACA,QAAIgF,UAAU,GAAGnF,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,UAA7C;AACA,QAAIoF,gBAAgB,GAAGhF,UAAU,KAAK6E,SAAf,GAA2B7E,UAA3B,GAAwC+E,UAAU,IAAInF,IAAI,KAAK,UAAtF,CA/G0B,CA+GwE;;AAElG,QAAIqF,cAAc,GAAGtI,MAAM,CAAC,IAAD,CAA3B;AACAF,IAAAA,KAAK,CAACyI,mBAAN,CAA0B/F,GAA1B,EAA+B,YAAY;AACzC,aAAO;AACLgG,QAAAA,KAAK,EAAExB,WAAW,CAACyB,OAAZ,CAAoBD,KADtB;AAELE,QAAAA,IAAI,EAAE1B,WAAW,CAACyB,OAAZ,CAAoBC;AAFrB,OAAP;AAID,KALD,EAlH0B,CAuHtB;;AAEJ,QAAIC,eAAe,GAAGtI,cAAc,CAAC8C,YAAD,EAAe;AACjDD,MAAAA,KAAK,EAAEA;AAD0C,KAAf,CAApC;AAAA,QAGI0F,gBAAgB,GAAGxK,cAAc,CAACuK,eAAD,EAAkB,CAAlB,CAHrC;AAAA,QAIIE,WAAW,GAAGD,gBAAgB,CAAC,CAAD,CAJlC;AAAA,QAKIE,cAAc,GAAGF,gBAAgB,CAAC,CAAD,CALrC;AAMA;;;AAGA,QAAIG,cAAc,GAAG7I,OAAO,CAAC,YAAY;AACvC,aAAOO,YAAY,CAACoI,WAAD,EAAc;AAC/BzF,QAAAA,YAAY,EAAE+E,kBADiB;AAE/Ba,QAAAA,QAAQ,EAAE/F,IAAI,KAAK;AAFY,OAAd,CAAnB;AAID,KAL2B,EAKzB,CAAC4F,WAAD,EAAcV,kBAAd,CALyB,CAA5B;AAMA;;AAEA,QAAIc,SAAS,GAAG/I,OAAO,CAAC,YAAY;AAClC,aAAO,IAAIgJ,GAAJ,CAAQH,cAAR,CAAP;AACD,KAFsB,EAEpB,CAACA,cAAD,CAFoB,CAAvB,CA1I0B,CA4IJ;AACtB;;AAEA,QAAII,UAAU,GAAGpJ,QAAQ,CAAC,IAAD,CAAzB;AAAA,QACIqJ,UAAU,GAAGhL,cAAc,CAAC+K,UAAD,EAAa,CAAb,CAD/B;AAAA,QAEIE,WAAW,GAAGD,UAAU,CAAC,CAAD,CAF5B;AAAA,QAGIE,cAAc,GAAGF,UAAU,CAAC,CAAD,CAH/B;;AAKA,QAAIG,UAAU,GAAGxJ,QAAQ,CAAC,EAAD,CAAzB;AAAA,QACIyJ,UAAU,GAAGpL,cAAc,CAACmL,UAAD,EAAa,CAAb,CAD/B;AAAA,QAEIE,gBAAgB,GAAGD,UAAU,CAAC,CAAD,CAFjC;AAAA,QAGIE,mBAAmB,GAAGF,UAAU,CAAC,CAAD,CAHpC;;AAKA,QAAIG,iBAAiB,GAAGF,gBAAxB;;AAEA,QAAIxG,IAAI,KAAK,UAAT,IAAuB4F,WAAW,KAAKX,SAA3C,EAAsD;AACpDyB,MAAAA,iBAAiB,GAAGd,WAApB;AACD,KAFD,MAEO,IAAItF,WAAW,KAAK2E,SAApB,EAA+B;AACpCyB,MAAAA,iBAAiB,GAAGpG,WAApB;AACD,KAFM,MAEA,IAAID,UAAJ,EAAgB;AACrBqG,MAAAA,iBAAiB,GAAGrG,UAApB;AACD;;AAED,QAAIsG,aAAa,GAAG1J,OAAO,CAAC,YAAY;AACtC,UAAI2J,UAAU,GAAG9G,OAAjB;;AAEA,UAAI8G,UAAU,KAAK3B,SAAnB,EAA8B;AAC5B2B,QAAAA,UAAU,GAAGhI,qBAAqB,CAACmB,QAAD,CAAlC;AACD;AACD;;;;;;AAMA,UAAIC,IAAI,KAAK,MAAT,IAAmBb,2BAAvB,EAAoD;AAClDyH,QAAAA,UAAU,GAAGzH,2BAA2B,CAACyH,UAAD,EAAahB,WAAb,EAA0BZ,qBAA1B,EAAiD7E,YAAjD,CAAxC;AACD;;AAED,aAAOyG,UAAU,IAAI,EAArB;AACD,KAjB0B,EAiBxB,CAAC9G,OAAD,EAAUC,QAAV,EAAoBC,IAApB,EAA0B4F,WAA1B,CAjBwB,CAA3B;AAkBA,QAAIiB,oBAAoB,GAAG5J,OAAO,CAAC,YAAY;AAC7C,aAAO4B,cAAc,CAAC8H,aAAD,EAAgBrH,KAAhB,CAArB;AACD,KAFiC,EAE/B,CAACqH,aAAD,CAF+B,CAAlC;AAGA,QAAIG,cAAc,GAAG3I,eAAe,CAAC2H,cAAD,EAAiBe,oBAAjB,CAApC,CAxL0B,CAwLkD;;AAE5E,QAAIE,cAAc,GAAG9J,OAAO,CAAC,YAAY;AACvC,UAAI,CAACyJ,iBAAD,IAAsB,CAACtB,gBAA3B,EAA6C;AAC3C,eAAOlK,kBAAkB,CAACyL,aAAD,CAAzB;AACD;;AAED,UAAIK,eAAe,GAAGjI,aAAa,CAAC2H,iBAAD,EAAoBC,aAApB,EAAmC;AACpElG,QAAAA,gBAAgB,EAAEA,gBADkD;AAEpEF,QAAAA,YAAY,EAAEP,IAAI,KAAK,UAAT,IAAuBO,YAAY,KAAK0E,SAAxC,GAAoD,YAAY;AAC5E,iBAAO,IAAP;AACD,SAFa,GAEV1E;AAJgE,OAAnC,CAAnC;;AAOA,UAAIP,IAAI,KAAK,MAAT,IAAmBgH,eAAe,CAACC,KAAhB,CAAsB,UAAUC,GAAV,EAAe;AAC1D,eAAOA,GAAG,CAACjH,KAAJ,KAAcyG,iBAArB;AACD,OAFsB,CAAvB,EAEI;AACFM,QAAAA,eAAe,CAACG,OAAhB,CAAwB;AACtBlH,UAAAA,KAAK,EAAEyG,iBADe;AAEtBU,UAAAA,KAAK,EAAEV,iBAFe;AAGtBjK,UAAAA,GAAG,EAAE;AAHiB,SAAxB;AAKD;;AAED,aAAOuK,eAAP;AACD,KAvB2B,EAuBzB,CAACL,aAAD,EAAgBD,iBAAhB,EAAmC1G,IAAnC,EAAyCoF,gBAAzC,CAvByB,CAA5B;AAwBA,QAAIiC,qBAAqB,GAAGpK,OAAO,CAAC,YAAY;AAC9C,aAAO4B,cAAc,CAACkI,cAAD,EAAiBzH,KAAjB,CAArB;AACD,KAFkC,EAEhC,CAACyH,cAAD,CAFgC,CAAnC;AAGA/J,IAAAA,SAAS,CAAC,YAAY;AACpB,UAAIgH,OAAO,CAACwB,OAAR,IAAmBxB,OAAO,CAACwB,OAAR,CAAgB8B,QAAvC,EAAiD;AAC/CtD,QAAAA,OAAO,CAACwB,OAAR,CAAgB8B,QAAhB,CAAyB,CAAzB;AACD;AACF,KAJQ,EAIN,CAACZ,iBAAD,CAJM,CAAT,CArN0B,CAyND;;AAEzB,QAAIa,aAAa,GAAGtK,OAAO,CAAC,YAAY;AACtC,UAAIuK,SAAS,GAAG1B,cAAc,CAAC2B,GAAf,CAAmB,UAAUC,GAAV,EAAe;AAChD,YAAIC,YAAY,GAAGb,cAAc,CAAC,CAACY,GAAD,CAAD,CAAjC;AACA,YAAIE,YAAY,GAAG9I,eAAe,CAAC4I,GAAD,EAAM;AACtC5H,UAAAA,OAAO,EAAE6H,YAD6B;AAEtCE,UAAAA,SAAS,EAAEjC,WAF2B;AAGtCzF,UAAAA,YAAY,EAAE+E,kBAHwB;AAItC3D,UAAAA,eAAe,EAAEyD;AAJqB,SAAN,CAAlC;AAMA,eAAO9I,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK0L,YAAL,CAAd,EAAkC,EAAlC,EAAsC;AACxD1G,UAAAA,QAAQ,EAAElC,eAAe,CAAC0I,GAAD,EAAMC,YAAN;AAD+B,SAAtC,CAApB;AAGD,OAXe,CAAhB;;AAaA,UAAI,CAAC3H,IAAD,IAASwH,SAAS,CAAClL,MAAV,KAAqB,CAA9B,IAAmCkL,SAAS,CAAC,CAAD,CAAT,CAAavH,KAAb,KAAuB,IAA1D,IAAkEuH,SAAS,CAAC,CAAD,CAAT,CAAaJ,KAAb,KAAuB,IAA7F,EAAmG;AACjG,eAAO,EAAP;AACD;;AAED,aAAOI,SAAP;AACD,KAnB0B,EAmBxB,CAAC5B,WAAD,EAAce,aAAd,EAA6B3G,IAA7B,CAnBwB,CAA3B,CA3N0B,CA8Oc;;AAExCuH,IAAAA,aAAa,GAAGrJ,oBAAoB,CAACqJ,aAAD,CAApC;;AAEA,QAAIO,aAAa,GAAG,SAASA,aAAT,CAAuBC,QAAvB,EAAiCC,QAAjC,EAA2CzL,MAA3C,EAAmD;AACrE,UAAI0L,cAAc,GAAGnB,cAAc,CAAC,CAACiB,QAAD,CAAD,CAAnC;AACA,UAAIG,SAAS,GAAGjJ,eAAe,CAAC,CAAC8I,QAAD,CAAD,EAAaE,cAAb,CAAf,CAA4C,CAA5C,CAAhB;;AAEA,UAAI,CAAC1E,aAAa,CAAC4E,iBAAnB,EAAsC;AACpC;AACA,YAAIC,WAAW,GAAGlD,kBAAkB,GAAGpG,eAAe,CAACiJ,QAAD,EAAW;AAC/DjI,UAAAA,OAAO,EAAEmI,cADsD;AAE/DJ,UAAAA,SAAS,EAAEjC,WAFoD;AAG/DzF,UAAAA,YAAY,EAAE+E,kBAHiD;AAI/D3D,UAAAA,eAAe,EAAEyD;AAJ8C,SAAX,CAAlB,GAK/B+C,QALL;;AAOA,YAAIC,QAAQ,IAAI5E,QAAhB,EAA0B;AACxBA,UAAAA,QAAQ,CAACgF,WAAD,EAAcF,SAAd,CAAR;AACD,SAFD,MAEO,IAAI,CAACF,QAAD,IAAa3E,UAAjB,EAA6B;AAClCA,UAAAA,UAAU,CAAC+E,WAAD,EAAcF,SAAd,CAAV;AACD;AACF,OAlBoE,CAkBnE;;;AAGF,UAAIzE,gBAAJ,EAAsB;AACpB,YAAIuE,QAAQ,IAAIzE,aAAa,CAAC8E,WAA9B,EAA2C;AACzC9E,UAAAA,aAAa,CAAC8E,WAAd,CAA0BN,QAA1B,EAAoCG,SAApC,EAA+C3L,MAA/C;AACD,SAFD,MAEO,IAAI,CAACyL,QAAD,IAAazE,aAAa,CAAC+E,aAA/B,EAA8C;AACnD/E,UAAAA,aAAa,CAAC+E,aAAd,CAA4BP,QAA5B,EAAsCG,SAAtC,EAAiD3L,MAAjD;AACD;AACF;AACF,KA5BD,CAlP0B,CA8QvB;;;AAGH,QAAIgM,UAAU,GAAGzL,QAAQ,CAAC,EAAD,CAAzB;AAAA,QACI0L,UAAU,GAAGrN,cAAc,CAACoN,UAAD,EAAa,CAAb,CAD/B;AAAA,QAEIE,gBAAgB,GAAGD,UAAU,CAAC,CAAD,CAFjC;AAAA,QAGIE,mBAAmB,GAAGF,UAAU,CAAC,CAAD,CAHpC;;AAKA,QAAIG,aAAa,GAAG,SAASA,aAAT,CAAuBC,YAAvB,EAAqC;AACvD,UAAInF,gBAAgB,IAAIF,aAAa,CAACsF,iBAAtC,EAAyD;AACvD;AACD;;AAED,UAAIC,mBAAmB,GAAGhC,cAAc,CAAC8B,YAAD,CAAxC;AACA,UAAIG,SAAS,GAAGtL,aAAa,CAACuL,KAAK,CAACC,IAAN,CAAWL,YAAX,CAAD,EAA2B;AACtDzI,QAAAA,YAAY,EAAE+E,kBADwC;AAEtDpF,QAAAA,OAAO,EAAEgJ,mBAF6C;AAGtDhK,QAAAA,eAAe,EAAEA,eAHqC;AAItD+I,QAAAA,SAAS,EAAEjC,WAJ2C;AAKtDrE,QAAAA,eAAe,EAAEyD;AALqC,OAA3B,CAA7B;AAOA,UAAIkE,QAAQ,GAAG/D,UAAU,GAAG4D,SAAH,GAAeA,SAAS,CAAC,CAAD,CAAjD,CAbuD,CAaD;;AAEtD,UAAI5F,QAAQ,KAAK2C,cAAc,CAACxJ,MAAf,KAA0B,CAA1B,IAA+ByM,SAAS,CAACzM,MAAV,KAAqB,CAAzD,CAAZ,EAAyE;AACvE,YAAI6M,UAAU,GAAGlK,eAAe,CAAC2J,YAAD,EAAeE,mBAAf,EAAoC;AAClEL,UAAAA,gBAAgB,EAAEA;AADgD,SAApC,CAAhC,CADuE,CAGnE;;AAEJC,QAAAA,mBAAmB,CAACS,UAAU,CAAC1B,GAAX,CAAe,UAAU2B,MAAV,EAAkBC,KAAlB,EAAyB;AAC1D,cAAIC,KAAK,GAAGpN,aAAa,CAAC,EAAD,EAAKkN,MAAL,CAAzB;;AAEA3N,UAAAA,MAAM,CAACmB,cAAP,CAAsB0M,KAAtB,EAA6B,yBAA7B,EAAwD;AACtDC,YAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,qBAAOX,YAAY,CAACS,KAAD,CAAnB;AACD;AAHqD,WAAxD;AAKA,iBAAOC,KAAP;AACD,SATmB,CAAD,CAAnB;AAUAnG,QAAAA,QAAQ,CAAC+F,QAAD,EAAW/D,UAAU,GAAGgE,UAAH,GAAgBA,UAAU,CAAC,CAAD,CAA/C,CAAR;AACD;;AAEDtD,MAAAA,cAAc,CAACqD,QAAD,CAAd;AACD,KAlCD;;AAoCA,QAAIM,gBAAgB,GAAG,SAASA,gBAAT,CAA0BzB,QAA1B,EAAoC0B,IAApC,EAA0C;AAC/D,UAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,UACInN,MAAM,GAAGkN,IAAI,CAAClN,MADlB;;AAGA,UAAI2E,QAAJ,EAAc;AACZ;AACD;;AAED,UAAIyI,WAAJ;;AAEA,UAAIxE,UAAJ,EAAgB;AACdwE,QAAAA,WAAW,GAAG,IAAI1D,GAAJ,CAAQH,cAAR,CAAd;;AAEA,YAAI4D,QAAJ,EAAc;AACZC,UAAAA,WAAW,CAACC,GAAZ,CAAgB7B,QAAhB;AACD,SAFD,MAEO;AACL4B,UAAAA,WAAW,CAACE,MAAZ,CAAmB9B,QAAnB;AACD;AACF,OARD,MAQO;AACL4B,QAAAA,WAAW,GAAG,IAAI1D,GAAJ,EAAd;AACA0D,QAAAA,WAAW,CAACC,GAAZ,CAAgB7B,QAAhB;AACD,OArB8D,CAqB7D;;;AAGF,UAAI5C,UAAU,IAAI,CAACA,UAAD,IAAe6D,KAAK,CAACC,IAAN,CAAWnD,cAAX,EAA2B,CAA3B,MAAkCiC,QAAnE,EAA6E;AAC3EY,QAAAA,aAAa,CAACK,KAAK,CAACC,IAAN,CAAWU,WAAX,CAAD,CAAb;AACD,OA1B8D,CA0B7D;;;AAGF7B,MAAAA,aAAa,CAACC,QAAD,EAAW,CAAC5C,UAAD,IAAeuE,QAA1B,EAAoCnN,MAApC,CAAb,CA7B+D,CA6BL;;AAE1D,UAAIyD,IAAI,KAAK,UAAb,EAAyB;AACvByG,QAAAA,mBAAmB,CAACqD,MAAM,CAAC/B,QAAD,CAAP,CAAnB;AACA1B,QAAAA,cAAc,CAAC,EAAD,CAAd;AACD,OAHD,MAGO,IAAI,CAAClB,UAAD,IAAexE,oBAAnB,EAAyC;AAC9C8F,QAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAJ,QAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,KAtCD;;AAwCA,QAAI0D,sBAAsB,GAAG,SAASA,sBAAT,CAAgChC,QAAhC,EAA0CiC,IAA1C,EAAgD;AAC3ER,MAAAA,gBAAgB,CAACzB,QAAD,EAAW7L,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK8N,IAAL,CAAd,EAA0B,EAA1B,EAA8B;AACpEzN,QAAAA,MAAM,EAAE;AAD4D,OAA9B,CAAxB,CAAhB;AAGD,KAJD;;AAMA,QAAI0N,yBAAyB,GAAG,SAASA,yBAAT,CAAmClC,QAAnC,EAA6CiC,IAA7C,EAAmD;AACjFR,MAAAA,gBAAgB,CAACzB,QAAD,EAAW7L,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK8N,IAAL,CAAd,EAA0B,EAA1B,EAA8B;AACpEzN,QAAAA,MAAM,EAAE;AAD4D,OAA9B,CAAxB,CAAhB;AAGD,KAJD,CAxW0B,CA4WvB;AACH;;;AAGA,QAAI2N,qBAAqB,GAAGlK,IAAI,KAAK,UAAT,IAAuByB,eAAvB,IAA0CA,eAAe,EAAzD,IAA+D,IAA3F,CAhX0B,CAgXuE;;AAEjG,QAAI0I,gBAAgB,GAAG/M,cAAc,CAAC6H,SAAD,EAAY;AAC/C/E,MAAAA,YAAY,EAAEL,WADiC;AAE/CI,MAAAA,KAAK,EAAEL;AAFwC,KAAZ,CAArC;AAAA,QAIIwK,gBAAgB,GAAGjP,cAAc,CAACgP,gBAAD,EAAmB,CAAnB,CAJrC;AAAA,QAKIE,SAAS,GAAGD,gBAAgB,CAAC,CAAD,CALhC;AAAA,QAMIE,YAAY,GAAGF,gBAAgB,CAAC,CAAD,CANnC;;AAQA,QAAIG,UAAU,GAAGF,SAAjB,CA1X0B,CA0XE;;AAE5B,QAAIG,gBAAgB,GAAG,CAAClJ,eAAD,IAAoB,CAACyF,cAAc,CAACzK,MAA3D;;AAEA,QAAI4E,QAAQ,IAAIsJ,gBAAgB,IAAID,UAApB,IAAkCvK,IAAI,KAAK,UAA3D,EAAuE;AACrEuK,MAAAA,UAAU,GAAG,KAAb;AACD;;AAED,QAAIE,WAAW,GAAGD,gBAAgB,GAAG,KAAH,GAAWD,UAA7C;;AAEA,QAAIG,YAAY,GAAG,SAASA,YAAT,CAAsBC,OAAtB,EAA+B;AAChD,UAAIC,QAAQ,GAAGD,OAAO,KAAK1F,SAAZ,GAAwB0F,OAAxB,GAAkC,CAACJ,UAAlD;;AAEA,UAAIF,SAAS,KAAKO,QAAd,IAA0B,CAAC1J,QAA/B,EAAyC;AACvCoJ,QAAAA,YAAY,CAACM,QAAD,CAAZ;;AAEA,YAAI/H,uBAAJ,EAA6B;AAC3BA,UAAAA,uBAAuB,CAAC+H,QAAD,CAAvB;AACD;AACF;AACF,KAVD;;AAYA3M,IAAAA,uBAAuB,CAAC,CAAC4F,YAAY,CAAC2B,OAAd,EAAuB1B,UAAU,CAAC0B,OAAX,IAAsB1B,UAAU,CAAC0B,OAAX,CAAmBqF,eAAnB,EAA7C,CAAD,EAAqFJ,WAArF,EAAkGC,YAAlG,CAAvB,CAhZ0B,CAgZ8G;;AAExI,QAAII,aAAa,GAAG,SAASA,aAAT,CAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,aAA/C,EAA8D;AAChF,UAAIC,GAAG,GAAG,IAAV;AACA,UAAIC,aAAa,GAAGJ,UAApB;AACA1E,MAAAA,cAAc,CAAC,IAAD,CAAd,CAHgF,CAG1D;;AAEtB,UAAI+E,WAAW,GAAGH,aAAa,GAAG,IAAH,GAAUjN,mBAAmB,CAAC+M,UAAD,EAAarI,eAAb,CAA5D;AACA,UAAI2I,cAAc,GAAGD,WAArB;;AAEA,UAAIpL,IAAI,KAAK,UAAb,EAAyB;AACvB;AACA,YAAIgL,UAAJ,EAAgB;AACdrC,UAAAA,aAAa,CAAC,CAACwC,aAAD,CAAD,CAAb;AACD;AACF,OALD,MAKO,IAAIC,WAAJ,EAAiB;AACtBD,QAAAA,aAAa,GAAG,EAAhB;;AAEA,YAAInL,IAAI,KAAK,MAAb,EAAqB;AACnBqL,UAAAA,cAAc,GAAGD,WAAW,CAAC3D,GAAZ,CAAgB,UAAUL,KAAV,EAAiB;AAChD,gBAAIkE,IAAI,GAAGzE,oBAAoB,CAAC0E,IAArB,CAA0B,UAAUC,KAAV,EAAiB;AACpD,kBAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,qBAAOA,IAAI,CAACzG,qBAAD,CAAJ,KAAgCoC,KAAvC;AACD,aAHU,CAAX;AAIA,mBAAOkE,IAAI,GAAGA,IAAI,CAACG,IAAL,CAAUxL,KAAb,GAAqB,IAAhC;AACD,WANgB,EAMdrE,MANc,CAMP,UAAU8L,GAAV,EAAe;AACvB,mBAAOA,GAAG,KAAK,IAAf;AACD,WARgB,CAAjB;AASD;;AAED,YAAIkB,YAAY,GAAGI,KAAK,CAACC,IAAN,CAAW,IAAIhD,GAAJ,CAAQ,GAAGnB,MAAH,CAAU5J,kBAAkB,CAAC4K,cAAD,CAA5B,EAA8C5K,kBAAkB,CAACmQ,cAAD,CAAhE,CAAR,CAAX,CAAnB;AACA1C,QAAAA,aAAa,CAACC,YAAD,CAAb;AACAA,QAAAA,YAAY,CAACpM,OAAb,CAAqB,UAAUmN,WAAV,EAAuB;AAC1C7B,UAAAA,aAAa,CAAC6B,WAAD,EAAc,IAAd,EAAoB,OAApB,CAAb;AACD,SAFD,EAjBsB,CAmBlB;;AAEJe,QAAAA,YAAY,CAAC,KAAD,CAAZ,CArBsB,CAqBD;;AAErBQ,QAAAA,GAAG,GAAG,KAAN;AACD;;AAEDzE,MAAAA,mBAAmB,CAAC0E,aAAD,CAAnB;;AAEA,UAAIvK,QAAQ,IAAI8F,iBAAiB,KAAKyE,aAAtC,EAAqD;AACnDvK,QAAAA,QAAQ,CAACuK,aAAD,CAAR;AACD;;AAED,aAAOD,GAAP;AACD,KA9CD,CAlZ0B,CAgcvB;AACH;AACA;;;AAGA,QAAIQ,cAAc,GAAG,SAASA,cAAT,CAAwBX,UAAxB,EAAoC;AACvD,UAAInC,YAAY,GAAGI,KAAK,CAACC,IAAN,CAAW,IAAIhD,GAAJ,CAAQ,GAAGnB,MAAH,CAAU5J,kBAAkB,CAAC4K,cAAD,CAA5B,EAA8C,CAACiF,UAAD,CAA9C,CAAR,CAAX,CAAnB;AACApC,MAAAA,aAAa,CAACC,YAAD,CAAb;AACAA,MAAAA,YAAY,CAACpM,OAAb,CAAqB,UAAUmN,WAAV,EAAuB;AAC1C7B,QAAAA,aAAa,CAAC6B,WAAD,EAAc,IAAd,EAAoB,OAApB,CAAb;AACD,OAFD;AAGAlD,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACD,KAPD,CArc0B,CA4cvB;;;AAGHzJ,IAAAA,SAAS,CAAC,YAAY;AACpB,UAAIqN,SAAS,IAAI,CAAC,CAACnJ,QAAnB,EAA6B;AAC3BoJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAJQ,EAIN,CAACpJ,QAAD,CAJM,CAAT,CA/c0B,CAmdV;;AAEhBlE,IAAAA,SAAS,CAAC,YAAY;AACpB,UAAI,CAACuN,UAAD,IAAe,CAACpF,UAAhB,IAA8BnF,IAAI,KAAK,UAA3C,EAAuD;AACrD8K,QAAAA,aAAa,CAAC,EAAD,EAAK,KAAL,EAAY,KAAZ,CAAb;AACD;AACF,KAJQ,EAIN,CAACP,UAAD,CAJM,CAAT,CArd0B,CAydR;;AAElB;;;;;;;AAOA,QAAIoB,QAAQ,GAAG9N,OAAO,EAAtB;AAAA,QACI+N,SAAS,GAAGzQ,cAAc,CAACwQ,QAAD,EAAW,CAAX,CAD9B;AAAA,QAEIE,YAAY,GAAGD,SAAS,CAAC,CAAD,CAF5B;AAAA,QAGIE,YAAY,GAAGF,SAAS,CAAC,CAAD,CAH5B,CAle0B,CAqeO;;;AAGjC,QAAIG,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AACxD,UAAIC,SAAS,GAAGJ,YAAY,EAA5B;AACA,UAAIK,KAAK,GAAGF,KAAK,CAACE,KAAlB,CAFwD,CAE/B;;AAEzB,UAAI,CAAC3B,UAAD,IAAe2B,KAAK,KAAKhP,OAAO,CAACiP,KAArC,EAA4C;AAC1CzB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAEDoB,MAAAA,YAAY,CAAC,CAAC,CAACpF,iBAAH,CAAZ,CARwD,CAQrB;;AAEnC,UAAIwF,KAAK,KAAKhP,OAAO,CAACkP,SAAlB,IAA+B,CAACH,SAAhC,IAA6C9G,UAA7C,IAA2D,CAACuB,iBAA5D,IAAiFZ,cAAc,CAACxJ,MAApG,EAA4G;AAC1G,YAAI+P,UAAU,GAAG3O,sBAAsB,CAAC6J,aAAD,EAAgBzB,cAAhB,CAAvC;;AAEA,YAAIuG,UAAU,CAACC,YAAX,KAA4B,IAAhC,EAAsC;AACpC3D,UAAAA,aAAa,CAAC0D,UAAU,CAACE,MAAZ,CAAb;AACAzE,UAAAA,aAAa,CAACuE,UAAU,CAACC,YAAZ,EAA0B,KAA1B,EAAiC,OAAjC,CAAb;AACD;AACF;;AAED,WAAK,IAAIE,IAAI,GAAGnQ,SAAS,CAACC,MAArB,EAA6BmQ,IAAI,GAAG,IAAIzD,KAAJ,CAAUwD,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEE,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGF,IAA9F,EAAoGE,IAAI,EAAxG,EAA4G;AAC1GD,QAAAA,IAAI,CAACC,IAAI,GAAG,CAAR,CAAJ,GAAiBrQ,SAAS,CAACqQ,IAAD,CAA1B;AACD;;AAED,UAAInC,UAAU,IAAIvG,OAAO,CAACwB,OAA1B,EAAmC;AACjC,YAAImH,gBAAJ;;AAEA,SAACA,gBAAgB,GAAG3I,OAAO,CAACwB,OAA5B,EAAqCvC,SAArC,CAA+ChH,KAA/C,CAAqD0Q,gBAArD,EAAuE,CAACX,KAAD,EAAQlH,MAAR,CAAe2H,IAAf,CAAvE;AACD;;AAED,UAAIxJ,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAAChH,KAAV,CAAgB,KAAK,CAArB,EAAwB,CAAC+P,KAAD,EAAQlH,MAAR,CAAe2H,IAAf,CAAxB;AACD;AACF,KAhCD,CAxe0B,CAwgBvB;;;AAGH,QAAIG,eAAe,GAAG,SAASA,eAAT,CAAyBZ,KAAzB,EAAgC;AACpD,WAAK,IAAIa,KAAK,GAAGxQ,SAAS,CAACC,MAAtB,EAA8BmQ,IAAI,GAAG,IAAIzD,KAAJ,CAAU6D,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,CAAlC,CAArC,EAA2EC,KAAK,GAAG,CAAxF,EAA2FA,KAAK,GAAGD,KAAnG,EAA0GC,KAAK,EAA/G,EAAmH;AACjHL,QAAAA,IAAI,CAACK,KAAK,GAAG,CAAT,CAAJ,GAAkBzQ,SAAS,CAACyQ,KAAD,CAA3B;AACD;;AAED,UAAIvC,UAAU,IAAIvG,OAAO,CAACwB,OAA1B,EAAmC;AACjC,YAAIuH,iBAAJ;;AAEA,SAACA,iBAAiB,GAAG/I,OAAO,CAACwB,OAA7B,EAAsCxC,OAAtC,CAA8C/G,KAA9C,CAAoD8Q,iBAApD,EAAuE,CAACf,KAAD,EAAQlH,MAAR,CAAe2H,IAAf,CAAvE;AACD;;AAED,UAAIzJ,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAAC/G,KAAR,CAAc,KAAK,CAAnB,EAAsB,CAAC+P,KAAD,EAAQlH,MAAR,CAAe2H,IAAf,CAAtB;AACD;AACF,KAdD,CA3gB0B,CAyhBvB;;AAEH;;;AAGA,QAAIO,QAAQ,GAAGjQ,MAAM,CAAC,KAAD,CAArB;;AAEA,QAAIkQ,gBAAgB,GAAG,SAASA,gBAAT,GAA4B;AACjDzI,MAAAA,cAAc,CAAC,IAAD,CAAd;;AAEA,UAAI,CAACtD,QAAL,EAAe;AACb,YAAI4B,OAAO,IAAI,CAACkK,QAAQ,CAACxH,OAAzB,EAAkC;AAChC1C,UAAAA,OAAO,CAAC7G,KAAR,CAAc,KAAK,CAAnB,EAAsBI,SAAtB;AACD,SAHY,CAGX;;;AAGF,YAAImG,UAAU,CAAC4B,QAAX,CAAoB,OAApB,CAAJ,EAAkC;AAChCsG,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF;;AAEDsC,MAAAA,QAAQ,CAACxH,OAAT,GAAmB,IAAnB;AACD,KAfD;;AAiBA,QAAI0H,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/C1I,MAAAA,cAAc,CAAC,KAAD,EAAQ,YAAY;AAChCwI,QAAAA,QAAQ,CAACxH,OAAT,GAAmB,KAAnB;AACAkF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAHa,CAAd;;AAKA,UAAIxJ,QAAJ,EAAc;AACZ;AACD;;AAED,UAAIwF,iBAAJ,EAAuB;AACrB;AACA,YAAI1G,IAAI,KAAK,MAAb,EAAqB;AACnB8K,UAAAA,aAAa,CAAC,EAAD,EAAK,KAAL,EAAY,KAAZ,CAAb;AACAnC,UAAAA,aAAa,CAACK,KAAK,CAACC,IAAN,CAAW,IAAIhD,GAAJ,CAAQ,GAAGnB,MAAH,CAAU5J,kBAAkB,CAAC4K,cAAD,CAA5B,EAA8C,CAACY,iBAAD,CAA9C,CAAR,CAAX,CAAD,CAAb;AACD,SAHD,MAGO,IAAI1G,IAAI,KAAK,UAAb,EAAyB;AAC9B;AACAyG,UAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACD;AACF;;AAED,UAAI1D,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAAC9G,KAAP,CAAa,KAAK,CAAlB,EAAqBI,SAArB;AACD;AACF,KAxBD;;AA0BA,QAAI8Q,gBAAgB,GAAG,EAAvB;AACAnQ,IAAAA,SAAS,CAAC,YAAY;AACpB,aAAO,YAAY;AACjBmQ,QAAAA,gBAAgB,CAAC3Q,OAAjB,CAAyB,UAAU4Q,SAAV,EAAqB;AAC5C,iBAAOC,YAAY,CAACD,SAAD,CAAnB;AACD,SAFD;AAGAD,QAAAA,gBAAgB,CAACG,MAAjB,CAAwB,CAAxB,EAA2BH,gBAAgB,CAAC7Q,MAA5C;AACD,OALD;AAMD,KAPQ,EAON,EAPM,CAAT;;AASA,QAAIiR,mBAAmB,GAAG,SAASA,mBAAT,CAA6BvB,KAA7B,EAAoC;AAC5D,UAAI7P,MAAM,GAAG6P,KAAK,CAAC7P,MAAnB;AACA,UAAIqR,YAAY,GAAG1J,UAAU,CAAC0B,OAAX,IAAsB1B,UAAU,CAAC0B,OAAX,CAAmBqF,eAAnB,EAAzC,CAF4D,CAEmB;;AAE/E,UAAI2C,YAAY,IAAIA,YAAY,CAACC,QAAb,CAAsBtR,MAAtB,CAApB,EAAmD;AACjD,YAAIiR,SAAS,GAAGM,UAAU,CAAC,YAAY;AACrC,cAAIrE,KAAK,GAAG8D,gBAAgB,CAACQ,OAAjB,CAAyBP,SAAzB,CAAZ;;AAEA,cAAI/D,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB8D,YAAAA,gBAAgB,CAACG,MAAjB,CAAwBjE,KAAxB,EAA+B,CAA/B;AACD;;AAED5E,UAAAA,oBAAoB;;AAEpB,cAAI,CAAC+I,YAAY,CAACC,QAAb,CAAsBG,QAAQ,CAACC,aAA/B,CAAL,EAAoD;AAClD9J,YAAAA,WAAW,CAACyB,OAAZ,CAAoBD,KAApB;AACD;AACF,SAZyB,CAA1B;AAaA4H,QAAAA,gBAAgB,CAACnR,IAAjB,CAAsBoR,SAAtB;AACD;;AAED,UAAIlK,WAAJ,EAAiB;AACf,aAAK,IAAI4K,KAAK,GAAGzR,SAAS,CAACC,MAAtB,EAA8ByR,QAAQ,GAAG,IAAI/E,KAAJ,CAAU8E,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,CAAlC,CAAzC,EAA+EE,KAAK,GAAG,CAA5F,EAA+FA,KAAK,GAAGF,KAAvG,EAA8GE,KAAK,EAAnH,EAAuH;AACrHD,UAAAA,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR,GAAsB3R,SAAS,CAAC2R,KAAD,CAA/B;AACD;;AAED9K,QAAAA,WAAW,CAACjH,KAAZ,CAAkB,KAAK,CAAvB,EAA0B,CAAC+P,KAAD,EAAQlH,MAAR,CAAeiJ,QAAf,CAA1B;AACD;AACF,KA5BD,CArlB0B,CAinBvB;;;AAGH,QAAIE,UAAU,GAAGnR,QAAQ,CAAC,CAAD,CAAzB;AAAA,QACIoR,WAAW,GAAG/S,cAAc,CAAC8S,UAAD,EAAa,CAAb,CADhC;AAAA,QAEIE,kBAAkB,GAAGD,WAAW,CAAC,CAAD,CAFpC;AAAA,QAGIE,qBAAqB,GAAGF,WAAW,CAAC,CAAD,CAHvC;;AAKA,QAAIG,8BAA8B,GAAGjN,wBAAwB,KAAK6D,SAA7B,GAAyC7D,wBAAzC,GAAoEpB,IAAI,KAAK,UAAlH;;AAEA,QAAIsO,aAAa,GAAG,SAASA,aAAT,CAAuBC,MAAvB,EAA+BlF,KAA/B,EAAsC;AACxD+E,MAAAA,qBAAqB,CAAC/E,KAAD,CAArB;;AAEA,UAAI7H,QAAQ,IAAIxB,IAAI,KAAK,UAArB,IAAmCuO,MAAM,KAAK,IAAlD,EAAwD;AACtDlI,QAAAA,cAAc,CAACyD,MAAM,CAACyE,MAAD,CAAP,CAAd;AACD;AACF,KAND,CA3nB0B,CAioBvB;;;AAGH,QAAIC,WAAW,GAAG1R,QAAQ,CAAC,IAAD,CAA1B;AAAA,QACI2R,WAAW,GAAGtT,cAAc,CAACqT,WAAD,EAAc,CAAd,CADhC;AAAA,QAEIE,cAAc,GAAGD,WAAW,CAAC,CAAD,CAFhC;AAAA,QAGIE,iBAAiB,GAAGF,WAAW,CAAC,CAAD,CAHnC;;AAKA,QAAIG,WAAW,GAAG9R,QAAQ,CAAC,EAAD,CAA1B;AAAA,QACI+R,WAAW,GAAG1T,cAAc,CAACyT,WAAD,EAAc,CAAd,CADhC;AAAA,QAEIE,WAAW,GAAGD,WAAW,CAAC,CAAD,CAF7B,CAzoB0B,CA2oBQ;;;AAGlC,aAASE,iBAAT,GAA6B;AAC3BD,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;;AAED/Q,IAAAA,eAAe,CAAC,YAAY;AAC1B,UAAI0M,WAAJ,EAAiB;AACf,YAAIuE,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUrL,YAAY,CAAC2B,OAAb,CAAqB2J,WAA/B,CAAf;;AAEA,YAAIT,cAAc,KAAKM,QAAvB,EAAiC;AAC/BL,UAAAA,iBAAiB,CAACK,QAAD,CAAjB;AACD;AACF;AACF,KARc,EAQZ,CAACvE,WAAD,CARY,CAAf;AASA,QAAI2E,SAAS,GAAGvS,KAAK,CAACwS,aAAN,CAAoB5Q,UAApB,EAAgC;AAC9Cc,MAAAA,GAAG,EAAEyE,OADyC;AAE9CxF,MAAAA,SAAS,EAAEA,SAFmC;AAG9CmB,MAAAA,EAAE,EAAEoF,QAH0C;AAI9CnF,MAAAA,IAAI,EAAE2K,UAJwC;AAK9C+E,MAAAA,cAAc,EAAE,CAACxP,OAL6B;AAM9CA,MAAAA,OAAO,EAAEiH,cANqC;AAO9ClI,MAAAA,cAAc,EAAEwI,qBAP8B;AAQ9CkI,MAAAA,QAAQ,EAAEpK,UARoC;AAS9CoH,MAAAA,MAAM,EAAEvG,SATsC;AAU9CwJ,MAAAA,MAAM,EAAE5N,UAVsC;AAW9C6N,MAAAA,UAAU,EAAE3N,cAXkC;AAY9CsB,MAAAA,QAAQ,EAAE2G,sBAZoC;AAa9CW,MAAAA,YAAY,EAAEA,YAbgC;AAc9C4D,MAAAA,aAAa,EAAEA,aAd+B;AAe9ClN,MAAAA,wBAAwB,EAAEiN,8BAfoB;AAgB9C/M,MAAAA,eAAe,EAAEA,eAhB6B;AAiB9CoO,MAAAA,QAAQ,EAAE9M,aAjBoC;AAkB9CtC,MAAAA,WAAW,EAAEoG,iBAlBiC;AAmB9CzF,MAAAA,oBAAoB,EAAEA,oBAnBwB;AAoB9CgB,MAAAA,OAAO,EAAEA,OAAO,KAAK,KAAZ,IAAqBG,wBAAwB,KAAK,KApBb;AAqB9CuN,MAAAA,YAAY,EAAEZ;AArBgC,KAAhC,CAAhB,CA3pB0B,CAirBtB;;AAEJ,QAAIa,SAAJ;;AAEA,QAAIC,gBAAgB,GAAG,SAASA,gBAAT,GAA4B;AACjD;AACA,UAAIpM,gBAAgB,IAAIF,aAAa,CAACuM,OAAtC,EAA+C;AAC7CvM,QAAAA,aAAa,CAACuM,OAAd;AACD;;AAEDnH,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAmC,MAAAA,aAAa,CAAC,EAAD,EAAK,KAAL,EAAY,KAAZ,CAAb;AACD,KARD;;AAUA,QAAI,CAAC5J,QAAD,IAAaL,UAAb,KAA4BiF,cAAc,CAACxJ,MAAf,IAAyBoK,iBAArD,CAAJ,EAA6E;AAC3EkJ,MAAAA,SAAS,GAAG/S,KAAK,CAACwS,aAAN,CAAoBzR,QAApB,EAA8B;AACxC8B,QAAAA,SAAS,EAAE,GAAGoF,MAAH,CAAUtG,SAAV,EAAqB,QAArB,CAD6B;AAExC0E,QAAAA,WAAW,EAAE2M,gBAF2B;AAGxCE,QAAAA,aAAa,EAAEjP;AAHyB,OAA9B,EAIT,MAJS,CAAZ;AAKD,KArsByB,CAqsBxB;;;AAGF,QAAIkP,eAAe,GAAGjP,SAAS,KAAKkE,SAAd,GAA0BlE,SAA1B,GAAsCI,OAAO,IAAI,CAACgE,UAAD,IAAenF,IAAI,KAAK,UAA/F;AACA,QAAIiQ,SAAJ;;AAEA,QAAID,eAAJ,EAAqB;AACnBC,MAAAA,SAAS,GAAGpT,KAAK,CAACwS,aAAN,CAAoBzR,QAApB,EAA8B;AACxC8B,QAAAA,SAAS,EAAEvC,UAAU,CAAC,GAAG2H,MAAH,CAAUtG,SAAV,EAAqB,QAArB,CAAD,EAAiCvD,eAAe,CAAC,EAAD,EAAK,GAAG6J,MAAH,CAAUtG,SAAV,EAAqB,gBAArB,CAAL,EAA6C2C,OAA7C,CAAhD,CADmB;AAExC4O,QAAAA,aAAa,EAAE/O,SAFyB;AAGxCkP,QAAAA,kBAAkB,EAAE;AAClB/O,UAAAA,OAAO,EAAEA,OADS;AAElBb,UAAAA,WAAW,EAAEoG,iBAFK;AAGlB9G,UAAAA,IAAI,EAAE2K,UAHY;AAIlB4F,UAAAA,OAAO,EAAE5L,WAJS;AAKlBnE,UAAAA,UAAU,EAAEgF;AALM;AAHoB,OAA9B,CAAZ;AAWD,KAvtByB,CAutBxB;;;AAGF,QAAIgL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCpR,YAA7C,EAA2D;AACzDA,MAAAA,YAAY,CAACI,KAAD,CAAZ;AACD,KA5tByB,CA4tBxB;;;AAGF,QAAIiR,eAAe,GAAGpT,UAAU,CAACqB,SAAD,EAAYkB,SAAZ,GAAwBF,YAAY,GAAG,EAAf,EAAmBvE,eAAe,CAACuE,YAAD,EAAe,GAAGsF,MAAH,CAAUtG,SAAV,EAAqB,UAArB,CAAf,EAAiD+F,WAAjD,CAAlC,EAAiGtJ,eAAe,CAACuE,YAAD,EAAe,GAAGsF,MAAH,CAAUtG,SAAV,EAAqB,WAArB,CAAf,EAAkD2G,UAAlD,CAAhH,EAA+KlK,eAAe,CAACuE,YAAD,EAAe,GAAGsF,MAAH,CAAUtG,SAAV,EAAqB,SAArB,CAAf,EAAgD,CAAC2G,UAAjD,CAA9L,EAA4PlK,eAAe,CAACuE,YAAD,EAAe,GAAGsF,MAAH,CAAUtG,SAAV,EAAqB,cAArB,CAAf,EAAqDqC,UAArD,CAA3Q,EAA6U5F,eAAe,CAACuE,YAAD,EAAe,GAAGsF,MAAH,CAAUtG,SAAV,EAAqB,aAArB,CAAf,EAAoDwR,eAApD,CAA5V,EAAka/U,eAAe,CAACuE,YAAD,EAAe,GAAGsF,MAAH,CAAUtG,SAAV,EAAqB,WAArB,CAAf,EAAkD0C,QAAlD,CAAjb,EAA8ejG,eAAe,CAACuE,YAAD,EAAe,GAAGsF,MAAH,CAAUtG,SAAV,EAAqB,UAArB,CAAf,EAAiD2C,OAAjD,CAA7f,EAAwjBlG,eAAe,CAACuE,YAAD,EAAe,GAAGsF,MAAH,CAAUtG,SAAV,EAAqB,OAArB,CAAf,EAA8C+L,UAA9C,CAAvkB,EAAkoBtP,eAAe,CAACuE,YAAD,EAAe,GAAGsF,MAAH,CAAUtG,SAAV,EAAqB,kBAArB,CAAf,EAAyD0L,qBAAzD,CAAjpB,EAAkuBjP,eAAe,CAACuE,YAAD,EAAe,GAAGsF,MAAH,CAAUtG,SAAV,EAAqB,cAArB,CAAf,EAAqD4G,gBAArD,CAAjvB,EAAyzB5F,YAAj1B,EAAhC;AACA,WAAO3C,KAAK,CAACwS,aAAN,CAAoB,KAApB,EAA2B5T,MAAM,CAAC+U,MAAP,CAAc;AAC9C9Q,MAAAA,SAAS,EAAE6Q;AADmC,KAAd,EAE/B5M,QAF+B,EAErB;AACXpE,MAAAA,GAAG,EAAEsE,YADM;AAEXX,MAAAA,WAAW,EAAEqK,mBAFF;AAGXtK,MAAAA,SAAS,EAAE8I,iBAHA;AAIX/I,MAAAA,OAAO,EAAE4J,eAJE;AAKX9J,MAAAA,OAAO,EAAEmK,gBALE;AAMXlK,MAAAA,MAAM,EAAEmK;AANG,KAFqB,CAA3B,EASH3I,WAAW,IAAI,CAACgG,UAAhB,IAA8B1N,KAAK,CAACwS,aAAN,CAAoB,MAApB,EAA4B;AAC5DoB,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,CADF;AAELlB,QAAAA,MAAM,EAAE,CAFH;AAGLmB,QAAAA,OAAO,EAAE,MAHJ;AAILC,QAAAA,QAAQ,EAAE,QAJL;AAKLC,QAAAA,OAAO,EAAE;AALJ,OADqD;AAQ5D,mBAAa;AAR+C,KAA5B,EAS/B,GAAG/L,MAAH,CAAUgB,cAAc,CAACgL,IAAf,CAAoB,IAApB,CAAV,CAT+B,CAT3B,EAkBmCjU,KAAK,CAACwS,aAAN,CAAoB/R,aAApB,EAAmC;AAC3EiC,MAAAA,GAAG,EAAEuE,UADsE;AAE3E5C,MAAAA,QAAQ,EAAEA,QAFiE;AAG3E1C,MAAAA,SAAS,EAAEA,SAHgE;AAI3EuS,MAAAA,OAAO,EAAEtG,WAJkE;AAK3E+C,MAAAA,YAAY,EAAE4B,SAL6D;AAM3EV,MAAAA,cAAc,EAAEA,cAN2D;AAO3E3M,MAAAA,SAAS,EAAEA,SAPgE;AAQ3EC,MAAAA,cAAc,EAAEA,cAR2D;AAS3EE,MAAAA,aAAa,EAAEA,aAT4D;AAU3EC,MAAAA,iBAAiB,EAAEA,iBAVwD;AAW3EM,MAAAA,SAAS,EAAEA,SAXgE;AAY3EL,MAAAA,wBAAwB,EAAEA,wBAZiD;AAa3EC,MAAAA,cAAc,EAAEA,cAb2D;AAc3EC,MAAAA,aAAa,EAAEA,aAd4D;AAe3EZ,MAAAA,iBAAiB,EAAEA,iBAfwD;AAgB3EsP,MAAAA,KAAK,EAAE,CAACrK,aAAa,CAACrK,MAhBqD;AAiB3E2U,MAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C,eAAO5L,cAAc,CAACG,OAAtB;AACD;AAnB0E,KAAnC,EAoBvC3I,KAAK,CAACwS,aAAN,CAAoBhS,QAApB,EAA8B5B,MAAM,CAAC+U,MAAP,CAAc,EAAd,EAAkBlR,KAAlB,EAAyB;AACxD4R,MAAAA,MAAM,EAAE7L,cADgD;AAExD7G,MAAAA,SAAS,EAAEA,SAF6C;AAGxD2S,MAAAA,YAAY,EAAEjH,qBAH0C;AAIxD3K,MAAAA,GAAG,EAAEwE,WAJmD;AAKxDpE,MAAAA,EAAE,EAAEoF,QALoD;AAMxD3E,MAAAA,UAAU,EAAEgF,gBAN4C;AAOxDpF,MAAAA,IAAI,EAAEA,IAPkD;AAQxDmO,MAAAA,kBAAkB,EAAEA,kBARoC;AASxDoB,MAAAA,QAAQ,EAAEpK,UAT8C;AAUxDxC,MAAAA,SAAS,EAAEA,SAV6C;AAWxD4J,MAAAA,MAAM,EAAEhF,aAXgD;AAYxD3H,MAAAA,IAAI,EAAE2K,UAZkD;AAaxDG,MAAAA,YAAY,EAAEA,YAb0C;AAcxDpK,MAAAA,WAAW,EAAEoG,iBAd2C;AAexDN,MAAAA,WAAW,EAAEA,WAf2C;AAgBxDxF,MAAAA,QAAQ,EAAEkK,aAhB8C;AAiBxDY,MAAAA,cAAc,EAAEA,cAjBwC;AAkBxDtI,MAAAA,QAAQ,EAAE6G,yBAlB8C;AAmBxDhG,MAAAA,cAAc,EAAEA;AAnBwC,KAAzB,CAA9B,CApBuC,CAlBnC,EA0DDgM,SA1DC,EA0DUL,SA1DV,CAAP;AA2DD;;AAED,MAAIwB,SAAS,GAAGvU,KAAK,CAACwU,UAAN,CAAiBhS,MAAjB,CAAhB;AACA,SAAO+R,SAAP;AACD","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n */\nimport * as React from 'react';\nimport { useState, useRef, useEffect, useMemo } from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Selector from './Selector';\nimport SelectTrigger from './SelectTrigger';\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport useDelayReset from './hooks/useDelayReset';\nimport useLayoutEffect from './hooks/useLayoutEffect';\nimport { getSeparatedContent } from './utils/valueUtil';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useCacheDisplayValue from './hooks/useCacheDisplayValue';\nimport useCacheOptions from './hooks/useCacheOptions';\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown'];\n/**\n * This function is in internal usage.\n * Do not use it in your prod env since we may refactor this.\n */\n\nexport default function generateSelector(config) {\n  var defaultPrefixCls = config.prefixCls,\n      OptionList = config.components.optionList,\n      convertChildrenToData = config.convertChildrenToData,\n      flattenOptions = config.flattenOptions,\n      getLabeledValue = config.getLabeledValue,\n      filterOptions = config.filterOptions,\n      isValueDisabled = config.isValueDisabled,\n      findValueOption = config.findValueOption,\n      warningProps = config.warningProps,\n      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\n      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\n\n  function Select(props, ref) {\n    var _classNames2;\n\n    var _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\n        className = props.className,\n        id = props.id,\n        open = props.open,\n        defaultOpen = props.defaultOpen,\n        options = props.options,\n        children = props.children,\n        mode = props.mode,\n        value = props.value,\n        defaultValue = props.defaultValue,\n        labelInValue = props.labelInValue,\n        showSearch = props.showSearch,\n        inputValue = props.inputValue,\n        searchValue = props.searchValue,\n        filterOption = props.filterOption,\n        _props$optionFilterPr = props.optionFilterProp,\n        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\n        _props$autoClearSearc = props.autoClearSearchValue,\n        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n        onSearch = props.onSearch,\n        allowClear = props.allowClear,\n        clearIcon = props.clearIcon,\n        showArrow = props.showArrow,\n        inputIcon = props.inputIcon,\n        menuItemSelectedIcon = props.menuItemSelectedIcon,\n        disabled = props.disabled,\n        loading = props.loading,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        _props$notFoundConten = props.notFoundContent,\n        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n        optionLabelProp = props.optionLabelProp,\n        backfill = props.backfill,\n        getInputElement = props.getInputElement,\n        getPopupContainer = props.getPopupContainer,\n        _props$listHeight = props.listHeight,\n        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n        _props$listItemHeight = props.listItemHeight,\n        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n        animation = props.animation,\n        transitionName = props.transitionName,\n        virtual = props.virtual,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n        dropdownRender = props.dropdownRender,\n        dropdownAlign = props.dropdownAlign,\n        _props$showAction = props.showAction,\n        showAction = _props$showAction === void 0 ? [] : _props$showAction,\n        direction = props.direction,\n        tokenSeparators = props.tokenSeparators,\n        tagRender = props.tagRender,\n        onPopupScroll = props.onPopupScroll,\n        onDropdownVisibleChange = props.onDropdownVisibleChange,\n        onFocus = props.onFocus,\n        onBlur = props.onBlur,\n        onKeyUp = props.onKeyUp,\n        onKeyDown = props.onKeyDown,\n        onMouseDown = props.onMouseDown,\n        onChange = props.onChange,\n        onSelect = props.onSelect,\n        onDeselect = props.onDeselect,\n        _props$internalProps = props.internalProps,\n        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\n        restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"internalProps\"]);\n\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\n      delete domProps[prop];\n    });\n    var containerRef = useRef(null);\n    var triggerRef = useRef(null);\n    var selectorRef = useRef(null);\n    var listRef = useRef(null);\n    var tokenWithEnter = useMemo(function () {\n      return (tokenSeparators || []).some(function (tokenSeparator) {\n        return ['\\n', '\\r\\n'].includes(tokenSeparator);\n      });\n    }, [tokenSeparators]);\n    /** Used for component focused management */\n\n    var _useDelayReset = useDelayReset(),\n        _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n        mockFocused = _useDelayReset2[0],\n        setMockFocused = _useDelayReset2[1],\n        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\n\n\n    var _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        innerId = _useState2[0],\n        setInnerId = _useState2[1];\n\n    useEffect(function () {\n      setInnerId(\"rc_select_\".concat(getUUID()));\n    }, []);\n    var mergedId = id || innerId; // optionLabelProp\n\n    var mergedOptionLabelProp = optionLabelProp;\n\n    if (mergedOptionLabelProp === undefined) {\n      mergedOptionLabelProp = options ? 'label' : 'children';\n    } // labelInValue\n\n\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\n    var isMultiple = mode === 'tags' || mode === 'multiple';\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ============================== Ref ===============================\n\n    var selectorDomRef = useRef(null);\n    React.useImperativeHandle(ref, function () {\n      return {\n        focus: selectorRef.current.focus,\n        blur: selectorRef.current.blur\n      };\n    }); // ============================= Value ==============================\n\n    var _useMergedState = useMergedState(defaultValue, {\n      value: value\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        mergedValue = _useMergedState2[0],\n        setMergedValue = _useMergedState2[1];\n    /** Unique raw values */\n\n\n    var mergedRawValue = useMemo(function () {\n      return toInnerValue(mergedValue, {\n        labelInValue: mergedLabelInValue,\n        combobox: mode === 'combobox'\n      });\n    }, [mergedValue, mergedLabelInValue]);\n    /** We cache a set of raw values to speed up check */\n\n    var rawValues = useMemo(function () {\n      return new Set(mergedRawValue);\n    }, [mergedRawValue]); // ============================= Option =============================\n    // Set by option list active, it will merge into search input when mode is `combobox`\n\n    var _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeValue = _useState4[0],\n        setActiveValue = _useState4[1];\n\n    var _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        innerSearchValue = _useState6[0],\n        setInnerSearchValue = _useState6[1];\n\n    var mergedSearchValue = innerSearchValue;\n\n    if (mode === 'combobox' && mergedValue !== undefined) {\n      mergedSearchValue = mergedValue;\n    } else if (searchValue !== undefined) {\n      mergedSearchValue = searchValue;\n    } else if (inputValue) {\n      mergedSearchValue = inputValue;\n    }\n\n    var mergedOptions = useMemo(function () {\n      var newOptions = options;\n\n      if (newOptions === undefined) {\n        newOptions = convertChildrenToData(children);\n      }\n      /**\n       * `tags` should fill un-list item.\n       * This is not cool here since TreeSelect do not need this\n       */\n\n\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\n        newOptions = fillOptionsWithMissingValue(newOptions, mergedValue, mergedOptionLabelProp, labelInValue);\n      }\n\n      return newOptions || [];\n    }, [options, children, mode, mergedValue]);\n    var mergedFlattenOptions = useMemo(function () {\n      return flattenOptions(mergedOptions, props);\n    }, [mergedOptions]);\n    var getValueOption = useCacheOptions(mergedRawValue, mergedFlattenOptions); // Display options for OptionList\n\n    var displayOptions = useMemo(function () {\n      if (!mergedSearchValue || !mergedShowSearch) {\n        return _toConsumableArray(mergedOptions);\n      }\n\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\n        optionFilterProp: optionFilterProp,\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\n          return true;\n        } : filterOption\n      });\n\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\n        return opt.value !== mergedSearchValue;\n      })) {\n        filteredOptions.unshift({\n          value: mergedSearchValue,\n          label: mergedSearchValue,\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\n        });\n      }\n\n      return filteredOptions;\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch]);\n    var displayFlattenOptions = useMemo(function () {\n      return flattenOptions(displayOptions, props);\n    }, [displayOptions]);\n    useEffect(function () {\n      if (listRef.current && listRef.current.scrollTo) {\n        listRef.current.scrollTo(0);\n      }\n    }, [mergedSearchValue]); // ============================ Selector ============================\n\n    var displayValues = useMemo(function () {\n      var tmpValues = mergedRawValue.map(function (val) {\n        var valueOptions = getValueOption([val]);\n        var displayValue = getLabeledValue(val, {\n          options: valueOptions,\n          prevValue: mergedValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        });\n        return _objectSpread(_objectSpread({}, displayValue), {}, {\n          disabled: isValueDisabled(val, valueOptions)\n        });\n      });\n\n      if (!mode && tmpValues.length === 1 && tmpValues[0].value === null && tmpValues[0].label === null) {\n        return [];\n      }\n\n      return tmpValues;\n    }, [mergedValue, mergedOptions, mode]); // Polyfill with cache label\n\n    displayValues = useCacheDisplayValue(displayValues);\n\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\n      var newValueOption = getValueOption([newValue]);\n      var outOption = findValueOption([newValue], newValueOption)[0];\n\n      if (!internalProps.skipTriggerSelect) {\n        // Skip trigger `onSelect` or `onDeselect` if configured\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\n          options: newValueOption,\n          prevValue: mergedValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        }) : newValue;\n\n        if (isSelect && onSelect) {\n          onSelect(selectValue, outOption);\n        } else if (!isSelect && onDeselect) {\n          onDeselect(selectValue, outOption);\n        }\n      } // Trigger internal event\n\n\n      if (useInternalProps) {\n        if (isSelect && internalProps.onRawSelect) {\n          internalProps.onRawSelect(newValue, outOption, source);\n        } else if (!isSelect && internalProps.onRawDeselect) {\n          internalProps.onRawDeselect(newValue, outOption, source);\n        }\n      }\n    }; // We need cache options here in case user update the option list\n\n\n    var _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        prevValueOptions = _useState8[0],\n        setPrevValueOptions = _useState8[1];\n\n    var triggerChange = function triggerChange(newRawValues) {\n      if (useInternalProps && internalProps.skipTriggerChange) {\n        return;\n      }\n\n      var newRawValuesOptions = getValueOption(newRawValues);\n      var outValues = toOuterValues(Array.from(newRawValues), {\n        labelInValue: mergedLabelInValue,\n        options: newRawValuesOptions,\n        getLabeledValue: getLabeledValue,\n        prevValue: mergedValue,\n        optionLabelProp: mergedOptionLabelProp\n      });\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\n\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\n        var outOptions = findValueOption(newRawValues, newRawValuesOptions, {\n          prevValueOptions: prevValueOptions\n        }); // We will cache option in case it removed by ajax\n\n        setPrevValueOptions(outOptions.map(function (option, index) {\n          var clone = _objectSpread({}, option);\n\n          Object.defineProperty(clone, '_INTERNAL_OPTION_VALUE_', {\n            get: function get() {\n              return newRawValues[index];\n            }\n          });\n          return clone;\n        }));\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\n      }\n\n      setMergedValue(outValue);\n    };\n\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\n      var selected = _ref.selected,\n          source = _ref.source;\n\n      if (disabled) {\n        return;\n      }\n\n      var newRawValue;\n\n      if (isMultiple) {\n        newRawValue = new Set(mergedRawValue);\n\n        if (selected) {\n          newRawValue.add(newValue);\n        } else {\n          newRawValue.delete(newValue);\n        }\n      } else {\n        newRawValue = new Set();\n        newRawValue.add(newValue);\n      } // Multiple always trigger change and single should change if value changed\n\n\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\n        triggerChange(Array.from(newRawValue));\n      } // Trigger `onSelect`. Single mode always trigger select\n\n\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\n\n      if (mode === 'combobox') {\n        setInnerSearchValue(String(newValue));\n        setActiveValue('');\n      } else if (!isMultiple || autoClearSearchValue) {\n        setInnerSearchValue('');\n        setActiveValue('');\n      }\n    };\n\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'option'\n      }));\n    };\n\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'selection'\n      }));\n    }; // ============================= Input ==============================\n    // Only works in `combobox`\n\n\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\n\n    var _useMergedState3 = useMergedState(undefined, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n        _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n        innerOpen = _useMergedState4[0],\n        setInnerOpen = _useMergedState4[1];\n\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n    var emptyListContent = !notFoundContent && !displayOptions.length;\n\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n      mergedOpen = false;\n    }\n\n    var triggerOpen = emptyListContent ? false : mergedOpen;\n\n    var onToggleOpen = function onToggleOpen(newOpen) {\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n      if (innerOpen !== nextOpen && !disabled) {\n        setInnerOpen(nextOpen);\n\n        if (onDropdownVisibleChange) {\n          onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\n\n    var triggerSearch = function triggerSearch(searchText, fromTyping, isCompositing) {\n      var ret = true;\n      var newSearchText = searchText;\n      setActiveValue(null); // Check if match the `tokenSeparators`\n\n      var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n      var patchRawValues = patchLabels;\n\n      if (mode === 'combobox') {\n        // Only typing will trigger onChange\n        if (fromTyping) {\n          triggerChange([newSearchText]);\n        }\n      } else if (patchLabels) {\n        newSearchText = '';\n\n        if (mode !== 'tags') {\n          patchRawValues = patchLabels.map(function (label) {\n            var item = mergedFlattenOptions.find(function (_ref2) {\n              var data = _ref2.data;\n              return data[mergedOptionLabelProp] === label;\n            });\n            return item ? item.data.value : null;\n          }).filter(function (val) {\n            return val !== null;\n          });\n        }\n\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\n        triggerChange(newRawValues);\n        newRawValues.forEach(function (newRawValue) {\n          triggerSelect(newRawValue, true, 'input');\n        }); // Should close when paste finish\n\n        onToggleOpen(false); // Tell Selector that break next actions\n\n        ret = false;\n      }\n\n      setInnerSearchValue(newSearchText);\n\n      if (onSearch && mergedSearchValue !== newSearchText) {\n        onSearch(newSearchText);\n      }\n\n      return ret;\n    }; // Only triggered when menu is closed & mode is tags\n    // If menu is open, OptionList will take charge\n    // If mode isn't tags, press enter is not meaningful when you can't see any option\n\n\n    var onSearchSubmit = function onSearchSubmit(searchText) {\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [searchText])));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true, 'input');\n      });\n      setInnerSearchValue('');\n    }; // Close dropdown when disabled change\n\n\n    useEffect(function () {\n      if (innerOpen && !!disabled) {\n        setInnerOpen(false);\n      }\n    }, [disabled]); // Close will clean up single mode search text\n\n    useEffect(function () {\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\n        triggerSearch('', false, false);\n      }\n    }, [mergedOpen]); // ============================ Keyboard ============================\n\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n\n    var _useLock = useLock(),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getClearLock = _useLock2[0],\n        setClearLock = _useLock2[1]; // KeyDown\n\n\n    var onInternalKeyDown = function onInternalKeyDown(event) {\n      var clearLock = getClearLock();\n      var which = event.which; // We only manage open state here, close logic should handle by list component\n\n      if (!mergedOpen && which === KeyCode.ENTER) {\n        onToggleOpen(true);\n      }\n\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\n\n        if (removeInfo.removedValue !== null) {\n          triggerChange(removeInfo.values);\n          triggerSelect(removeInfo.removedValue, false, 'input');\n        }\n      }\n\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current;\n\n        (_listRef$current = listRef.current).onKeyDown.apply(_listRef$current, [event].concat(rest));\n      }\n\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    }; // KeyUp\n\n\n    var onInternalKeyUp = function onInternalKeyUp(event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current2;\n\n        (_listRef$current2 = listRef.current).onKeyUp.apply(_listRef$current2, [event].concat(rest));\n      }\n\n      if (onKeyUp) {\n        onKeyUp.apply(void 0, [event].concat(rest));\n      }\n    }; // ========================== Focus / Blur ==========================\n\n    /** Record real focus status */\n\n\n    var focusRef = useRef(false);\n\n    var onContainerFocus = function onContainerFocus() {\n      setMockFocused(true);\n\n      if (!disabled) {\n        if (onFocus && !focusRef.current) {\n          onFocus.apply(void 0, arguments);\n        } // `showAction` should handle `focus` if set\n\n\n        if (showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n\n      focusRef.current = true;\n    };\n\n    var onContainerBlur = function onContainerBlur() {\n      setMockFocused(false, function () {\n        focusRef.current = false;\n        onToggleOpen(false);\n      });\n\n      if (disabled) {\n        return;\n      }\n\n      if (mergedSearchValue) {\n        // `tags` mode should move `searchValue` into values\n        if (mode === 'tags') {\n          triggerSearch('', false, false);\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\n        } else if (mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          setInnerSearchValue('');\n        }\n      }\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    var activeTimeoutIds = [];\n    useEffect(function () {\n      return function () {\n        activeTimeoutIds.forEach(function (timeoutId) {\n          return clearTimeout(timeoutId);\n        });\n        activeTimeoutIds.splice(0, activeTimeoutIds.length);\n      };\n    }, []);\n\n    var onInternalMouseDown = function onInternalMouseDown(event) {\n      var target = event.target;\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n      if (popupElement && popupElement.contains(target)) {\n        var timeoutId = setTimeout(function () {\n          var index = activeTimeoutIds.indexOf(timeoutId);\n\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n\n          cancelSetMockFocused();\n\n          if (!popupElement.contains(document.activeElement)) {\n            selectorRef.current.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n\n      if (onMouseDown) {\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          restArgs[_key3 - 1] = arguments[_key3];\n        }\n\n        onMouseDown.apply(void 0, [event].concat(restArgs));\n      }\n    }; // ========================= Accessibility ==========================\n\n\n    var _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        accessibilityIndex = _useState10[0],\n        setAccessibilityIndex = _useState10[1];\n\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n\n    var onActiveValue = function onActiveValue(active, index) {\n      setAccessibilityIndex(index);\n\n      if (backfill && mode === 'combobox' && active !== null) {\n        setActiveValue(String(active));\n      }\n    }; // ============================= Popup ==============================\n\n\n    var _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        containerWidth = _useState12[0],\n        setContainerWidth = _useState12[1];\n\n    var _useState13 = useState({}),\n        _useState14 = _slicedToArray(_useState13, 2),\n        forceUpdate = _useState14[1]; // We need force update here since popup dom is render async\n\n\n    function onPopupMouseEnter() {\n      forceUpdate({});\n    }\n\n    useLayoutEffect(function () {\n      if (triggerOpen) {\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\n\n        if (containerWidth !== newWidth) {\n          setContainerWidth(newWidth);\n        }\n      }\n    }, [triggerOpen]);\n    var popupNode = React.createElement(OptionList, {\n      ref: listRef,\n      prefixCls: prefixCls,\n      id: mergedId,\n      open: mergedOpen,\n      childrenAsData: !options,\n      options: displayOptions,\n      flattenOptions: displayFlattenOptions,\n      multiple: isMultiple,\n      values: rawValues,\n      height: listHeight,\n      itemHeight: listItemHeight,\n      onSelect: onInternalOptionSelect,\n      onToggleOpen: onToggleOpen,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      notFoundContent: notFoundContent,\n      onScroll: onPopupScroll,\n      searchValue: mergedSearchValue,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false,\n      onMouseEnter: onPopupMouseEnter\n    }); // ============================= Clear ==============================\n\n    var clearNode;\n\n    var onClearMouseDown = function onClearMouseDown() {\n      // Trigger internal `onClear` event\n      if (useInternalProps && internalProps.onClear) {\n        internalProps.onClear();\n      }\n\n      triggerChange([]);\n      triggerSearch('', false, false);\n    };\n\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\n      clearNode = React.createElement(TransBtn, {\n        className: \"\".concat(prefixCls, \"-clear\"),\n        onMouseDown: onClearMouseDown,\n        customizeIcon: clearIcon\n      }, \"\\xD7\");\n    } // ============================= Arrow ==============================\n\n\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\n    var arrowNode;\n\n    if (mergedShowArrow) {\n      arrowNode = React.createElement(TransBtn, {\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n        customizeIcon: inputIcon,\n        customizeIconProps: {\n          loading: loading,\n          searchValue: mergedSearchValue,\n          open: mergedOpen,\n          focused: mockFocused,\n          showSearch: mergedShowSearch\n        }\n      });\n    } // ============================ Warning =============================\n\n\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\n      warningProps(props);\n    } // ============================= Render =============================\n\n\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n    return React.createElement(\"div\", Object.assign({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(mergedRawValue.join(', '))), React.createElement(SelectTrigger, {\n      ref: triggerRef,\n      disabled: disabled,\n      prefixCls: prefixCls,\n      visible: triggerOpen,\n      popupElement: popupNode,\n      containerWidth: containerWidth,\n      animation: animation,\n      transitionName: transitionName,\n      dropdownStyle: dropdownStyle,\n      dropdownClassName: dropdownClassName,\n      direction: direction,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      dropdownRender: dropdownRender,\n      dropdownAlign: dropdownAlign,\n      getPopupContainer: getPopupContainer,\n      empty: !mergedOptions.length,\n      getTriggerDOMNode: function getTriggerDOMNode() {\n        return selectorDomRef.current;\n      }\n    }, React.createElement(Selector, Object.assign({}, props, {\n      domRef: selectorDomRef,\n      prefixCls: prefixCls,\n      inputElement: customizeInputElement,\n      ref: selectorRef,\n      id: mergedId,\n      showSearch: mergedShowSearch,\n      mode: mode,\n      accessibilityIndex: accessibilityIndex,\n      multiple: isMultiple,\n      tagRender: tagRender,\n      values: displayValues,\n      open: mergedOpen,\n      onToggleOpen: onToggleOpen,\n      searchValue: mergedSearchValue,\n      activeValue: activeValue,\n      onSearch: triggerSearch,\n      onSearchSubmit: onSearchSubmit,\n      onSelect: onInternalSelectionSelect,\n      tokenWithEnter: tokenWithEnter\n    }))), arrowNode, clearNode);\n  }\n\n  var RefSelect = React.forwardRef(Select);\n  return RefSelect;\n}"]},"metadata":{},"sourceType":"module"}