{"ast":null,"code":"import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\n\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n  baseForOwn(object, function (value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nexport default mapKeys;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/lodash-es/mapKeys.js"],"names":["baseAssignValue","baseForOwn","baseIteratee","mapKeys","object","iteratee","result","value","key"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uBAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,QAAzB,EAAmC;AACjC,MAAIC,MAAM,GAAG,EAAb;AACAD,EAAAA,QAAQ,GAAGH,YAAY,CAACG,QAAD,EAAW,CAAX,CAAvB;AAEAJ,EAAAA,UAAU,CAACG,MAAD,EAAS,UAASG,KAAT,EAAgBC,GAAhB,EAAqBJ,MAArB,EAA6B;AAC9CJ,IAAAA,eAAe,CAACM,MAAD,EAASD,QAAQ,CAACE,KAAD,EAAQC,GAAR,EAAaJ,MAAb,CAAjB,EAAuCG,KAAvC,CAAf;AACD,GAFS,CAAV;AAGA,SAAOD,MAAP;AACD;;AAED,eAAeH,OAAf","sourcesContent":["import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nexport default mapKeys;\n"]},"metadata":{},"sourceType":"module"}