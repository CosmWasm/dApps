{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _rcDropdown = _interopRequireDefault(require(\"rc-dropdown\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _RightOutlined = _interopRequireDefault(require(\"@ant-design/icons/RightOutlined\"));\n\nvar _dropdownButton = _interopRequireDefault(require(\"./dropdown-button\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _devWarning = _interopRequireDefault(require(\"../_util/devWarning\"));\n\nvar _type = require(\"../_util/type\");\n\nvar _reactNode = require(\"../_util/reactNode\");\n\nvar Placements = (0, _type.tuple)('topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight');\n\nvar Dropdown = function Dropdown(props) {\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n      getContextPopupContainer = _React$useContext.getPopupContainer,\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var getTransitionName = function getTransitionName() {\n    var _props$placement = props.placement,\n        placement = _props$placement === void 0 ? '' : _props$placement,\n        transitionName = props.transitionName;\n\n    if (transitionName !== undefined) {\n      return transitionName;\n    }\n\n    if (placement.indexOf('top') >= 0) {\n      return 'slide-down';\n    }\n\n    return 'slide-up';\n  };\n\n  var renderOverlay = function renderOverlay(prefixCls) {\n    // rc-dropdown already can process the function of overlay, but we have check logic here.\n    // So we need render the element to check and pass back to rc-dropdown.\n    var overlay = props.overlay;\n    var overlayNode;\n\n    if (typeof overlay === 'function') {\n      overlayNode = overlay();\n    } else {\n      overlayNode = overlay;\n    }\n\n    overlayNode = React.Children.only(typeof overlayNode === 'string' ? /*#__PURE__*/React.createElement(\"span\", null, \"overlayNode\") : overlayNode);\n    var overlayProps = overlayNode.props; // Warning if use other mode\n\n    (0, _devWarning[\"default\"])(!overlayProps.mode || overlayProps.mode === 'vertical', 'Dropdown', \"mode=\\\"\".concat(overlayProps.mode, \"\\\" is not supported for Dropdown's Menu.\")); // menu cannot be selectable in dropdown defaultly\n    // menu should be focusable in dropdown defaultly\n\n    var _overlayProps$selecta = overlayProps.selectable,\n        selectable = _overlayProps$selecta === void 0 ? false : _overlayProps$selecta,\n        _overlayProps$focusab = overlayProps.focusable,\n        focusable = _overlayProps$focusab === void 0 ? true : _overlayProps$focusab;\n    var expandIcon = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-menu-submenu-arrow\")\n    }, /*#__PURE__*/React.createElement(_RightOutlined[\"default\"], {\n      className: \"\".concat(prefixCls, \"-menu-submenu-arrow-icon\")\n    }));\n    var fixedModeOverlay = typeof overlayNode.type === 'string' ? overlayNode : (0, _reactNode.cloneElement)(overlayNode, {\n      mode: 'vertical',\n      selectable: selectable,\n      focusable: focusable,\n      expandIcon: expandIcon\n    });\n    return fixedModeOverlay;\n  };\n\n  var getPlacement = function getPlacement() {\n    var placement = props.placement;\n\n    if (placement !== undefined) {\n      return placement;\n    }\n\n    return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n  };\n\n  var arrow = props.arrow,\n      customizePrefixCls = props.prefixCls,\n      children = props.children,\n      trigger = props.trigger,\n      disabled = props.disabled,\n      getPopupContainer = props.getPopupContainer,\n      overlayClassName = props.overlayClassName;\n  var prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n  var child = React.Children.only(children);\n  var dropdownTrigger = (0, _reactNode.cloneElement)(child, {\n    className: (0, _classnames[\"default\"])(child.props.className, \"\".concat(prefixCls, \"-trigger\"), (0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl')),\n    disabled: disabled\n  });\n  var overlayClassNameCustomized = (0, _classnames[\"default\"])(overlayClassName, (0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n  var triggerActions = disabled ? [] : trigger;\n  var alignPoint;\n\n  if (triggerActions && triggerActions.indexOf('contextMenu') !== -1) {\n    alignPoint = true;\n  }\n\n  return /*#__PURE__*/React.createElement(_rcDropdown[\"default\"], (0, _extends2[\"default\"])({\n    arrow: arrow,\n    alignPoint: alignPoint\n  }, props, {\n    overlayClassName: overlayClassNameCustomized,\n    prefixCls: prefixCls,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    transitionName: getTransitionName(),\n    trigger: triggerActions,\n    overlay: function overlay() {\n      return renderOverlay(prefixCls);\n    },\n    placement: getPlacement()\n  }), dropdownTrigger);\n};\n\nDropdown.Button = _dropdownButton[\"default\"];\nDropdown.defaultProps = {\n  mouseEnterDelay: 0.15,\n  mouseLeaveDelay: 0.1\n};\nvar _default = Dropdown;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/antd/lib/dropdown/dropdown.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","_extends2","_defineProperty2","React","_rcDropdown","_classnames","_RightOutlined","_dropdownButton","_configProvider","_devWarning","_type","_reactNode","Placements","tuple","Dropdown","props","_React$useContext","useContext","ConfigContext","getContextPopupContainer","getPopupContainer","getPrefixCls","direction","getTransitionName","_props$placement","placement","transitionName","undefined","indexOf","renderOverlay","prefixCls","overlay","overlayNode","Children","only","createElement","overlayProps","mode","concat","_overlayProps$selecta","selectable","_overlayProps$focusab","focusable","expandIcon","className","fixedModeOverlay","type","cloneElement","getPlacement","arrow","customizePrefixCls","children","trigger","disabled","overlayClassName","child","dropdownTrigger","overlayClassNameCustomized","triggerActions","alignPoint","Button","defaultProps","mouseEnterDelay","mouseLeaveDelay","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _rcDropdown = _interopRequireDefault(require(\"rc-dropdown\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _RightOutlined = _interopRequireDefault(require(\"@ant-design/icons/RightOutlined\"));\n\nvar _dropdownButton = _interopRequireDefault(require(\"./dropdown-button\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar _devWarning = _interopRequireDefault(require(\"../_util/devWarning\"));\n\nvar _type = require(\"../_util/type\");\n\nvar _reactNode = require(\"../_util/reactNode\");\n\nvar Placements = (0, _type.tuple)('topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight');\n\nvar Dropdown = function Dropdown(props) {\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n      getContextPopupContainer = _React$useContext.getPopupContainer,\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var getTransitionName = function getTransitionName() {\n    var _props$placement = props.placement,\n        placement = _props$placement === void 0 ? '' : _props$placement,\n        transitionName = props.transitionName;\n\n    if (transitionName !== undefined) {\n      return transitionName;\n    }\n\n    if (placement.indexOf('top') >= 0) {\n      return 'slide-down';\n    }\n\n    return 'slide-up';\n  };\n\n  var renderOverlay = function renderOverlay(prefixCls) {\n    // rc-dropdown already can process the function of overlay, but we have check logic here.\n    // So we need render the element to check and pass back to rc-dropdown.\n    var overlay = props.overlay;\n    var overlayNode;\n\n    if (typeof overlay === 'function') {\n      overlayNode = overlay();\n    } else {\n      overlayNode = overlay;\n    }\n\n    overlayNode = React.Children.only(typeof overlayNode === 'string' ? /*#__PURE__*/React.createElement(\"span\", null, \"overlayNode\") : overlayNode);\n    var overlayProps = overlayNode.props; // Warning if use other mode\n\n    (0, _devWarning[\"default\"])(!overlayProps.mode || overlayProps.mode === 'vertical', 'Dropdown', \"mode=\\\"\".concat(overlayProps.mode, \"\\\" is not supported for Dropdown's Menu.\")); // menu cannot be selectable in dropdown defaultly\n    // menu should be focusable in dropdown defaultly\n\n    var _overlayProps$selecta = overlayProps.selectable,\n        selectable = _overlayProps$selecta === void 0 ? false : _overlayProps$selecta,\n        _overlayProps$focusab = overlayProps.focusable,\n        focusable = _overlayProps$focusab === void 0 ? true : _overlayProps$focusab;\n    var expandIcon = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-menu-submenu-arrow\")\n    }, /*#__PURE__*/React.createElement(_RightOutlined[\"default\"], {\n      className: \"\".concat(prefixCls, \"-menu-submenu-arrow-icon\")\n    }));\n    var fixedModeOverlay = typeof overlayNode.type === 'string' ? overlayNode : (0, _reactNode.cloneElement)(overlayNode, {\n      mode: 'vertical',\n      selectable: selectable,\n      focusable: focusable,\n      expandIcon: expandIcon\n    });\n    return fixedModeOverlay;\n  };\n\n  var getPlacement = function getPlacement() {\n    var placement = props.placement;\n\n    if (placement !== undefined) {\n      return placement;\n    }\n\n    return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n  };\n\n  var arrow = props.arrow,\n      customizePrefixCls = props.prefixCls,\n      children = props.children,\n      trigger = props.trigger,\n      disabled = props.disabled,\n      getPopupContainer = props.getPopupContainer,\n      overlayClassName = props.overlayClassName;\n  var prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n  var child = React.Children.only(children);\n  var dropdownTrigger = (0, _reactNode.cloneElement)(child, {\n    className: (0, _classnames[\"default\"])(child.props.className, \"\".concat(prefixCls, \"-trigger\"), (0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl')),\n    disabled: disabled\n  });\n  var overlayClassNameCustomized = (0, _classnames[\"default\"])(overlayClassName, (0, _defineProperty2[\"default\"])({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n  var triggerActions = disabled ? [] : trigger;\n  var alignPoint;\n\n  if (triggerActions && triggerActions.indexOf('contextMenu') !== -1) {\n    alignPoint = true;\n  }\n\n  return /*#__PURE__*/React.createElement(_rcDropdown[\"default\"], (0, _extends2[\"default\"])({\n    arrow: arrow,\n    alignPoint: alignPoint\n  }, props, {\n    overlayClassName: overlayClassNameCustomized,\n    prefixCls: prefixCls,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    transitionName: getTransitionName(),\n    trigger: triggerActions,\n    overlay: function overlay() {\n      return renderOverlay(prefixCls);\n    },\n    placement: getPlacement()\n  }), dropdownTrigger);\n};\n\nDropdown.Button = _dropdownButton[\"default\"];\nDropdown.defaultProps = {\n  mouseEnterDelay: 0.15,\n  mouseLeaveDelay: 0.1\n};\nvar _default = Dropdown;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}