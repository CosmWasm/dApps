{"ast":null,"code":"import \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport Field from '../field';\nexport const Checkbox = _a => {\n  var {\n    name,\n    validate,\n    fast,\n    onChange\n  } = _a,\n      restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\"]);\n\n  return React.createElement(Field, {\n    name: name,\n    validate: validate,\n    fast: fast\n  }, ({\n    field: {\n      value\n    },\n    form: {\n      setFieldValue,\n      setFieldTouched\n    }\n  }) => React.createElement(_Checkbox, Object.assign({\n    name: name,\n    checked: value,\n    onChange: event => {\n      setFieldValue(name, event.target.checked);\n      setFieldTouched(name, true, false);\n      onChange && onChange(event);\n    }\n  }, restProps)));\n};\nexport default Checkbox;\n\nCheckbox.Group = _a => {\n  var {\n    name,\n    validate,\n    onChange\n  } = _a,\n      restProps = __rest(_a, [\"name\", \"validate\", \"onChange\"]);\n\n  return React.createElement(Field, {\n    name: name,\n    validate: validate\n  }, ({\n    field: {\n      value\n    },\n    form: {\n      setFieldValue,\n      setFieldTouched\n    }\n  }) => React.createElement(_Checkbox.Group, Object.assign({\n    value: value,\n    onChange: value => {\n      setFieldValue(name, value);\n      setFieldTouched(name, true, false);\n      onChange && onChange(value);\n    }\n  }, restProps)));\n};","map":{"version":3,"sources":["../../src/checkbox/index.tsx"],"names":[],"mappings":";;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAGA,OAAO,KAAP,MAAkB,UAAlB;AAOA,OAAO,MAAM,QAAQ,GAAI,EAAD,IAMJ;MANK;AACvB,IAAA,IADuB;AAEvB,IAAA,QAFuB;AAGvB,IAAA,IAHuB;AAIvB,IAAA;AAJuB,MAIf,E;MACR,SAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,UAAA,CAAA,C;;AACmB,SACnB,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,IAAA,IAAI,EAAE,IAAP;AAAa,IAAA,QAAQ,EAAE,QAAvB;AAAiC,IAAA,IAAI,EAAE;AAAvC,GAAN,EACG,CAAC;AACA,IAAA,KAAK,EAAE;AAAE,MAAA;AAAF,KADP;AAEA,IAAA,IAAI,EAAE;AAAE,MAAA,aAAF;AAAiB,MAAA;AAAjB;AAFN,GAAD,KAIC,KAAA,CAAA,aAAA,YAAU,MAAA,CAAA,MAAA,CAAA;AACR,IAAA,IAAI,EAAE,IADE;AAER,IAAA,OAAO,EAAE,KAFD;AAGR,IAAA,QAAQ,EAAG,KAAD,IAAU;AAClB,MAAA,aAAa,CAAC,IAAD,EAAO,KAAK,CAAC,MAAN,CAAa,OAApB,CAAb;AACA,MAAA,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CAAf;AACA,MAAA,QAAQ,IAAI,QAAQ,CAAC,KAAD,CAApB;AACD;AAPO,GAAA,EAQJ,SARI,CAAV,CALJ,CADmB;AAkBpB,CAxBM;AA0BP,eAAe,QAAf;;AAIA,QAAQ,CAAC,KAAT,GAAkB,EAAD,IAKQ;MALP;AAChB,IAAA,IADgB;AAEhB,IAAA,QAFgB;AAGhB,IAAA;AAHgB,MAGR,E;MACR,SAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,C;;AACwB,SACxB,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,IAAA,IAAI,EAAE,IAAP;AAAa,IAAA,QAAQ,EAAE;AAAvB,GAAN,EACG,CAAC;AACA,IAAA,KAAK,EAAE;AAAE,MAAA;AAAF,KADP;AAEA,IAAA,IAAI,EAAE;AAAE,MAAA,aAAF;AAAiB,MAAA;AAAjB;AAFN,GAAD,KAIC,KAAA,CAAA,aAAA,CAAC,UAAU,KAAX,EAAgB,MAAA,CAAA,MAAA,CAAA;AACd,IAAA,KAAK,EAAE,KADO;AAEd,IAAA,QAAQ,EAAG,KAAD,IAAU;AAClB,MAAA,aAAa,CAAC,IAAD,EAAO,KAAP,CAAb;AACA,MAAA,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CAAf;AACA,MAAA,QAAQ,IAAI,QAAQ,CAAC,KAAD,CAApB;AACD;AANa,GAAA,EAOV,SAPU,CAAhB,CALJ,CADwB;AAiBzB,CAtBD","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Checkbox as $Checkbox } from 'antd';\nimport Field from '../field';\nexport const Checkbox = (_a) => {\n    var { name, validate, fast, onChange } = _a, restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\"]);\n    return (React.createElement(Field, { name: name, validate: validate, fast: fast }, ({ field: { value }, form: { setFieldValue, setFieldTouched }, }) => (React.createElement($Checkbox, Object.assign({ name: name, checked: value, onChange: (event) => {\n            setFieldValue(name, event.target.checked);\n            setFieldTouched(name, true, false);\n            onChange && onChange(event);\n        } }, restProps)))));\n};\nexport default Checkbox;\nCheckbox.Group = (_a) => {\n    var { name, validate, onChange } = _a, restProps = __rest(_a, [\"name\", \"validate\", \"onChange\"]);\n    return (React.createElement(Field, { name: name, validate: validate }, ({ field: { value }, form: { setFieldValue, setFieldTouched }, }) => (React.createElement($Checkbox.Group, Object.assign({ value: value, onChange: (value) => {\n            setFieldValue(name, value);\n            setFieldTouched(name, true, false);\n            onChange && onChange(value);\n        } }, restProps)))));\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}