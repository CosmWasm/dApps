{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\nvar _jsxFileName = \"/home/abefernan/cosmwasm/dApps/packages/name-service/src/App/routes/Login/index.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAccount, useSdk } from \"../../../service\";\nimport Center from \"../../../theme/layout/Center\";\nimport Stack from \"../../../theme/layout/Stack\";\nimport Loading from \"../../components/Loading\";\nimport { pathHome } from \"../../paths\";\nimport cosmWasmLogo from \"./assets/cosmWasmLogo.svg\";\nimport \"./Login.less\";\nconst {\n  Title,\n  Text\n} = _Typography;\n\nfunction Login() {\n  const history = useHistory();\n  const state = history.location.state;\n  const sdk = useSdk();\n  const {\n    refreshAccount,\n    account\n  } = useAccount();\n  const [initializing, setInitializing] = useState(false);\n\n  function init() {\n    setInitializing(true);\n    sdk.init();\n  }\n\n  useEffect(() => {\n    if (sdk.initialized) {\n      refreshAccount();\n    }\n  }, [sdk.initialized, refreshAccount]);\n  useEffect(() => {\n    if (account) {\n      if (state) {\n        history.push(state.redirectPathname, state.redirectState);\n      } else {\n        history.push(pathHome);\n      }\n    }\n  }, [sdk.initialized, refreshAccount, state, history]);\n  return initializing ? /*#__PURE__*/React.createElement(Loading, {\n    loadingText: \"Initializing app...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Center, {\n    tag: \"main\",\n    className: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    className: \"MainStack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: cosmWasmLogo,\n    alt: \"CosmWasm logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Stack, {\n    className: \"WelcomeStack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Hello!\"), /*#__PURE__*/React.createElement(Text, {\n    className: \"LightText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Select one of the following options to start:\")), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    onClick: init,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Browser (Demo)\"), /*#__PURE__*/React.createElement(_Button, {\n    disabled: true,\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Keplr (Secure)\"))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/packages/name-service/src/App/routes/Login/index.tsx"],"names":["React","useEffect","useState","useHistory","useAccount","useSdk","Center","Stack","Loading","pathHome","Title","Text","Login","history","state","location","sdk","refreshAccount","account","initializing","setInitializing","init","initialized","push","redirectPathname","redirectState","cosmWasmLogo"],"mappings":"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","sourcesContent":["import { Button, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAccount, useSdk } from \"../../../service\";\nimport Center from \"../../../theme/layout/Center\";\nimport Stack from \"../../../theme/layout/Stack\";\nimport Loading from \"../../components/Loading\";\nimport { RedirectLocation } from \"../../components/ProtectedSwitch\";\nimport { pathHome } from \"../../paths\";\nimport cosmWasmLogo from \"./assets/cosmWasmLogo.svg\";\nimport \"./Login.less\";\n\nconst { Title, Text } = Typography;\n\nfunction Login(): JSX.Element {\n  const history = useHistory();\n  const state = history.location.state as RedirectLocation;\n  const sdk = useSdk();\n  const { refreshAccount, account } = useAccount();\n\n  const [initializing, setInitializing] = useState(false);\n\n  function init() {\n    setInitializing(true);\n    sdk.init();\n  }\n\n  useEffect(() => {\n    if (sdk.initialized) {\n      refreshAccount();\n    }\n  }, [sdk.initialized, refreshAccount]);\n\n  useEffect(() => {\n    if (account) {\n      if (state) {\n        history.push(state.redirectPathname, state.redirectState);\n      } else {\n        history.push(pathHome);\n      }\n    }\n  }, [sdk.initialized, refreshAccount, state, history]);\n\n  return initializing ? (\n    <Loading loadingText=\"Initializing app...\" />\n  ) : (\n    <Center tag=\"main\" className=\"Login\">\n      <Stack className=\"MainStack\">\n        <img src={cosmWasmLogo} alt=\"CosmWasm logo\" />\n        <Stack className=\"WelcomeStack\">\n          <Typography>\n            <Title level={2}>Hello!</Title>\n            <Text className=\"LightText\">Select one of the following options to start:</Text>\n          </Typography>\n          <Button type=\"primary\" onClick={init}>\n            Browser (Demo)\n          </Button>\n          <Button disabled type=\"primary\">\n            Keplr (Secure)\n          </Button>\n        </Stack>\n      </Stack>\n    </Center>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}