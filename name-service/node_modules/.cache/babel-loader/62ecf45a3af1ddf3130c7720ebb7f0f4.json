{"ast":null,"code":"import\"antd/lib/button/style\";import _Button from\"antd/lib/button\";import\"antd/lib/typography/style\";import _Typography from\"antd/lib/typography\";import React,{useEffect,useState}from\"react\";import{useHistory}from\"react-router-dom\";import{useAccount,useSdk}from\"../../../service\";import Center from\"../../../theme/layout/Center\";import Stack from\"../../../theme/layout/Stack\";import Loading from\"../../components/Loading\";import{pathHome}from\"../../paths\";import cosmWasmLogo from\"./assets/cosmWasmLogo.svg\";import\"./Login.less\";const{Title,Text}=_Typography;function Login(){const history=useHistory();const state=history.location.state;const sdk=useSdk();const{refreshAccount,account}=useAccount();const[initializing,setInitializing]=useState(false);function init(){setInitializing(true);sdk.init();}useEffect(()=>{if(sdk.initialized){refreshAccount();}},[sdk.initialized,refreshAccount]);useEffect(()=>{if(account){if(state){history.push(state.redirectPathname,state.redirectState);}else{history.push(pathHome);}}},[account,state,history]);return initializing?/*#__PURE__*/React.createElement(Loading,{loadingText:\"Initializing app...\"}):/*#__PURE__*/React.createElement(Center,{tag:\"main\",className:\"Login\"},/*#__PURE__*/React.createElement(Stack,{className:\"MainStack\"},/*#__PURE__*/React.createElement(\"img\",{src:cosmWasmLogo,alt:\"CosmWasm logo\"}),/*#__PURE__*/React.createElement(Stack,{className:\"WelcomeStack\"},/*#__PURE__*/React.createElement(_Typography,null,/*#__PURE__*/React.createElement(Title,{level:2},\"Hello!\"),/*#__PURE__*/React.createElement(Text,{className:\"LightText\"},\"Select one of the following options to start:\")),/*#__PURE__*/React.createElement(_Button,{type:\"primary\",onClick:init},\"Browser (Demo)\"),/*#__PURE__*/React.createElement(_Button,{disabled:true,type:\"primary\"},\"Keplr (Secure)\"))));}export default Login;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/packages/name-service/src/App/routes/Login/index.tsx"],"names":["React","useEffect","useState","useHistory","useAccount","useSdk","Center","Stack","Loading","pathHome","Title","Text","Login","history","state","location","sdk","refreshAccount","account","initializing","setInitializing","init","initialized","push","redirectPathname","redirectState","cosmWasmLogo"],"mappings":"kJACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,UAAT,CAAqBC,MAArB,KAAmC,kBAAnC,CACA,MAAOC,CAAAA,MAAP,KAAmB,8BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,6BAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CAEA,OAASC,QAAT,KAAyB,aAAzB,C,oDAEA,MAAO,cAAP,CAEA,KAAM,CAAEC,KAAF,CAASC,IAAT,aAAN,CAEA,QAASC,CAAAA,KAAT,EAA8B,CAC5B,KAAMC,CAAAA,OAAO,CAAGV,UAAU,EAA1B,CACA,KAAMW,CAAAA,KAAK,CAAGD,OAAO,CAACE,QAAR,CAAiBD,KAA/B,CACA,KAAME,CAAAA,GAAG,CAAGX,MAAM,EAAlB,CACA,KAAM,CAAEY,cAAF,CAAkBC,OAAlB,EAA8Bd,UAAU,EAA9C,CAEA,KAAM,CAACe,YAAD,CAAeC,eAAf,EAAkClB,QAAQ,CAAC,KAAD,CAAhD,CAEA,QAASmB,CAAAA,IAAT,EAAgB,CACdD,eAAe,CAAC,IAAD,CAAf,CACAJ,GAAG,CAACK,IAAJ,GACD,CAEDpB,SAAS,CAAC,IAAM,CACd,GAAIe,GAAG,CAACM,WAAR,CAAqB,CACnBL,cAAc,GACf,CACF,CAJQ,CAIN,CAACD,GAAG,CAACM,WAAL,CAAkBL,cAAlB,CAJM,CAAT,CAMAhB,SAAS,CAAC,IAAM,CACd,GAAIiB,OAAJ,CAAa,CACX,GAAIJ,KAAJ,CAAW,CACTD,OAAO,CAACU,IAAR,CAAaT,KAAK,CAACU,gBAAnB,CAAqCV,KAAK,CAACW,aAA3C,EACD,CAFD,IAEO,CACLZ,OAAO,CAACU,IAAR,CAAad,QAAb,EACD,CACF,CACF,CARQ,CAQN,CAACS,OAAD,CAAUJ,KAAV,CAAiBD,OAAjB,CARM,CAAT,CAUA,MAAOM,CAAAA,YAAY,cACjB,oBAAC,OAAD,EAAS,WAAW,CAAC,qBAArB,EADiB,cAGjB,oBAAC,MAAD,EAAQ,GAAG,CAAC,MAAZ,CAAmB,SAAS,CAAC,OAA7B,eACE,oBAAC,KAAD,EAAO,SAAS,CAAC,WAAjB,eACE,2BAAK,GAAG,CAAEO,YAAV,CAAwB,GAAG,CAAC,eAA5B,EADF,cAEE,oBAAC,KAAD,EAAO,SAAS,CAAC,cAAjB,eACE,kDACE,oBAAC,KAAD,EAAO,KAAK,CAAE,CAAd,WADF,cAEE,oBAAC,IAAD,EAAM,SAAS,CAAC,WAAhB,kDAFF,CADF,cAKE,6BAAQ,IAAI,CAAC,SAAb,CAAuB,OAAO,CAAEL,IAAhC,mBALF,cAQE,6BAAQ,QAAQ,KAAhB,CAAiB,IAAI,CAAC,SAAtB,mBARF,CAFF,CADF,CAHF,CAqBD,CAED,cAAeT,CAAAA,KAAf","sourcesContent":["import { Button, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAccount, useSdk } from \"../../../service\";\nimport Center from \"../../../theme/layout/Center\";\nimport Stack from \"../../../theme/layout/Stack\";\nimport Loading from \"../../components/Loading\";\nimport { RedirectLocation } from \"../../components/ProtectedSwitch\";\nimport { pathHome } from \"../../paths\";\nimport cosmWasmLogo from \"./assets/cosmWasmLogo.svg\";\nimport \"./Login.less\";\n\nconst { Title, Text } = Typography;\n\nfunction Login(): JSX.Element {\n  const history = useHistory();\n  const state = history.location.state as RedirectLocation;\n  const sdk = useSdk();\n  const { refreshAccount, account } = useAccount();\n\n  const [initializing, setInitializing] = useState(false);\n\n  function init() {\n    setInitializing(true);\n    sdk.init();\n  }\n\n  useEffect(() => {\n    if (sdk.initialized) {\n      refreshAccount();\n    }\n  }, [sdk.initialized, refreshAccount]);\n\n  useEffect(() => {\n    if (account) {\n      if (state) {\n        history.push(state.redirectPathname, state.redirectState);\n      } else {\n        history.push(pathHome);\n      }\n    }\n  }, [account, state, history]);\n\n  return initializing ? (\n    <Loading loadingText=\"Initializing app...\" />\n  ) : (\n    <Center tag=\"main\" className=\"Login\">\n      <Stack className=\"MainStack\">\n        <img src={cosmWasmLogo} alt=\"CosmWasm logo\" />\n        <Stack className=\"WelcomeStack\">\n          <Typography>\n            <Title level={2}>Hello!</Title>\n            <Text className=\"LightText\">Select one of the following options to start:</Text>\n          </Typography>\n          <Button type=\"primary\" onClick={init}>\n            Browser (Demo)\n          </Button>\n          <Button disabled type=\"primary\">\n            Keplr (Secure)\n          </Button>\n        </Stack>\n      </Stack>\n    </Center>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}