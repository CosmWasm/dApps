{"ast":null,"code":"function isElement(el) {\n  return el != null && typeof el === 'object' && el.nodeType === 1;\n}\n\nfunction canOverflow(overflow, skipOverflowHiddenElements) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false;\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip';\n}\n\nfunction getFrameElement(el) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null;\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction isHiddenByFrame(el) {\n  var frame = getFrameElement(el);\n\n  if (!frame) {\n    return false;\n  }\n\n  return frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth;\n}\n\nfunction isScrollable(el, skipOverflowHiddenElements) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    var style = getComputedStyle(el, null);\n    return canOverflow(style.overflowY, skipOverflowHiddenElements) || canOverflow(style.overflowX, skipOverflowHiddenElements) || isHiddenByFrame(el);\n  }\n\n  return false;\n}\n\nfunction alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n  if (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd || elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd) {\n    return 0;\n  }\n\n  if (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize || elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n  }\n\n  if (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize || elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n  }\n\n  return 0;\n}\n\nexport default (function (target, options) {\n  var scrollMode = options.scrollMode,\n      block = options.block,\n      inline = options.inline,\n      boundary = options.boundary,\n      skipOverflowHiddenElements = options.skipOverflowHiddenElements;\n  var checkBoundary = typeof boundary === 'function' ? boundary : function (node) {\n    return node !== boundary;\n  };\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target');\n  }\n\n  var scrollingElement = document.scrollingElement || document.documentElement;\n  var frames = [];\n  var cursor = target;\n\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    cursor = cursor.parentNode;\n\n    if (cursor === scrollingElement) {\n      frames.push(cursor);\n      break;\n    }\n\n    if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n      continue;\n    }\n\n    if (isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor);\n    }\n  }\n\n  var viewportWidth = window.visualViewport ? visualViewport.width : innerWidth;\n  var viewportHeight = window.visualViewport ? visualViewport.height : innerHeight;\n  var viewportX = window.scrollX || pageXOffset;\n  var viewportY = window.scrollY || pageYOffset;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      targetHeight = _target$getBoundingCl.height,\n      targetWidth = _target$getBoundingCl.width,\n      targetTop = _target$getBoundingCl.top,\n      targetRight = _target$getBoundingCl.right,\n      targetBottom = _target$getBoundingCl.bottom,\n      targetLeft = _target$getBoundingCl.left;\n\n  var targetBlock = block === 'start' || block === 'nearest' ? targetTop : block === 'end' ? targetBottom : targetTop + targetHeight / 2;\n  var targetInline = inline === 'center' ? targetLeft + targetWidth / 2 : inline === 'end' ? targetRight : targetLeft;\n  var computations = [];\n\n  for (var index = 0; index < frames.length; index++) {\n    var frame = frames[index];\n\n    var _frame$getBoundingCli = frame.getBoundingClientRect(),\n        height = _frame$getBoundingCli.height,\n        width = _frame$getBoundingCli.width,\n        top = _frame$getBoundingCli.top,\n        right = _frame$getBoundingCli.right,\n        bottom = _frame$getBoundingCli.bottom,\n        left = _frame$getBoundingCli.left;\n\n    if (scrollMode === 'if-needed' && targetTop >= 0 && targetLeft >= 0 && targetBottom <= viewportHeight && targetRight <= viewportWidth && targetTop >= top && targetBottom <= bottom && targetLeft >= left && targetRight <= right) {\n      return computations;\n    }\n\n    var frameStyle = getComputedStyle(frame);\n    var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n    var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n    var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n    var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n    var blockScroll = 0;\n    var inlineScroll = 0;\n    var scrollbarWidth = 'offsetWidth' in frame ? frame.offsetWidth - frame.clientWidth - borderLeft - borderRight : 0;\n    var scrollbarHeight = 'offsetHeight' in frame ? frame.offsetHeight - frame.clientHeight - borderTop - borderBottom : 0;\n\n    if (scrollingElement === frame) {\n      if (block === 'start') {\n        blockScroll = targetBlock;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - viewportHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth;\n      } else {\n        inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n      }\n\n      blockScroll = Math.max(0, blockScroll + viewportY);\n      inlineScroll = Math.max(0, inlineScroll + viewportX);\n    } else {\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(top, bottom, height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n      } else {\n        inlineScroll = alignNearest(left, right, width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n      }\n\n      var scrollLeft = frame.scrollLeft,\n          scrollTop = frame.scrollTop;\n      blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - height + scrollbarHeight));\n      inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - width + scrollbarWidth));\n      targetBlock += scrollTop - blockScroll;\n      targetInline += scrollLeft - inlineScroll;\n    }\n\n    computations.push({\n      el: frame,\n      top: blockScroll,\n      left: inlineScroll\n    });\n  }\n\n  return computations;\n});","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/compute-scroll-into-view/es/index.js"],"names":["isElement","el","nodeType","canOverflow","overflow","skipOverflowHiddenElements","getFrameElement","ownerDocument","defaultView","frameElement","e","isHiddenByFrame","frame","clientHeight","scrollHeight","clientWidth","scrollWidth","isScrollable","style","getComputedStyle","overflowY","overflowX","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","target","options","scrollMode","block","inline","boundary","checkBoundary","node","TypeError","scrollingElement","document","documentElement","frames","cursor","parentNode","push","body","viewportWidth","window","visualViewport","width","innerWidth","viewportHeight","height","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","_target$getBoundingCl","getBoundingClientRect","targetHeight","targetWidth","targetTop","top","targetRight","right","targetBottom","bottom","targetLeft","left","targetBlock","targetInline","computations","index","length","_frame$getBoundingCli","frameStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","Math","max","scrollLeft","scrollTop","min"],"mappings":"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","sourcesContent":["function isElement(el) {\n  return el != null && typeof el === 'object' && el.nodeType === 1;\n}\n\nfunction canOverflow(overflow, skipOverflowHiddenElements) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false;\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip';\n}\n\nfunction getFrameElement(el) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null;\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction isHiddenByFrame(el) {\n  var frame = getFrameElement(el);\n\n  if (!frame) {\n    return false;\n  }\n\n  return frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth;\n}\n\nfunction isScrollable(el, skipOverflowHiddenElements) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    var style = getComputedStyle(el, null);\n    return canOverflow(style.overflowY, skipOverflowHiddenElements) || canOverflow(style.overflowX, skipOverflowHiddenElements) || isHiddenByFrame(el);\n  }\n\n  return false;\n}\n\nfunction alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n  if (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd || elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd) {\n    return 0;\n  }\n\n  if (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize || elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n  }\n\n  if (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize || elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n  }\n\n  return 0;\n}\n\nexport default (function (target, options) {\n  var scrollMode = options.scrollMode,\n      block = options.block,\n      inline = options.inline,\n      boundary = options.boundary,\n      skipOverflowHiddenElements = options.skipOverflowHiddenElements;\n  var checkBoundary = typeof boundary === 'function' ? boundary : function (node) {\n    return node !== boundary;\n  };\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target');\n  }\n\n  var scrollingElement = document.scrollingElement || document.documentElement;\n  var frames = [];\n  var cursor = target;\n\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    cursor = cursor.parentNode;\n\n    if (cursor === scrollingElement) {\n      frames.push(cursor);\n      break;\n    }\n\n    if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n      continue;\n    }\n\n    if (isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor);\n    }\n  }\n\n  var viewportWidth = window.visualViewport ? visualViewport.width : innerWidth;\n  var viewportHeight = window.visualViewport ? visualViewport.height : innerHeight;\n  var viewportX = window.scrollX || pageXOffset;\n  var viewportY = window.scrollY || pageYOffset;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      targetHeight = _target$getBoundingCl.height,\n      targetWidth = _target$getBoundingCl.width,\n      targetTop = _target$getBoundingCl.top,\n      targetRight = _target$getBoundingCl.right,\n      targetBottom = _target$getBoundingCl.bottom,\n      targetLeft = _target$getBoundingCl.left;\n\n  var targetBlock = block === 'start' || block === 'nearest' ? targetTop : block === 'end' ? targetBottom : targetTop + targetHeight / 2;\n  var targetInline = inline === 'center' ? targetLeft + targetWidth / 2 : inline === 'end' ? targetRight : targetLeft;\n  var computations = [];\n\n  for (var index = 0; index < frames.length; index++) {\n    var frame = frames[index];\n\n    var _frame$getBoundingCli = frame.getBoundingClientRect(),\n        height = _frame$getBoundingCli.height,\n        width = _frame$getBoundingCli.width,\n        top = _frame$getBoundingCli.top,\n        right = _frame$getBoundingCli.right,\n        bottom = _frame$getBoundingCli.bottom,\n        left = _frame$getBoundingCli.left;\n\n    if (scrollMode === 'if-needed' && targetTop >= 0 && targetLeft >= 0 && targetBottom <= viewportHeight && targetRight <= viewportWidth && targetTop >= top && targetBottom <= bottom && targetLeft >= left && targetRight <= right) {\n      return computations;\n    }\n\n    var frameStyle = getComputedStyle(frame);\n    var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n    var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n    var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n    var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n    var blockScroll = 0;\n    var inlineScroll = 0;\n    var scrollbarWidth = 'offsetWidth' in frame ? frame.offsetWidth - frame.clientWidth - borderLeft - borderRight : 0;\n    var scrollbarHeight = 'offsetHeight' in frame ? frame.offsetHeight - frame.clientHeight - borderTop - borderBottom : 0;\n\n    if (scrollingElement === frame) {\n      if (block === 'start') {\n        blockScroll = targetBlock;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - viewportHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth;\n      } else {\n        inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n      }\n\n      blockScroll = Math.max(0, blockScroll + viewportY);\n      inlineScroll = Math.max(0, inlineScroll + viewportX);\n    } else {\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(top, bottom, height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n      } else {\n        inlineScroll = alignNearest(left, right, width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n      }\n\n      var scrollLeft = frame.scrollLeft,\n          scrollTop = frame.scrollTop;\n      blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - height + scrollbarHeight));\n      inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - width + scrollbarWidth));\n      targetBlock += scrollTop - blockScroll;\n      targetInline += scrollLeft - inlineScroll;\n    }\n\n    computations.push({\n      el: frame,\n      top: blockScroll,\n      left: inlineScroll\n    });\n  }\n\n  return computations;\n});"]},"metadata":{},"sourceType":"module"}