{"ast":null,"code":"import has from \"lodash-es/has\";\nimport toposort from 'toposort';\nimport { split } from 'property-expr';\nimport Ref from '../Reference';\nimport isSchema from './isSchema';\nexport default function sortFields(fields, excludes) {\n  if (excludes === void 0) {\n    excludes = [];\n  }\n\n  var edges = [],\n      nodes = [];\n\n  function addNode(depPath, key) {\n    var node = split(depPath)[0];\n    if (!~nodes.indexOf(node)) nodes.push(node);\n    if (!~excludes.indexOf(key + \"-\" + node)) edges.push([key, node]);\n  }\n\n  for (var key in fields) {\n    if (has(fields, key)) {\n      var value = fields[key];\n      if (!~nodes.indexOf(key)) nodes.push(key);\n      if (Ref.isRef(value) && value.isSibling) addNode(value.path, key);else if (isSchema(value) && value._deps) value._deps.forEach(function (path) {\n        return addNode(path, key);\n      });\n    }\n  }\n\n  return toposort.array(nodes, edges).reverse();\n}","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/yup/es/util/sortFields.js"],"names":["has","toposort","split","Ref","isSchema","sortFields","fields","excludes","edges","nodes","addNode","depPath","key","node","indexOf","push","value","isRef","isSibling","path","_deps","forEach","array","reverse"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,eAAhB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,eAAe,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,QAA5B,EAAsC;AACnD,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACvBA,IAAAA,QAAQ,GAAG,EAAX;AACD;;AAED,MAAIC,KAAK,GAAG,EAAZ;AAAA,MACIC,KAAK,GAAG,EADZ;;AAGA,WAASC,OAAT,CAAiBC,OAAjB,EAA0BC,GAA1B,EAA+B;AAC7B,QAAIC,IAAI,GAAGX,KAAK,CAACS,OAAD,CAAL,CAAe,CAAf,CAAX;AACA,QAAI,CAAC,CAACF,KAAK,CAACK,OAAN,CAAcD,IAAd,CAAN,EAA2BJ,KAAK,CAACM,IAAN,CAAWF,IAAX;AAC3B,QAAI,CAAC,CAACN,QAAQ,CAACO,OAAT,CAAiBF,GAAG,GAAG,GAAN,GAAYC,IAA7B,CAAN,EAA0CL,KAAK,CAACO,IAAN,CAAW,CAACH,GAAD,EAAMC,IAAN,CAAX;AAC3C;;AAED,OAAK,IAAID,GAAT,IAAgBN,MAAhB,EAAwB;AACtB,QAAIN,GAAG,CAACM,MAAD,EAASM,GAAT,CAAP,EAAsB;AACpB,UAAII,KAAK,GAAGV,MAAM,CAACM,GAAD,CAAlB;AACA,UAAI,CAAC,CAACH,KAAK,CAACK,OAAN,CAAcF,GAAd,CAAN,EAA0BH,KAAK,CAACM,IAAN,CAAWH,GAAX;AAC1B,UAAIT,GAAG,CAACc,KAAJ,CAAUD,KAAV,KAAoBA,KAAK,CAACE,SAA9B,EAAyCR,OAAO,CAACM,KAAK,CAACG,IAAP,EAAaP,GAAb,CAAP,CAAzC,KAAuE,IAAIR,QAAQ,CAACY,KAAD,CAAR,IAAmBA,KAAK,CAACI,KAA7B,EAAoCJ,KAAK,CAACI,KAAN,CAAYC,OAAZ,CAAoB,UAAUF,IAAV,EAAgB;AAC7I,eAAOT,OAAO,CAACS,IAAD,EAAOP,GAAP,CAAd;AACD,OAF0G;AAG5G;AACF;;AAED,SAAOX,QAAQ,CAACqB,KAAT,CAAeb,KAAf,EAAsBD,KAAtB,EAA6Be,OAA7B,EAAP;AACD","sourcesContent":["import has from \"lodash-es/has\";\nimport toposort from 'toposort';\nimport { split } from 'property-expr';\nimport Ref from '../Reference';\nimport isSchema from './isSchema';\nexport default function sortFields(fields, excludes) {\n  if (excludes === void 0) {\n    excludes = [];\n  }\n\n  var edges = [],\n      nodes = [];\n\n  function addNode(depPath, key) {\n    var node = split(depPath)[0];\n    if (!~nodes.indexOf(node)) nodes.push(node);\n    if (!~excludes.indexOf(key + \"-\" + node)) edges.push([key, node]);\n  }\n\n  for (var key in fields) {\n    if (has(fields, key)) {\n      var value = fields[key];\n      if (!~nodes.indexOf(key)) nodes.push(key);\n      if (Ref.isRef(value) && value.isSibling) addNode(value.path, key);else if (isSchema(value) && value._deps) value._deps.forEach(function (path) {\n        return addNode(path, key);\n      });\n    }\n  }\n\n  return toposort.array(nodes, edges).reverse();\n}"]},"metadata":{},"sourceType":"module"}