{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrDel = arrDel;\nexports.arrAdd = arrAdd;\nexports.posToArr = posToArr;\nexports.getPosition = getPosition;\nexports.isTreeNode = isTreeNode;\nexports.getDragNodesKeys = getDragNodesKeys;\nexports.calcDropPosition = calcDropPosition;\nexports.calcSelectedKeys = calcSelectedKeys;\nexports.convertDataToTree = convertDataToTree;\nexports.parseCheckedKeys = parseCheckedKeys;\nexports.conductExpandParent = conductExpandParent;\nexports.getDataAndAria = getDataAndAria;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _TreeNode = _interopRequireDefault(require(\"./TreeNode\"));\n/**\n * Legacy code. Should avoid to use if you are new to import these code.\n */\n\n\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\n\nfunction arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\n\nfunction arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\n\nfunction posToArr(pos) {\n  return pos.split('-');\n}\n\nfunction getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\n\nfunction isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\n\nfunction getDragNodesKeys(dragNodeKey, keyEntities) {\n  var dragNodesKeys = [dragNodeKey];\n  var entity = keyEntities[dragNodeKey];\n\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n          children = _ref.children;\n      dragNodesKeys.push(key);\n      dig(children);\n    });\n  }\n\n  dig(entity.children);\n  return dragNodesKeys;\n} // Only used when drag, not affect SSR.\n\n\nfunction calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n\n  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(),\n      top = _treeNode$selectHandl.top,\n      bottom = _treeNode$selectHandl.bottom,\n      height = _treeNode$selectHandl.height;\n\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n\n  if (clientY <= top + des) {\n    return -1;\n  }\n\n  if (clientY >= bottom - des) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\n\nfunction calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nfunction convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref2 = processor || {},\n      _ref2$processProps = _ref2.processProps,\n      processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n        props = (0, _objectWithoutProperties2.default)(_ref3, [\"children\"]);\n    var childrenNodes = convertDataToTree(children, processor);\n    return _react.default.createElement(_TreeNode.default, Object.assign({}, processProps(props)), childrenNodes);\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\n\nfunction parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((0, _typeof2.default)(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    (0, _warning.default)(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\n\nfunction conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return (0, _toConsumableArray2.default)(expandedKeys);\n}\n/**\n * Returns only the data- and aria- key/value pairs\n */\n\n\nfunction getDataAndAria(props) {\n  var omitProps = {};\n  Object.keys(props).forEach(function (key) {\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      omitProps[key] = props[key];\n    }\n  });\n  return omitProps;\n}","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/rc-tree/lib/util.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","arrDel","arrAdd","posToArr","getPosition","isTreeNode","getDragNodesKeys","calcDropPosition","calcSelectedKeys","convertDataToTree","parseCheckedKeys","conductExpandParent","getDataAndAria","_toConsumableArray2","_typeof2","_objectWithoutProperties2","_react","_warning","_TreeNode","DRAG_SIDE_RANGE","DRAG_MIN_GAP","list","clone","slice","index","indexOf","splice","push","pos","split","level","concat","node","type","dragNodeKey","keyEntities","dragNodesKeys","entity","dig","arguments","length","undefined","forEach","_ref","key","children","event","treeNode","clientY","_treeNode$selectHandl","selectHandle","getBoundingClientRect","top","bottom","height","des","Math","max","selectedKeys","props","multiple","internalProcessProps","treeData","processor","_ref2","_ref2$processProps","processProps","Array","isArray","map","_ref3","default","childrenNodes","createElement","assign","keys","keyProps","checkedKeys","halfCheckedKeys","checked","halfChecked","keyList","expandedKeys","Set","conductUp","has","add","parent","disabled","omitProps","startsWith"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrDel = arrDel;\nexports.arrAdd = arrAdd;\nexports.posToArr = posToArr;\nexports.getPosition = getPosition;\nexports.isTreeNode = isTreeNode;\nexports.getDragNodesKeys = getDragNodesKeys;\nexports.calcDropPosition = calcDropPosition;\nexports.calcSelectedKeys = calcSelectedKeys;\nexports.convertDataToTree = convertDataToTree;\nexports.parseCheckedKeys = parseCheckedKeys;\nexports.conductExpandParent = conductExpandParent;\nexports.getDataAndAria = getDataAndAria;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _TreeNode = _interopRequireDefault(require(\"./TreeNode\"));\n\n/**\n * Legacy code. Should avoid to use if you are new to import these code.\n */\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\n\nfunction arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\n\nfunction arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\n\nfunction posToArr(pos) {\n  return pos.split('-');\n}\n\nfunction getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\n\nfunction isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\n\nfunction getDragNodesKeys(dragNodeKey, keyEntities) {\n  var dragNodesKeys = [dragNodeKey];\n  var entity = keyEntities[dragNodeKey];\n\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n          children = _ref.children;\n      dragNodesKeys.push(key);\n      dig(children);\n    });\n  }\n\n  dig(entity.children);\n  return dragNodesKeys;\n} // Only used when drag, not affect SSR.\n\n\nfunction calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n\n  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(),\n      top = _treeNode$selectHandl.top,\n      bottom = _treeNode$selectHandl.bottom,\n      height = _treeNode$selectHandl.height;\n\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n\n  if (clientY <= top + des) {\n    return -1;\n  }\n\n  if (clientY >= bottom - des) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\n\nfunction calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nfunction convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref2 = processor || {},\n      _ref2$processProps = _ref2.processProps,\n      processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n        props = (0, _objectWithoutProperties2.default)(_ref3, [\"children\"]);\n    var childrenNodes = convertDataToTree(children, processor);\n    return _react.default.createElement(_TreeNode.default, Object.assign({}, processProps(props)), childrenNodes);\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\n\nfunction parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((0, _typeof2.default)(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    (0, _warning.default)(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\n\nfunction conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return (0, _toConsumableArray2.default)(expandedKeys);\n}\n/**\n * Returns only the data- and aria- key/value pairs\n */\n\n\nfunction getDataAndAria(props) {\n  var omitProps = {};\n  Object.keys(props).forEach(function (key) {\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      omitProps[key] = props[key];\n    }\n  });\n  return omitProps;\n}"]},"metadata":{},"sourceType":"script"}