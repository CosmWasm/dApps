{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\n\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\n\nvar Tree =\n/** @class */\nfunction () {\n  var Tree = /*#__PURE__*/function (_React$Component) {\n    _inherits(Tree, _React$Component);\n\n    var _super = _createSuper(Tree);\n\n    function Tree() {\n      var _this;\n\n      _classCallCheck(this, Tree);\n\n      _this = _super.apply(this, arguments);\n      _this.state = {\n        keyEntities: {},\n        selectedKeys: [],\n        checkedKeys: [],\n        halfCheckedKeys: [],\n        loadedKeys: [],\n        loadingKeys: [],\n        expandedKeys: [],\n        dragging: false,\n        dragNodesKeys: [],\n        dragOverNodeKey: null,\n        dropPosition: null,\n        treeData: [],\n        flattenNodes: [],\n        focused: false,\n        activeKey: null,\n        listChanging: false,\n        prevProps: null\n      };\n      _this.listRef = React.createRef();\n\n      _this.onNodeDragStart = function (event, node) {\n        var _this$state = _this.state,\n            expandedKeys = _this$state.expandedKeys,\n            keyEntities = _this$state.keyEntities;\n        var onDragStart = _this.props.onDragStart;\n        var eventKey = node.props.eventKey;\n        _this.dragNode = node;\n        var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n        _this.setState({\n          dragging: true,\n          dragNodesKeys: getDragNodesKeys(eventKey, keyEntities)\n        });\n\n        _this.setExpandedKeys(newExpandedKeys);\n\n        if (onDragStart) {\n          onDragStart({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n      /**\n       * [Legacy] Select handler is less small than node,\n       * so that this will trigger when drag enter node or select handler.\n       * This is a little tricky if customize css without padding.\n       * Better for use mouse move event to refresh drag state.\n       * But let's just keep it to avoid event trigger logic change.\n       */\n\n\n      _this.onNodeDragEnter = function (event, node) {\n        var _this$state2 = _this.state,\n            expandedKeys = _this$state2.expandedKeys,\n            keyEntities = _this$state2.keyEntities,\n            dragNodesKeys = _this$state2.dragNodesKeys;\n        var onDragEnter = _this.props.onDragEnter;\n        var _node$props = node.props,\n            pos = _node$props.pos,\n            eventKey = _node$props.eventKey;\n        if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n        var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n        if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n          _this.setState({\n            dragOverNodeKey: '',\n            dropPosition: null\n          });\n\n          return;\n        } // Ref: https://github.com/react-component/tree/issues/132\n        // Add timeout to let onDragLevel fire before onDragEnter,\n        // so that we can clean drag props for onDragLeave node.\n        // Macro task for this:\n        // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n        setTimeout(function () {\n          // Update drag over node\n          _this.setState({\n            dragOverNodeKey: eventKey,\n            dropPosition: dropPosition\n          }); // Side effect for delay drag\n\n\n          if (!_this.delayedDragEnterLogic) {\n            _this.delayedDragEnterLogic = {};\n          }\n\n          Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n            clearTimeout(_this.delayedDragEnterLogic[key]);\n          });\n          _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n            if (!_this.state.dragging) return;\n\n            var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n            var entity = keyEntities[eventKey];\n\n            if (entity && (entity.children || []).length) {\n              newExpandedKeys = arrAdd(expandedKeys, eventKey);\n            }\n\n            if (!('expandedKeys' in _this.props)) {\n              _this.setExpandedKeys(newExpandedKeys);\n            }\n\n            if (onDragEnter) {\n              onDragEnter({\n                event: event,\n                node: convertNodePropsToEventData(node.props),\n                expandedKeys: newExpandedKeys\n              });\n            }\n          }, 400);\n        }, 0);\n      };\n\n      _this.onNodeDragOver = function (event, node) {\n        var dragNodesKeys = _this.state.dragNodesKeys;\n        var onDragOver = _this.props.onDragOver;\n        var eventKey = node.props.eventKey;\n\n        if (dragNodesKeys.indexOf(eventKey) !== -1) {\n          return;\n        } // Update drag position\n\n\n        if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n          var dropPosition = calcDropPosition(event, node);\n          if (dropPosition === _this.state.dropPosition) return;\n\n          _this.setState({\n            dropPosition: dropPosition\n          });\n        }\n\n        if (onDragOver) {\n          onDragOver({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n\n      _this.onNodeDragLeave = function (event, node) {\n        var onDragLeave = _this.props.onDragLeave;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        if (onDragLeave) {\n          onDragLeave({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n\n      _this.onNodeDragEnd = function (event, node) {\n        var onDragEnd = _this.props.onDragEnd;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        _this.cleanDragState();\n\n        if (onDragEnd) {\n          onDragEnd({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n\n        _this.dragNode = null;\n      };\n\n      _this.onNodeDrop = function (event, node) {\n        var _this$state3 = _this.state,\n            _this$state3$dragNode = _this$state3.dragNodesKeys,\n            dragNodesKeys = _this$state3$dragNode === void 0 ? [] : _this$state3$dragNode,\n            dropPosition = _this$state3.dropPosition;\n        var onDrop = _this.props.onDrop;\n        var _node$props2 = node.props,\n            eventKey = _node$props2.eventKey,\n            pos = _node$props2.pos;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        _this.cleanDragState();\n\n        if (dragNodesKeys.indexOf(eventKey) !== -1) {\n          warning(false, \"Can not drop to dragNode(include it's children node)\");\n          return;\n        }\n\n        var posArr = posToArr(pos);\n        var dropResult = {\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n          dragNodesKeys: dragNodesKeys.slice(),\n          dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n          dropToGap: false\n        };\n\n        if (dropPosition !== 0) {\n          dropResult.dropToGap = true;\n        }\n\n        if (onDrop) {\n          onDrop(dropResult);\n        }\n\n        _this.dragNode = null;\n      };\n\n      _this.cleanDragState = function () {\n        var dragging = _this.state.dragging;\n\n        if (dragging) {\n          _this.setState({\n            dragging: false\n          });\n        }\n      };\n\n      _this.onNodeClick = function (e, treeNode) {\n        var onClick = _this.props.onClick;\n\n        if (onClick) {\n          onClick(e, treeNode);\n        }\n      };\n\n      _this.onNodeDoubleClick = function (e, treeNode) {\n        var onDoubleClick = _this.props.onDoubleClick;\n\n        if (onDoubleClick) {\n          onDoubleClick(e, treeNode);\n        }\n      };\n\n      _this.onNodeSelect = function (e, treeNode) {\n        var selectedKeys = _this.state.selectedKeys;\n        var keyEntities = _this.state.keyEntities;\n        var _this$props = _this.props,\n            onSelect = _this$props.onSelect,\n            multiple = _this$props.multiple;\n        var selected = treeNode.selected,\n            key = treeNode.key;\n        var targetSelected = !selected; // Update selected keys\n\n        if (!targetSelected) {\n          selectedKeys = arrDel(selectedKeys, key);\n        } else if (!multiple) {\n          selectedKeys = [key];\n        } else {\n          selectedKeys = arrAdd(selectedKeys, key);\n        } // [Legacy] Not found related usage in doc or upper libs\n\n\n        var selectedNodes = selectedKeys.map(function (selectedKey) {\n          var entity = keyEntities[selectedKey];\n          if (!entity) return null;\n          return entity.node;\n        }).filter(function (node) {\n          return node;\n        });\n\n        _this.setUncontrolledState({\n          selectedKeys: selectedKeys\n        });\n\n        if (onSelect) {\n          onSelect(selectedKeys, {\n            event: 'select',\n            selected: targetSelected,\n            node: treeNode,\n            selectedNodes: selectedNodes,\n            nativeEvent: e.nativeEvent\n          });\n        }\n      };\n\n      _this.onNodeCheck = function (e, treeNode, checked) {\n        var _this$state4 = _this.state,\n            keyEntities = _this$state4.keyEntities,\n            oriCheckedKeys = _this$state4.checkedKeys,\n            oriHalfCheckedKeys = _this$state4.halfCheckedKeys;\n        var _this$props2 = _this.props,\n            checkStrictly = _this$props2.checkStrictly,\n            onCheck = _this$props2.onCheck;\n        var key = treeNode.key; // Prepare trigger arguments\n\n        var checkedObj;\n        var eventObj = {\n          event: 'check',\n          node: treeNode,\n          checked: checked,\n          nativeEvent: e.nativeEvent\n        };\n\n        if (checkStrictly) {\n          var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n          var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n          checkedObj = {\n            checked: checkedKeys,\n            halfChecked: halfCheckedKeys\n          };\n          eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n            return keyEntities[checkedKey];\n          }).filter(function (entity) {\n            return entity;\n          }).map(function (entity) {\n            return entity.node;\n          });\n\n          _this.setUncontrolledState({\n            checkedKeys: checkedKeys\n          });\n        } else {\n          // Always fill first\n          var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n              _checkedKeys = _conductCheck.checkedKeys,\n              _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n          if (!checked) {\n            var keySet = new Set(_checkedKeys);\n            keySet.delete(key);\n\n            var _conductCheck2 = conductCheck(Array.from(keySet), {\n              checked: false,\n              halfCheckedKeys: _halfCheckedKeys\n            }, keyEntities);\n\n            _checkedKeys = _conductCheck2.checkedKeys;\n            _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n          }\n\n          checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n          eventObj.checkedNodes = [];\n          eventObj.checkedNodesPositions = [];\n          eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n          _checkedKeys.forEach(function (checkedKey) {\n            var entity = keyEntities[checkedKey];\n            if (!entity) return;\n            var node = entity.node,\n                pos = entity.pos;\n            eventObj.checkedNodes.push(node);\n            eventObj.checkedNodesPositions.push({\n              node: node,\n              pos: pos\n            });\n          });\n\n          _this.setUncontrolledState({\n            checkedKeys: _checkedKeys\n          }, false, {\n            halfCheckedKeys: _halfCheckedKeys\n          });\n        }\n\n        if (onCheck) {\n          onCheck(checkedObj, eventObj);\n        }\n      };\n\n      _this.onNodeLoad = function (treeNode) {\n        return new Promise(function (resolve) {\n          // We need to get the latest state of loading/loaded keys\n          _this.setState(function (_ref) {\n            var _ref$loadedKeys = _ref.loadedKeys,\n                loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n                _ref$loadingKeys = _ref.loadingKeys,\n                loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n            var _this$props3 = _this.props,\n                loadData = _this$props3.loadData,\n                onLoad = _this$props3.onLoad;\n            var key = treeNode.key;\n\n            if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n              // react 15 will warn if return null\n              return {};\n            } // Process load data\n\n\n            var promise = loadData(treeNode);\n            promise.then(function () {\n              var _this$state5 = _this.state,\n                  currentLoadedKeys = _this$state5.loadedKeys,\n                  currentLoadingKeys = _this$state5.loadingKeys;\n              var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n              var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n              // https://github.com/ant-design/ant-design/issues/12464\n\n              if (onLoad) {\n                onLoad(newLoadedKeys, {\n                  event: 'load',\n                  node: treeNode\n                });\n              }\n\n              _this.setUncontrolledState({\n                loadedKeys: newLoadedKeys\n              });\n\n              _this.setState({\n                loadingKeys: newLoadingKeys\n              });\n\n              resolve();\n            });\n            return {\n              loadingKeys: arrAdd(loadingKeys, key)\n            };\n          });\n        });\n      };\n\n      _this.onNodeMouseEnter = function (event, node) {\n        var onMouseEnter = _this.props.onMouseEnter;\n\n        if (onMouseEnter) {\n          onMouseEnter({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onNodeMouseLeave = function (event, node) {\n        var onMouseLeave = _this.props.onMouseLeave;\n\n        if (onMouseLeave) {\n          onMouseLeave({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onNodeContextMenu = function (event, node) {\n        var onRightClick = _this.props.onRightClick;\n\n        if (onRightClick) {\n          event.preventDefault();\n          onRightClick({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onFocus = function () {\n        var onFocus = _this.props.onFocus;\n\n        _this.setState({\n          focused: true\n        });\n\n        if (onFocus) {\n          onFocus.apply(void 0, arguments);\n        }\n      };\n\n      _this.onBlur = function () {\n        var onBlur = _this.props.onBlur;\n\n        _this.setState({\n          focused: false\n        });\n\n        _this.onActiveChange(null);\n\n        if (onBlur) {\n          onBlur.apply(void 0, arguments);\n        }\n      };\n\n      _this.getTreeNodeRequiredProps = function () {\n        var _this$state6 = _this.state,\n            expandedKeys = _this$state6.expandedKeys,\n            selectedKeys = _this$state6.selectedKeys,\n            loadedKeys = _this$state6.loadedKeys,\n            loadingKeys = _this$state6.loadingKeys,\n            checkedKeys = _this$state6.checkedKeys,\n            halfCheckedKeys = _this$state6.halfCheckedKeys,\n            dragOverNodeKey = _this$state6.dragOverNodeKey,\n            dropPosition = _this$state6.dropPosition,\n            keyEntities = _this$state6.keyEntities;\n        return {\n          expandedKeys: expandedKeys || [],\n          selectedKeys: selectedKeys || [],\n          loadedKeys: loadedKeys || [],\n          loadingKeys: loadingKeys || [],\n          checkedKeys: checkedKeys || [],\n          halfCheckedKeys: halfCheckedKeys || [],\n          dragOverNodeKey: dragOverNodeKey,\n          dropPosition: dropPosition,\n          keyEntities: keyEntities\n        };\n      }; // =========================== Expanded ===========================\n\n      /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n\n      _this.setExpandedKeys = function (expandedKeys) {\n        var treeData = _this.state.treeData;\n        var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n        _this.setUncontrolledState({\n          expandedKeys: expandedKeys,\n          flattenNodes: flattenNodes\n        }, true);\n      };\n\n      _this.onNodeExpand = function (e, treeNode) {\n        var expandedKeys = _this.state.expandedKeys;\n        var listChanging = _this.state.listChanging;\n        var _this$props4 = _this.props,\n            onExpand = _this$props4.onExpand,\n            loadData = _this$props4.loadData;\n        var key = treeNode.key,\n            expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n        if (listChanging) {\n          return;\n        } // Update selected keys\n\n\n        var index = expandedKeys.indexOf(key);\n        var targetExpanded = !expanded;\n        warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n        if (targetExpanded) {\n          expandedKeys = arrAdd(expandedKeys, key);\n        } else {\n          expandedKeys = arrDel(expandedKeys, key);\n        }\n\n        _this.setExpandedKeys(expandedKeys);\n\n        if (onExpand) {\n          onExpand(expandedKeys, {\n            node: treeNode,\n            expanded: targetExpanded,\n            nativeEvent: e.nativeEvent\n          });\n        } // Async Load data\n\n\n        if (targetExpanded && loadData) {\n          var loadPromise = _this.onNodeLoad(treeNode);\n\n          if (loadPromise) {\n            loadPromise.then(function () {\n              // [Legacy] Refresh logic\n              var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n              _this.setUncontrolledState({\n                flattenNodes: newFlattenTreeData\n              });\n            });\n          }\n        }\n      };\n\n      _this.onListChangeStart = function () {\n        _this.setUncontrolledState({\n          listChanging: true\n        });\n      };\n\n      _this.onListChangeEnd = function () {\n        setTimeout(function () {\n          _this.setUncontrolledState({\n            listChanging: false\n          });\n        });\n      }; // =========================== Keyboard ===========================\n\n\n      _this.onActiveChange = function (newActiveKey) {\n        var activeKey = _this.state.activeKey;\n        var onActiveChange = _this.props.onActiveChange;\n\n        if (activeKey === newActiveKey) {\n          return;\n        }\n\n        _this.setState({\n          activeKey: newActiveKey\n        });\n\n        if (newActiveKey !== null) {\n          _this.scrollTo({\n            key: newActiveKey\n          });\n        }\n\n        if (onActiveChange) {\n          onActiveChange(newActiveKey);\n        }\n      };\n\n      _this.getActiveItem = function () {\n        var _this$state7 = _this.state,\n            activeKey = _this$state7.activeKey,\n            flattenNodes = _this$state7.flattenNodes;\n\n        if (activeKey === null) {\n          return null;\n        }\n\n        return flattenNodes.find(function (_ref2) {\n          var key = _ref2.data.key;\n          return key === activeKey;\n        }) || null;\n      };\n\n      _this.offsetActiveKey = function (offset) {\n        var _this$state8 = _this.state,\n            flattenNodes = _this$state8.flattenNodes,\n            activeKey = _this$state8.activeKey;\n        var index = flattenNodes.findIndex(function (_ref3) {\n          var key = _ref3.data.key;\n          return key === activeKey;\n        }); // Align with index\n\n        if (index === -1 && offset < 0) {\n          index = flattenNodes.length;\n        }\n\n        index = (index + offset + flattenNodes.length) % flattenNodes.length;\n        var item = flattenNodes[index];\n\n        if (item) {\n          var key = item.data.key;\n\n          _this.onActiveChange(key);\n        } else {\n          _this.onActiveChange(null);\n        }\n      };\n\n      _this.onKeyDown = function (event) {\n        var _this$state9 = _this.state,\n            activeKey = _this$state9.activeKey,\n            expandedKeys = _this$state9.expandedKeys,\n            checkedKeys = _this$state9.checkedKeys;\n        var _this$props5 = _this.props,\n            onKeyDown = _this$props5.onKeyDown,\n            checkable = _this$props5.checkable,\n            selectable = _this$props5.selectable; // >>>>>>>>>> Direction\n\n        switch (event.which) {\n          case KeyCode.UP:\n            {\n              _this.offsetActiveKey(-1);\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.DOWN:\n            {\n              _this.offsetActiveKey(1);\n\n              event.preventDefault();\n              break;\n            }\n        } // >>>>>>>>>> Expand & Selection\n\n\n        var activeItem = _this.getActiveItem();\n\n        if (activeItem && activeItem.data) {\n          var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n          var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n          var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n            data: activeItem.data,\n            active: true\n          }));\n\n          switch (event.which) {\n            // >>> Expand\n            case KeyCode.LEFT:\n              {\n                // Collapse if possible\n                if (expandable && expandedKeys.includes(activeKey)) {\n                  _this.onNodeExpand({}, eventNode);\n                } else if (activeItem.parent) {\n                  _this.onActiveChange(activeItem.parent.data.key);\n                }\n\n                event.preventDefault();\n                break;\n              }\n\n            case KeyCode.RIGHT:\n              {\n                // Expand if possible\n                if (expandable && !expandedKeys.includes(activeKey)) {\n                  _this.onNodeExpand({}, eventNode);\n                } else if (activeItem.children && activeItem.children.length) {\n                  _this.onActiveChange(activeItem.children[0].data.key);\n                }\n\n                event.preventDefault();\n                break;\n              }\n            // Selection\n\n            case KeyCode.ENTER:\n            case KeyCode.SPACE:\n              {\n                if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                  _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n                } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                  _this.onNodeSelect({}, eventNode);\n                }\n\n                break;\n              }\n          }\n        }\n\n        if (onKeyDown) {\n          onKeyDown(event);\n        }\n      };\n      /**\n       * Only update the value which is not in props\n       */\n\n\n      _this.setUncontrolledState = function (state) {\n        var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var needSync = false;\n        var allPassed = true;\n        var newState = {};\n        Object.keys(state).forEach(function (name) {\n          if (name in _this.props) {\n            allPassed = false;\n            return;\n          }\n\n          needSync = true;\n          newState[name] = state[name];\n        });\n\n        if (needSync && (!atomic || allPassed)) {\n          _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n        }\n      };\n\n      _this.scrollTo = function (scroll) {\n        _this.listRef.current.scrollTo(scroll);\n      };\n\n      return _this;\n    }\n\n    _createClass(Tree, [{\n      key: \"render\",\n      value: function render() {\n        var _classNames;\n\n        var _this$state10 = this.state,\n            focused = _this$state10.focused,\n            flattenNodes = _this$state10.flattenNodes,\n            keyEntities = _this$state10.keyEntities,\n            dragging = _this$state10.dragging,\n            activeKey = _this$state10.activeKey;\n        var _this$props6 = this.props,\n            prefixCls = _this$props6.prefixCls,\n            className = _this$props6.className,\n            style = _this$props6.style,\n            showLine = _this$props6.showLine,\n            focusable = _this$props6.focusable,\n            _this$props6$tabIndex = _this$props6.tabIndex,\n            tabIndex = _this$props6$tabIndex === void 0 ? 0 : _this$props6$tabIndex,\n            selectable = _this$props6.selectable,\n            showIcon = _this$props6.showIcon,\n            icon = _this$props6.icon,\n            switcherIcon = _this$props6.switcherIcon,\n            draggable = _this$props6.draggable,\n            checkable = _this$props6.checkable,\n            checkStrictly = _this$props6.checkStrictly,\n            disabled = _this$props6.disabled,\n            motion = _this$props6.motion,\n            loadData = _this$props6.loadData,\n            filterTreeNode = _this$props6.filterTreeNode,\n            height = _this$props6.height,\n            itemHeight = _this$props6.itemHeight,\n            virtual = _this$props6.virtual,\n            titleRender = _this$props6.titleRender;\n        var domProps = getDataAndAria(this.props);\n        return React.createElement(TreeContext.Provider, {\n          value: {\n            prefixCls: prefixCls,\n            selectable: selectable,\n            showIcon: showIcon,\n            icon: icon,\n            switcherIcon: switcherIcon,\n            draggable: draggable,\n            checkable: checkable,\n            checkStrictly: checkStrictly,\n            disabled: disabled,\n            keyEntities: keyEntities,\n            loadData: loadData,\n            filterTreeNode: filterTreeNode,\n            titleRender: titleRender,\n            onNodeClick: this.onNodeClick,\n            onNodeDoubleClick: this.onNodeDoubleClick,\n            onNodeExpand: this.onNodeExpand,\n            onNodeSelect: this.onNodeSelect,\n            onNodeCheck: this.onNodeCheck,\n            onNodeLoad: this.onNodeLoad,\n            onNodeMouseEnter: this.onNodeMouseEnter,\n            onNodeMouseLeave: this.onNodeMouseLeave,\n            onNodeContextMenu: this.onNodeContextMenu,\n            onNodeDragStart: this.onNodeDragStart,\n            onNodeDragEnter: this.onNodeDragEnter,\n            onNodeDragOver: this.onNodeDragOver,\n            onNodeDragLeave: this.onNodeDragLeave,\n            onNodeDragEnd: this.onNodeDragEnd,\n            onNodeDrop: this.onNodeDrop\n          }\n        }, React.createElement(\"div\", {\n          className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n        }, React.createElement(NodeList, Object.assign({\n          ref: this.listRef,\n          prefixCls: prefixCls,\n          style: style,\n          data: flattenNodes,\n          disabled: disabled,\n          selectable: selectable,\n          checkable: !!checkable,\n          motion: motion,\n          dragging: dragging,\n          height: height,\n          itemHeight: itemHeight,\n          virtual: virtual,\n          focusable: focusable,\n          focused: focused,\n          tabIndex: tabIndex,\n          activeItem: this.getActiveItem(),\n          onFocus: this.onFocus,\n          onBlur: this.onBlur,\n          onKeyDown: this.onKeyDown,\n          onActiveChange: this.onActiveChange,\n          onListChangeStart: this.onListChangeStart,\n          onListChangeEnd: this.onListChangeEnd\n        }, this.getTreeNodeRequiredProps(), domProps))));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(props, prevState) {\n        var prevProps = prevState.prevProps;\n        var newState = {\n          prevProps: props\n        };\n\n        function needSync(name) {\n          return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n        } // ================== Tree Node ==================\n\n\n        var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n        if (needSync('treeData')) {\n          treeData = props.treeData;\n        } else if (needSync('children')) {\n          warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n          treeData = convertTreeToData(props.children);\n        } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n        if (treeData) {\n          newState.treeData = treeData;\n          var entitiesMap = convertDataToEntities(treeData);\n          newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n          if (process.env.NODE_ENV !== 'production') {\n            warningWithoutKey(treeData);\n          }\n        }\n\n        var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n        if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n          newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n        } else if (!prevProps && props.defaultExpandAll) {\n          var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n          delete cloneKeyEntities[MOTION_KEY];\n          newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n            return cloneKeyEntities[key].key;\n          });\n        } else if (!prevProps && props.defaultExpandedKeys) {\n          newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n        }\n\n        if (!newState.expandedKeys) {\n          delete newState.expandedKeys;\n        } // ================ flattenNodes =================\n\n\n        if (treeData || newState.expandedKeys) {\n          var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n          newState.flattenNodes = flattenNodes;\n        } // ================ selectedKeys =================\n\n\n        if (props.selectable) {\n          if (needSync('selectedKeys')) {\n            newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n          } else if (!prevProps && props.defaultSelectedKeys) {\n            newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n          }\n        } // ================= checkedKeys =================\n\n\n        if (props.checkable) {\n          var checkedKeyEntity;\n\n          if (needSync('checkedKeys')) {\n            checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n          } else if (!prevProps && props.defaultCheckedKeys) {\n            checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n          } else if (treeData) {\n            // If `treeData` changed, we also need check it\n            checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n              checkedKeys: prevState.checkedKeys,\n              halfCheckedKeys: prevState.halfCheckedKeys\n            };\n          }\n\n          if (checkedKeyEntity) {\n            var _checkedKeyEntity = checkedKeyEntity,\n                _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n                checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n                _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n                halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n            if (!props.checkStrictly) {\n              var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n              checkedKeys = conductKeys.checkedKeys;\n              halfCheckedKeys = conductKeys.halfCheckedKeys;\n            }\n\n            newState.checkedKeys = checkedKeys;\n            newState.halfCheckedKeys = halfCheckedKeys;\n          }\n        } // ================= loadedKeys ==================\n\n\n        if (needSync('loadedKeys')) {\n          newState.loadedKeys = props.loadedKeys;\n        }\n\n        return newState;\n      }\n    }]);\n\n    return Tree;\n  }(React.Component);\n\n  Tree.defaultProps = {\n    prefixCls: 'rc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: []\n  };\n  Tree.TreeNode = TreeNode;\n  return Tree;\n}();\n\nexport default Tree;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/rc-tree-select/node_modules/rc-tree/es/Tree.js"],"names":["_defineProperty","_toConsumableArray","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","React","KeyCode","warning","classNames","TreeContext","getDataAndAria","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","warningWithoutKey","convertNodePropsToEventData","getTreeNodeProps","NodeList","MOTION_KEY","MotionEntity","TreeNode","conductCheck","Tree","_React$Component","_super","_this","state","keyEntities","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","dragging","dragNodesKeys","dragOverNodeKey","dropPosition","treeData","flattenNodes","focused","activeKey","listChanging","prevProps","listRef","createRef","onNodeDragStart","event","node","_this$state","onDragStart","props","eventKey","dragNode","newExpandedKeys","setState","setExpandedKeys","onNodeDragEnter","_this$state2","onDragEnter","_node$props","pos","indexOf","setTimeout","delayedDragEnterLogic","clearTimeout","window","entity","children","onNodeDragOver","onDragOver","onNodeDragLeave","onDragLeave","onNodeDragEnd","onDragEnd","cleanDragState","onNodeDrop","_this$state3","_this$state3$dragNode","onDrop","_node$props2","posArr","dropResult","slice","Number","dropToGap","onNodeClick","treeNode","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$props","onSelect","multiple","selected","targetSelected","selectedNodes","map","selectedKey","setUncontrolledState","nativeEvent","onNodeCheck","checked","_this$state4","oriCheckedKeys","oriHalfCheckedKeys","_this$props2","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","concat","_checkedKeys","_halfCheckedKeys","keySet","Set","delete","_conductCheck2","Array","from","checkedNodesPositions","onNodeLoad","Promise","resolve","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props3","loadData","onLoad","promise","then","_this$state5","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","getTreeNodeRequiredProps","_this$state6","onNodeExpand","_this$props4","onExpand","expanded","index","targetExpanded","loadPromise","newFlattenTreeData","onListChangeStart","onListChangeEnd","newActiveKey","scrollTo","getActiveItem","_this$state7","find","_ref2","data","offsetActiveKey","offset","_this$state8","findIndex","_ref3","item","onKeyDown","_this$state9","_this$props5","checkable","selectable","which","UP","DOWN","activeItem","treeNodeRequiredProps","expandable","isLeaf","eventNode","active","LEFT","includes","parent","RIGHT","ENTER","SPACE","disabled","disableCheckbox","atomic","undefined","forceState","needSync","allPassed","newState","name","scroll","current","value","render","_classNames","_this$state10","_this$props6","prefixCls","className","style","showLine","focusable","_this$props6$tabIndex","tabIndex","showIcon","icon","switcherIcon","draggable","motion","filterTreeNode","height","itemHeight","virtual","titleRender","domProps","createElement","Provider","assign","ref","getDerivedStateFromProps","prevState","entitiesMap","process","env","NODE_ENV","autoExpandParent","defaultExpandParent","defaultExpandAll","cloneKeyEntities","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","defaultProps"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\n\nvar Tree =\n/** @class */\nfunction () {\n  var Tree = /*#__PURE__*/function (_React$Component) {\n    _inherits(Tree, _React$Component);\n\n    var _super = _createSuper(Tree);\n\n    function Tree() {\n      var _this;\n\n      _classCallCheck(this, Tree);\n\n      _this = _super.apply(this, arguments);\n      _this.state = {\n        keyEntities: {},\n        selectedKeys: [],\n        checkedKeys: [],\n        halfCheckedKeys: [],\n        loadedKeys: [],\n        loadingKeys: [],\n        expandedKeys: [],\n        dragging: false,\n        dragNodesKeys: [],\n        dragOverNodeKey: null,\n        dropPosition: null,\n        treeData: [],\n        flattenNodes: [],\n        focused: false,\n        activeKey: null,\n        listChanging: false,\n        prevProps: null\n      };\n      _this.listRef = React.createRef();\n\n      _this.onNodeDragStart = function (event, node) {\n        var _this$state = _this.state,\n            expandedKeys = _this$state.expandedKeys,\n            keyEntities = _this$state.keyEntities;\n        var onDragStart = _this.props.onDragStart;\n        var eventKey = node.props.eventKey;\n        _this.dragNode = node;\n        var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n        _this.setState({\n          dragging: true,\n          dragNodesKeys: getDragNodesKeys(eventKey, keyEntities)\n        });\n\n        _this.setExpandedKeys(newExpandedKeys);\n\n        if (onDragStart) {\n          onDragStart({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n      /**\n       * [Legacy] Select handler is less small than node,\n       * so that this will trigger when drag enter node or select handler.\n       * This is a little tricky if customize css without padding.\n       * Better for use mouse move event to refresh drag state.\n       * But let's just keep it to avoid event trigger logic change.\n       */\n\n\n      _this.onNodeDragEnter = function (event, node) {\n        var _this$state2 = _this.state,\n            expandedKeys = _this$state2.expandedKeys,\n            keyEntities = _this$state2.keyEntities,\n            dragNodesKeys = _this$state2.dragNodesKeys;\n        var onDragEnter = _this.props.onDragEnter;\n        var _node$props = node.props,\n            pos = _node$props.pos,\n            eventKey = _node$props.eventKey;\n        if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n        var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n        if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n          _this.setState({\n            dragOverNodeKey: '',\n            dropPosition: null\n          });\n\n          return;\n        } // Ref: https://github.com/react-component/tree/issues/132\n        // Add timeout to let onDragLevel fire before onDragEnter,\n        // so that we can clean drag props for onDragLeave node.\n        // Macro task for this:\n        // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n        setTimeout(function () {\n          // Update drag over node\n          _this.setState({\n            dragOverNodeKey: eventKey,\n            dropPosition: dropPosition\n          }); // Side effect for delay drag\n\n\n          if (!_this.delayedDragEnterLogic) {\n            _this.delayedDragEnterLogic = {};\n          }\n\n          Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n            clearTimeout(_this.delayedDragEnterLogic[key]);\n          });\n          _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n            if (!_this.state.dragging) return;\n\n            var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n            var entity = keyEntities[eventKey];\n\n            if (entity && (entity.children || []).length) {\n              newExpandedKeys = arrAdd(expandedKeys, eventKey);\n            }\n\n            if (!('expandedKeys' in _this.props)) {\n              _this.setExpandedKeys(newExpandedKeys);\n            }\n\n            if (onDragEnter) {\n              onDragEnter({\n                event: event,\n                node: convertNodePropsToEventData(node.props),\n                expandedKeys: newExpandedKeys\n              });\n            }\n          }, 400);\n        }, 0);\n      };\n\n      _this.onNodeDragOver = function (event, node) {\n        var dragNodesKeys = _this.state.dragNodesKeys;\n        var onDragOver = _this.props.onDragOver;\n        var eventKey = node.props.eventKey;\n\n        if (dragNodesKeys.indexOf(eventKey) !== -1) {\n          return;\n        } // Update drag position\n\n\n        if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n          var dropPosition = calcDropPosition(event, node);\n          if (dropPosition === _this.state.dropPosition) return;\n\n          _this.setState({\n            dropPosition: dropPosition\n          });\n        }\n\n        if (onDragOver) {\n          onDragOver({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n\n      _this.onNodeDragLeave = function (event, node) {\n        var onDragLeave = _this.props.onDragLeave;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        if (onDragLeave) {\n          onDragLeave({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n\n      _this.onNodeDragEnd = function (event, node) {\n        var onDragEnd = _this.props.onDragEnd;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        _this.cleanDragState();\n\n        if (onDragEnd) {\n          onDragEnd({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n\n        _this.dragNode = null;\n      };\n\n      _this.onNodeDrop = function (event, node) {\n        var _this$state3 = _this.state,\n            _this$state3$dragNode = _this$state3.dragNodesKeys,\n            dragNodesKeys = _this$state3$dragNode === void 0 ? [] : _this$state3$dragNode,\n            dropPosition = _this$state3.dropPosition;\n        var onDrop = _this.props.onDrop;\n        var _node$props2 = node.props,\n            eventKey = _node$props2.eventKey,\n            pos = _node$props2.pos;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        _this.cleanDragState();\n\n        if (dragNodesKeys.indexOf(eventKey) !== -1) {\n          warning(false, \"Can not drop to dragNode(include it's children node)\");\n          return;\n        }\n\n        var posArr = posToArr(pos);\n        var dropResult = {\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n          dragNodesKeys: dragNodesKeys.slice(),\n          dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n          dropToGap: false\n        };\n\n        if (dropPosition !== 0) {\n          dropResult.dropToGap = true;\n        }\n\n        if (onDrop) {\n          onDrop(dropResult);\n        }\n\n        _this.dragNode = null;\n      };\n\n      _this.cleanDragState = function () {\n        var dragging = _this.state.dragging;\n\n        if (dragging) {\n          _this.setState({\n            dragging: false\n          });\n        }\n      };\n\n      _this.onNodeClick = function (e, treeNode) {\n        var onClick = _this.props.onClick;\n\n        if (onClick) {\n          onClick(e, treeNode);\n        }\n      };\n\n      _this.onNodeDoubleClick = function (e, treeNode) {\n        var onDoubleClick = _this.props.onDoubleClick;\n\n        if (onDoubleClick) {\n          onDoubleClick(e, treeNode);\n        }\n      };\n\n      _this.onNodeSelect = function (e, treeNode) {\n        var selectedKeys = _this.state.selectedKeys;\n        var keyEntities = _this.state.keyEntities;\n        var _this$props = _this.props,\n            onSelect = _this$props.onSelect,\n            multiple = _this$props.multiple;\n        var selected = treeNode.selected,\n            key = treeNode.key;\n        var targetSelected = !selected; // Update selected keys\n\n        if (!targetSelected) {\n          selectedKeys = arrDel(selectedKeys, key);\n        } else if (!multiple) {\n          selectedKeys = [key];\n        } else {\n          selectedKeys = arrAdd(selectedKeys, key);\n        } // [Legacy] Not found related usage in doc or upper libs\n\n\n        var selectedNodes = selectedKeys.map(function (selectedKey) {\n          var entity = keyEntities[selectedKey];\n          if (!entity) return null;\n          return entity.node;\n        }).filter(function (node) {\n          return node;\n        });\n\n        _this.setUncontrolledState({\n          selectedKeys: selectedKeys\n        });\n\n        if (onSelect) {\n          onSelect(selectedKeys, {\n            event: 'select',\n            selected: targetSelected,\n            node: treeNode,\n            selectedNodes: selectedNodes,\n            nativeEvent: e.nativeEvent\n          });\n        }\n      };\n\n      _this.onNodeCheck = function (e, treeNode, checked) {\n        var _this$state4 = _this.state,\n            keyEntities = _this$state4.keyEntities,\n            oriCheckedKeys = _this$state4.checkedKeys,\n            oriHalfCheckedKeys = _this$state4.halfCheckedKeys;\n        var _this$props2 = _this.props,\n            checkStrictly = _this$props2.checkStrictly,\n            onCheck = _this$props2.onCheck;\n        var key = treeNode.key; // Prepare trigger arguments\n\n        var checkedObj;\n        var eventObj = {\n          event: 'check',\n          node: treeNode,\n          checked: checked,\n          nativeEvent: e.nativeEvent\n        };\n\n        if (checkStrictly) {\n          var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n          var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n          checkedObj = {\n            checked: checkedKeys,\n            halfChecked: halfCheckedKeys\n          };\n          eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n            return keyEntities[checkedKey];\n          }).filter(function (entity) {\n            return entity;\n          }).map(function (entity) {\n            return entity.node;\n          });\n\n          _this.setUncontrolledState({\n            checkedKeys: checkedKeys\n          });\n        } else {\n          // Always fill first\n          var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n              _checkedKeys = _conductCheck.checkedKeys,\n              _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n          if (!checked) {\n            var keySet = new Set(_checkedKeys);\n            keySet.delete(key);\n\n            var _conductCheck2 = conductCheck(Array.from(keySet), {\n              checked: false,\n              halfCheckedKeys: _halfCheckedKeys\n            }, keyEntities);\n\n            _checkedKeys = _conductCheck2.checkedKeys;\n            _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n          }\n\n          checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n          eventObj.checkedNodes = [];\n          eventObj.checkedNodesPositions = [];\n          eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n          _checkedKeys.forEach(function (checkedKey) {\n            var entity = keyEntities[checkedKey];\n            if (!entity) return;\n            var node = entity.node,\n                pos = entity.pos;\n            eventObj.checkedNodes.push(node);\n            eventObj.checkedNodesPositions.push({\n              node: node,\n              pos: pos\n            });\n          });\n\n          _this.setUncontrolledState({\n            checkedKeys: _checkedKeys\n          }, false, {\n            halfCheckedKeys: _halfCheckedKeys\n          });\n        }\n\n        if (onCheck) {\n          onCheck(checkedObj, eventObj);\n        }\n      };\n\n      _this.onNodeLoad = function (treeNode) {\n        return new Promise(function (resolve) {\n          // We need to get the latest state of loading/loaded keys\n          _this.setState(function (_ref) {\n            var _ref$loadedKeys = _ref.loadedKeys,\n                loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n                _ref$loadingKeys = _ref.loadingKeys,\n                loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n            var _this$props3 = _this.props,\n                loadData = _this$props3.loadData,\n                onLoad = _this$props3.onLoad;\n            var key = treeNode.key;\n\n            if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n              // react 15 will warn if return null\n              return {};\n            } // Process load data\n\n\n            var promise = loadData(treeNode);\n            promise.then(function () {\n              var _this$state5 = _this.state,\n                  currentLoadedKeys = _this$state5.loadedKeys,\n                  currentLoadingKeys = _this$state5.loadingKeys;\n              var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n              var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n              // https://github.com/ant-design/ant-design/issues/12464\n\n              if (onLoad) {\n                onLoad(newLoadedKeys, {\n                  event: 'load',\n                  node: treeNode\n                });\n              }\n\n              _this.setUncontrolledState({\n                loadedKeys: newLoadedKeys\n              });\n\n              _this.setState({\n                loadingKeys: newLoadingKeys\n              });\n\n              resolve();\n            });\n            return {\n              loadingKeys: arrAdd(loadingKeys, key)\n            };\n          });\n        });\n      };\n\n      _this.onNodeMouseEnter = function (event, node) {\n        var onMouseEnter = _this.props.onMouseEnter;\n\n        if (onMouseEnter) {\n          onMouseEnter({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onNodeMouseLeave = function (event, node) {\n        var onMouseLeave = _this.props.onMouseLeave;\n\n        if (onMouseLeave) {\n          onMouseLeave({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onNodeContextMenu = function (event, node) {\n        var onRightClick = _this.props.onRightClick;\n\n        if (onRightClick) {\n          event.preventDefault();\n          onRightClick({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onFocus = function () {\n        var onFocus = _this.props.onFocus;\n\n        _this.setState({\n          focused: true\n        });\n\n        if (onFocus) {\n          onFocus.apply(void 0, arguments);\n        }\n      };\n\n      _this.onBlur = function () {\n        var onBlur = _this.props.onBlur;\n\n        _this.setState({\n          focused: false\n        });\n\n        _this.onActiveChange(null);\n\n        if (onBlur) {\n          onBlur.apply(void 0, arguments);\n        }\n      };\n\n      _this.getTreeNodeRequiredProps = function () {\n        var _this$state6 = _this.state,\n            expandedKeys = _this$state6.expandedKeys,\n            selectedKeys = _this$state6.selectedKeys,\n            loadedKeys = _this$state6.loadedKeys,\n            loadingKeys = _this$state6.loadingKeys,\n            checkedKeys = _this$state6.checkedKeys,\n            halfCheckedKeys = _this$state6.halfCheckedKeys,\n            dragOverNodeKey = _this$state6.dragOverNodeKey,\n            dropPosition = _this$state6.dropPosition,\n            keyEntities = _this$state6.keyEntities;\n        return {\n          expandedKeys: expandedKeys || [],\n          selectedKeys: selectedKeys || [],\n          loadedKeys: loadedKeys || [],\n          loadingKeys: loadingKeys || [],\n          checkedKeys: checkedKeys || [],\n          halfCheckedKeys: halfCheckedKeys || [],\n          dragOverNodeKey: dragOverNodeKey,\n          dropPosition: dropPosition,\n          keyEntities: keyEntities\n        };\n      }; // =========================== Expanded ===========================\n\n      /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n\n      _this.setExpandedKeys = function (expandedKeys) {\n        var treeData = _this.state.treeData;\n        var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n        _this.setUncontrolledState({\n          expandedKeys: expandedKeys,\n          flattenNodes: flattenNodes\n        }, true);\n      };\n\n      _this.onNodeExpand = function (e, treeNode) {\n        var expandedKeys = _this.state.expandedKeys;\n        var listChanging = _this.state.listChanging;\n        var _this$props4 = _this.props,\n            onExpand = _this$props4.onExpand,\n            loadData = _this$props4.loadData;\n        var key = treeNode.key,\n            expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n        if (listChanging) {\n          return;\n        } // Update selected keys\n\n\n        var index = expandedKeys.indexOf(key);\n        var targetExpanded = !expanded;\n        warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n        if (targetExpanded) {\n          expandedKeys = arrAdd(expandedKeys, key);\n        } else {\n          expandedKeys = arrDel(expandedKeys, key);\n        }\n\n        _this.setExpandedKeys(expandedKeys);\n\n        if (onExpand) {\n          onExpand(expandedKeys, {\n            node: treeNode,\n            expanded: targetExpanded,\n            nativeEvent: e.nativeEvent\n          });\n        } // Async Load data\n\n\n        if (targetExpanded && loadData) {\n          var loadPromise = _this.onNodeLoad(treeNode);\n\n          if (loadPromise) {\n            loadPromise.then(function () {\n              // [Legacy] Refresh logic\n              var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n              _this.setUncontrolledState({\n                flattenNodes: newFlattenTreeData\n              });\n            });\n          }\n        }\n      };\n\n      _this.onListChangeStart = function () {\n        _this.setUncontrolledState({\n          listChanging: true\n        });\n      };\n\n      _this.onListChangeEnd = function () {\n        setTimeout(function () {\n          _this.setUncontrolledState({\n            listChanging: false\n          });\n        });\n      }; // =========================== Keyboard ===========================\n\n\n      _this.onActiveChange = function (newActiveKey) {\n        var activeKey = _this.state.activeKey;\n        var onActiveChange = _this.props.onActiveChange;\n\n        if (activeKey === newActiveKey) {\n          return;\n        }\n\n        _this.setState({\n          activeKey: newActiveKey\n        });\n\n        if (newActiveKey !== null) {\n          _this.scrollTo({\n            key: newActiveKey\n          });\n        }\n\n        if (onActiveChange) {\n          onActiveChange(newActiveKey);\n        }\n      };\n\n      _this.getActiveItem = function () {\n        var _this$state7 = _this.state,\n            activeKey = _this$state7.activeKey,\n            flattenNodes = _this$state7.flattenNodes;\n\n        if (activeKey === null) {\n          return null;\n        }\n\n        return flattenNodes.find(function (_ref2) {\n          var key = _ref2.data.key;\n          return key === activeKey;\n        }) || null;\n      };\n\n      _this.offsetActiveKey = function (offset) {\n        var _this$state8 = _this.state,\n            flattenNodes = _this$state8.flattenNodes,\n            activeKey = _this$state8.activeKey;\n        var index = flattenNodes.findIndex(function (_ref3) {\n          var key = _ref3.data.key;\n          return key === activeKey;\n        }); // Align with index\n\n        if (index === -1 && offset < 0) {\n          index = flattenNodes.length;\n        }\n\n        index = (index + offset + flattenNodes.length) % flattenNodes.length;\n        var item = flattenNodes[index];\n\n        if (item) {\n          var key = item.data.key;\n\n          _this.onActiveChange(key);\n        } else {\n          _this.onActiveChange(null);\n        }\n      };\n\n      _this.onKeyDown = function (event) {\n        var _this$state9 = _this.state,\n            activeKey = _this$state9.activeKey,\n            expandedKeys = _this$state9.expandedKeys,\n            checkedKeys = _this$state9.checkedKeys;\n        var _this$props5 = _this.props,\n            onKeyDown = _this$props5.onKeyDown,\n            checkable = _this$props5.checkable,\n            selectable = _this$props5.selectable; // >>>>>>>>>> Direction\n\n        switch (event.which) {\n          case KeyCode.UP:\n            {\n              _this.offsetActiveKey(-1);\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.DOWN:\n            {\n              _this.offsetActiveKey(1);\n\n              event.preventDefault();\n              break;\n            }\n        } // >>>>>>>>>> Expand & Selection\n\n\n        var activeItem = _this.getActiveItem();\n\n        if (activeItem && activeItem.data) {\n          var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n          var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n          var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n            data: activeItem.data,\n            active: true\n          }));\n\n          switch (event.which) {\n            // >>> Expand\n            case KeyCode.LEFT:\n              {\n                // Collapse if possible\n                if (expandable && expandedKeys.includes(activeKey)) {\n                  _this.onNodeExpand({}, eventNode);\n                } else if (activeItem.parent) {\n                  _this.onActiveChange(activeItem.parent.data.key);\n                }\n\n                event.preventDefault();\n                break;\n              }\n\n            case KeyCode.RIGHT:\n              {\n                // Expand if possible\n                if (expandable && !expandedKeys.includes(activeKey)) {\n                  _this.onNodeExpand({}, eventNode);\n                } else if (activeItem.children && activeItem.children.length) {\n                  _this.onActiveChange(activeItem.children[0].data.key);\n                }\n\n                event.preventDefault();\n                break;\n              }\n            // Selection\n\n            case KeyCode.ENTER:\n            case KeyCode.SPACE:\n              {\n                if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                  _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n                } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                  _this.onNodeSelect({}, eventNode);\n                }\n\n                break;\n              }\n          }\n        }\n\n        if (onKeyDown) {\n          onKeyDown(event);\n        }\n      };\n      /**\n       * Only update the value which is not in props\n       */\n\n\n      _this.setUncontrolledState = function (state) {\n        var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var needSync = false;\n        var allPassed = true;\n        var newState = {};\n        Object.keys(state).forEach(function (name) {\n          if (name in _this.props) {\n            allPassed = false;\n            return;\n          }\n\n          needSync = true;\n          newState[name] = state[name];\n        });\n\n        if (needSync && (!atomic || allPassed)) {\n          _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n        }\n      };\n\n      _this.scrollTo = function (scroll) {\n        _this.listRef.current.scrollTo(scroll);\n      };\n\n      return _this;\n    }\n\n    _createClass(Tree, [{\n      key: \"render\",\n      value: function render() {\n        var _classNames;\n\n        var _this$state10 = this.state,\n            focused = _this$state10.focused,\n            flattenNodes = _this$state10.flattenNodes,\n            keyEntities = _this$state10.keyEntities,\n            dragging = _this$state10.dragging,\n            activeKey = _this$state10.activeKey;\n        var _this$props6 = this.props,\n            prefixCls = _this$props6.prefixCls,\n            className = _this$props6.className,\n            style = _this$props6.style,\n            showLine = _this$props6.showLine,\n            focusable = _this$props6.focusable,\n            _this$props6$tabIndex = _this$props6.tabIndex,\n            tabIndex = _this$props6$tabIndex === void 0 ? 0 : _this$props6$tabIndex,\n            selectable = _this$props6.selectable,\n            showIcon = _this$props6.showIcon,\n            icon = _this$props6.icon,\n            switcherIcon = _this$props6.switcherIcon,\n            draggable = _this$props6.draggable,\n            checkable = _this$props6.checkable,\n            checkStrictly = _this$props6.checkStrictly,\n            disabled = _this$props6.disabled,\n            motion = _this$props6.motion,\n            loadData = _this$props6.loadData,\n            filterTreeNode = _this$props6.filterTreeNode,\n            height = _this$props6.height,\n            itemHeight = _this$props6.itemHeight,\n            virtual = _this$props6.virtual,\n            titleRender = _this$props6.titleRender;\n        var domProps = getDataAndAria(this.props);\n        return React.createElement(TreeContext.Provider, {\n          value: {\n            prefixCls: prefixCls,\n            selectable: selectable,\n            showIcon: showIcon,\n            icon: icon,\n            switcherIcon: switcherIcon,\n            draggable: draggable,\n            checkable: checkable,\n            checkStrictly: checkStrictly,\n            disabled: disabled,\n            keyEntities: keyEntities,\n            loadData: loadData,\n            filterTreeNode: filterTreeNode,\n            titleRender: titleRender,\n            onNodeClick: this.onNodeClick,\n            onNodeDoubleClick: this.onNodeDoubleClick,\n            onNodeExpand: this.onNodeExpand,\n            onNodeSelect: this.onNodeSelect,\n            onNodeCheck: this.onNodeCheck,\n            onNodeLoad: this.onNodeLoad,\n            onNodeMouseEnter: this.onNodeMouseEnter,\n            onNodeMouseLeave: this.onNodeMouseLeave,\n            onNodeContextMenu: this.onNodeContextMenu,\n            onNodeDragStart: this.onNodeDragStart,\n            onNodeDragEnter: this.onNodeDragEnter,\n            onNodeDragOver: this.onNodeDragOver,\n            onNodeDragLeave: this.onNodeDragLeave,\n            onNodeDragEnd: this.onNodeDragEnd,\n            onNodeDrop: this.onNodeDrop\n          }\n        }, React.createElement(\"div\", {\n          className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n        }, React.createElement(NodeList, Object.assign({\n          ref: this.listRef,\n          prefixCls: prefixCls,\n          style: style,\n          data: flattenNodes,\n          disabled: disabled,\n          selectable: selectable,\n          checkable: !!checkable,\n          motion: motion,\n          dragging: dragging,\n          height: height,\n          itemHeight: itemHeight,\n          virtual: virtual,\n          focusable: focusable,\n          focused: focused,\n          tabIndex: tabIndex,\n          activeItem: this.getActiveItem(),\n          onFocus: this.onFocus,\n          onBlur: this.onBlur,\n          onKeyDown: this.onKeyDown,\n          onActiveChange: this.onActiveChange,\n          onListChangeStart: this.onListChangeStart,\n          onListChangeEnd: this.onListChangeEnd\n        }, this.getTreeNodeRequiredProps(), domProps))));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(props, prevState) {\n        var prevProps = prevState.prevProps;\n        var newState = {\n          prevProps: props\n        };\n\n        function needSync(name) {\n          return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n        } // ================== Tree Node ==================\n\n\n        var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n        if (needSync('treeData')) {\n          treeData = props.treeData;\n        } else if (needSync('children')) {\n          warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n          treeData = convertTreeToData(props.children);\n        } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n        if (treeData) {\n          newState.treeData = treeData;\n          var entitiesMap = convertDataToEntities(treeData);\n          newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n          if (process.env.NODE_ENV !== 'production') {\n            warningWithoutKey(treeData);\n          }\n        }\n\n        var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n        if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n          newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n        } else if (!prevProps && props.defaultExpandAll) {\n          var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n          delete cloneKeyEntities[MOTION_KEY];\n          newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n            return cloneKeyEntities[key].key;\n          });\n        } else if (!prevProps && props.defaultExpandedKeys) {\n          newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n        }\n\n        if (!newState.expandedKeys) {\n          delete newState.expandedKeys;\n        } // ================ flattenNodes =================\n\n\n        if (treeData || newState.expandedKeys) {\n          var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n          newState.flattenNodes = flattenNodes;\n        } // ================ selectedKeys =================\n\n\n        if (props.selectable) {\n          if (needSync('selectedKeys')) {\n            newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n          } else if (!prevProps && props.defaultSelectedKeys) {\n            newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n          }\n        } // ================= checkedKeys =================\n\n\n        if (props.checkable) {\n          var checkedKeyEntity;\n\n          if (needSync('checkedKeys')) {\n            checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n          } else if (!prevProps && props.defaultCheckedKeys) {\n            checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n          } else if (treeData) {\n            // If `treeData` changed, we also need check it\n            checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n              checkedKeys: prevState.checkedKeys,\n              halfCheckedKeys: prevState.halfCheckedKeys\n            };\n          }\n\n          if (checkedKeyEntity) {\n            var _checkedKeyEntity = checkedKeyEntity,\n                _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n                checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n                _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n                halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n            if (!props.checkStrictly) {\n              var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n              checkedKeys = conductKeys.checkedKeys;\n              halfCheckedKeys = conductKeys.halfCheckedKeys;\n            }\n\n            newState.checkedKeys = checkedKeys;\n            newState.halfCheckedKeys = halfCheckedKeys;\n          }\n        } // ================= loadedKeys ==================\n\n\n        if (needSync('loadedKeys')) {\n          newState.loadedKeys = props.loadedKeys;\n        }\n\n        return newState;\n      }\n    }]);\n\n    return Tree;\n  }(React.Component);\n\n  Tree.defaultProps = {\n    prefixCls: 'rc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: []\n  };\n  Tree.TreeNode = TreeNode;\n  return Tree;\n}();\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}