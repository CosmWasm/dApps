{"ast":null,"code":"import \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport Field from '../field';\nexport const Radio = _a => {\n  var {\n    name,\n    validate,\n    fast,\n    onChange\n  } = _a,\n      restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\"]);\n\n  return React.createElement(Field, {\n    name: name,\n    validate: validate,\n    fast: fast\n  }, ({\n    field: {\n      value\n    },\n    form: {\n      setFieldValue,\n      setFieldTouched\n    }\n  }) => React.createElement(_Radio, Object.assign({\n    value: value,\n    onChange: event => {\n      setFieldValue(name, event.target.value);\n      setFieldTouched(name, true, false);\n      onChange && onChange(event);\n    }\n  }, restProps)));\n};\nexport default Radio;\n\nRadio.Group = _a => {\n  var {\n    name,\n    validate,\n    fast,\n    onChange\n  } = _a,\n      restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\"]);\n\n  return React.createElement(Field, {\n    name: name,\n    validate: validate,\n    fast: fast\n  }, ({\n    field: {\n      value\n    },\n    form: {\n      setFieldValue,\n      setFieldTouched\n    }\n  }) => React.createElement(_Radio.Group, Object.assign({\n    value: value,\n    onChange: event => {\n      setFieldValue(name, event.target.value);\n      setFieldTouched(name, true, false);\n      onChange && onChange(event);\n    }\n  }, restProps)));\n};\n\nRadio.Button = _Radio.Button;","map":{"version":3,"sources":["../../src/radio/index.tsx"],"names":[],"mappings":";;;AAEA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAGA,OAAO,KAAP,MAAkB,UAAlB;AAIA,OAAO,MAAM,KAAK,GAAI,EAAD,IAMC;MANA;AACpB,IAAA,IADoB;AAEpB,IAAA,QAFoB;AAGpB,IAAA,IAHoB;AAIpB,IAAA;AAJoB,MAIZ,E;MACR,SAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,UAAA,CAAA,C;;AACqB,SACrB,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,IAAA,IAAI,EAAE,IAAP;AAAa,IAAA,QAAQ,EAAE,QAAvB;AAAiC,IAAA,IAAI,EAAE;AAAvC,GAAN,EACG,CAAC;AACA,IAAA,KAAK,EAAE;AAAE,MAAA;AAAF,KADP;AAEA,IAAA,IAAI,EAAE;AAAE,MAAA,aAAF;AAAiB,MAAA;AAAjB;AAFN,GAAD,KAIC,KAAA,CAAA,aAAA,SAAO,MAAA,CAAA,MAAA,CAAA;AACL,IAAA,KAAK,EAAE,KADF;AAEL,IAAA,QAAQ,EAAG,KAAD,IAAU;AAClB,MAAA,aAAa,CAAC,IAAD,EAAO,KAAK,CAAC,MAAN,CAAa,KAApB,CAAb;AACA,MAAA,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CAAf;AACA,MAAA,QAAQ,IAAI,QAAQ,CAAC,KAAD,CAApB;AACD;AANI,GAAA,EAOD,SAPC,CAAP,CALJ,CADqB;AAiBtB,CAvBM;AAyBP,eAAe,KAAf;;AAEA,KAAK,CAAC,KAAN,GAAe,EAAD,IAMQ;MANP;AACb,IAAA,IADa;AAEb,IAAA,QAFa;AAGb,IAAA,IAHa;AAIb,IAAA;AAJa,MAIL,E;MACR,SAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,UAAA,CAAA,C;;AACqB,SACrB,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,IAAA,IAAI,EAAE,IAAP;AAAa,IAAA,QAAQ,EAAE,QAAvB;AAAiC,IAAA,IAAI,EAAE;AAAvC,GAAN,EACG,CAAC;AACA,IAAA,KAAK,EAAE;AAAE,MAAA;AAAF,KADP;AAEA,IAAA,IAAI,EAAE;AAAE,MAAA,aAAF;AAAiB,MAAA;AAAjB;AAFN,GAAD,KAIC,KAAA,CAAA,aAAA,CAAC,OAAO,KAAR,EAAa,MAAA,CAAA,MAAA,CAAA;AACX,IAAA,KAAK,EAAE,KADI;AAEX,IAAA,QAAQ,EAAG,KAAD,IAAU;AAClB,MAAA,aAAa,CAAC,IAAD,EAAO,KAAK,CAAC,MAAN,CAAa,KAApB,CAAb;AACA,MAAA,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CAAf;AACA,MAAA,QAAQ,IAAI,QAAQ,CAAC,KAAD,CAApB;AACD;AANU,GAAA,EAOP,SAPO,CAAb,CALJ,CADqB;AAiBtB,CAvBD;;AAyBA,KAAK,CAAC,MAAN,GAAe,OAAO,MAAtB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport { Radio as $Radio } from 'antd';\nimport * as React from 'react';\nimport Field from '../field';\nexport const Radio = (_a) => {\n    var { name, validate, fast, onChange } = _a, restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\"]);\n    return (React.createElement(Field, { name: name, validate: validate, fast: fast }, ({ field: { value }, form: { setFieldValue, setFieldTouched }, }) => (React.createElement($Radio, Object.assign({ value: value, onChange: (event) => {\n            setFieldValue(name, event.target.value);\n            setFieldTouched(name, true, false);\n            onChange && onChange(event);\n        } }, restProps)))));\n};\nexport default Radio;\nRadio.Group = (_a) => {\n    var { name, validate, fast, onChange } = _a, restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"onChange\"]);\n    return (React.createElement(Field, { name: name, validate: validate, fast: fast }, ({ field: { value }, form: { setFieldValue, setFieldTouched }, }) => (React.createElement($Radio.Group, Object.assign({ value: value, onChange: (event) => {\n            setFieldValue(name, event.target.value);\n            setFieldTouched(name, true, false);\n            onChange && onChange(event);\n        } }, restProps)))));\n};\nRadio.Button = $Radio.Button;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}