{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sha512 = exports.Sha256 = exports.Sha1 = void 0;\n\nconst sha_js_1 = __importDefault(require(\"sha.js\"));\n\nclass Sha1 {\n  constructor(firstData) {\n    this.blockSize = 512 / 8;\n    this.impl = sha_js_1.default(\"sha1\");\n\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n\n  update(data) {\n    this.impl.update(data);\n    return this;\n  }\n\n  digest() {\n    return new Uint8Array(this.impl.digest());\n  }\n\n}\n\nexports.Sha1 = Sha1;\n\nclass Sha256 {\n  constructor(firstData) {\n    this.blockSize = 512 / 8;\n    this.impl = sha_js_1.default(\"sha256\");\n\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n\n  update(data) {\n    this.impl.update(data);\n    return this;\n  }\n\n  digest() {\n    return new Uint8Array(this.impl.digest());\n  }\n\n}\n\nexports.Sha256 = Sha256;\n\nclass Sha512 {\n  constructor(firstData) {\n    this.blockSize = 1024 / 8;\n    this.impl = sha_js_1.default(\"sha512\");\n\n    if (firstData) {\n      this.update(firstData);\n    }\n  }\n\n  update(data) {\n    this.impl.update(data);\n    return this;\n  }\n\n  digest() {\n    return new Uint8Array(this.impl.digest());\n  }\n\n}\n\nexports.Sha512 = Sha512;","map":{"version":3,"sources":["../src/sha.ts"],"names":[],"mappings":";;;;;;;;;;;;;AACA,MAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AAIA,MAAa,IAAb,CAAiB;AAKf,EAAA,WAAA,CAAmB,SAAnB,EAAyC;AAJzB,SAAA,SAAA,GAAY,MAAM,CAAlB;AAKd,SAAK,IAAL,GAAY,QAAA,CAAA,OAAA,CAAM,MAAN,CAAZ;;AAEA,QAAI,SAAJ,EAAe;AACb,WAAK,MAAL,CAAY,SAAZ;AACD;AACF;;AAEM,EAAA,MAAM,CAAC,IAAD,EAAiB;AAC5B,SAAK,IAAL,CAAU,MAAV,CAAiB,IAAjB;AACA,WAAO,IAAP;AACD;;AAEM,EAAA,MAAM,GAAA;AACX,WAAO,IAAI,UAAJ,CAAe,KAAK,IAAL,CAAU,MAAV,EAAf,CAAP;AACD;;AApBc;;AAAjB,OAAA,CAAA,IAAA,GAAA,IAAA;;AAuBA,MAAa,MAAb,CAAmB;AAKjB,EAAA,WAAA,CAAmB,SAAnB,EAAyC;AAJzB,SAAA,SAAA,GAAY,MAAM,CAAlB;AAKd,SAAK,IAAL,GAAY,QAAA,CAAA,OAAA,CAAM,QAAN,CAAZ;;AAEA,QAAI,SAAJ,EAAe;AACb,WAAK,MAAL,CAAY,SAAZ;AACD;AACF;;AAEM,EAAA,MAAM,CAAC,IAAD,EAAiB;AAC5B,SAAK,IAAL,CAAU,MAAV,CAAiB,IAAjB;AACA,WAAO,IAAP;AACD;;AAEM,EAAA,MAAM,GAAA;AACX,WAAO,IAAI,UAAJ,CAAe,KAAK,IAAL,CAAU,MAAV,EAAf,CAAP;AACD;;AApBgB;;AAAnB,OAAA,CAAA,MAAA,GAAA,MAAA;;AAuBA,MAAa,MAAb,CAAmB;AAKjB,EAAA,WAAA,CAAmB,SAAnB,EAAyC;AAJzB,SAAA,SAAA,GAAY,OAAO,CAAnB;AAKd,SAAK,IAAL,GAAY,QAAA,CAAA,OAAA,CAAM,QAAN,CAAZ;;AAEA,QAAI,SAAJ,EAAe;AACb,WAAK,MAAL,CAAY,SAAZ;AACD;AACF;;AAEM,EAAA,MAAM,CAAC,IAAD,EAAiB;AAC5B,SAAK,IAAL,CAAU,MAAV,CAAiB,IAAjB;AACA,WAAO,IAAP;AACD;;AAEM,EAAA,MAAM,GAAA;AACX,WAAO,IAAI,UAAJ,CAAe,KAAK,IAAL,CAAU,MAAV,EAAf,CAAP;AACD;;AApBgB;;AAAnB,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha512 = exports.Sha256 = exports.Sha1 = void 0;\nconst sha_js_1 = __importDefault(require(\"sha.js\"));\nclass Sha1 {\n    constructor(firstData) {\n        this.blockSize = 512 / 8;\n        this.impl = sha_js_1.default(\"sha1\");\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update(data);\n        return this;\n    }\n    digest() {\n        return new Uint8Array(this.impl.digest());\n    }\n}\nexports.Sha1 = Sha1;\nclass Sha256 {\n    constructor(firstData) {\n        this.blockSize = 512 / 8;\n        this.impl = sha_js_1.default(\"sha256\");\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update(data);\n        return this;\n    }\n    digest() {\n        return new Uint8Array(this.impl.digest());\n    }\n}\nexports.Sha256 = Sha256;\nclass Sha512 {\n    constructor(firstData) {\n        this.blockSize = 1024 / 8;\n        this.impl = sha_js_1.default(\"sha512\");\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update(data);\n        return this;\n    }\n    digest() {\n        return new Uint8Array(this.impl.digest());\n    }\n}\nexports.Sha512 = Sha512;\n//# sourceMappingURL=sha.js.map"]},"metadata":{},"sourceType":"script"}