{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { CSSMotionList } from 'rc-motion';\nimport TransBtn from '../TransBtn';\nimport Input from './Input';\nimport useLayoutEffect from '../hooks/useLayoutEffect';\nvar REST_TAG_KEY = '__RC_SELECT_MAX_REST_COUNT__';\n\nvar SelectSelector = function SelectSelector(props) {\n  var id = props.id,\n      prefixCls = props.prefixCls,\n      values = props.values,\n      open = props.open,\n      searchValue = props.searchValue,\n      inputRef = props.inputRef,\n      placeholder = props.placeholder,\n      disabled = props.disabled,\n      mode = props.mode,\n      showSearch = props.showSearch,\n      autoFocus = props.autoFocus,\n      autoComplete = props.autoComplete,\n      accessibilityIndex = props.accessibilityIndex,\n      tabIndex = props.tabIndex,\n      removeIcon = props.removeIcon,\n      choiceTransitionName = props.choiceTransitionName,\n      maxTagCount = props.maxTagCount,\n      maxTagTextLength = props.maxTagTextLength,\n      _props$maxTagPlacehol = props.maxTagPlaceholder,\n      maxTagPlaceholder = _props$maxTagPlacehol === void 0 ? function (omittedValues) {\n    return \"+ \".concat(omittedValues.length, \" ...\");\n  } : _props$maxTagPlacehol,\n      tagRender = props.tagRender,\n      onSelect = props.onSelect,\n      onInputChange = props.onInputChange,\n      onInputPaste = props.onInputPaste,\n      onInputKeyDown = props.onInputKeyDown,\n      onInputMouseDown = props.onInputMouseDown,\n      onInputCompositionStart = props.onInputCompositionStart,\n      onInputCompositionEnd = props.onInputCompositionEnd;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      motionAppear = _React$useState2[0],\n      setMotionAppear = _React$useState2[1];\n\n  var measureRef = React.useRef(null);\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      inputWidth = _React$useState4[0],\n      setInputWidth = _React$useState4[1]; // ===================== Motion ======================\n\n\n  React.useEffect(function () {\n    setMotionAppear(true);\n  }, []); // ===================== Search ======================\n\n  var inputValue = open || mode === 'tags' ? searchValue : '';\n  var inputEditable = mode === 'tags' || open && showSearch; // We measure width and set to the input immediately\n\n  useLayoutEffect(function () {\n    setInputWidth(measureRef.current.scrollWidth);\n  }, [inputValue]); // ==================== Selection ====================\n\n  var displayValues = values; // Cut by `maxTagCount`\n\n  var restCount;\n\n  if (typeof maxTagCount === 'number') {\n    restCount = values.length - maxTagCount;\n    displayValues = values.slice(0, maxTagCount);\n  } // Update by `maxTagTextLength`\n\n\n  if (typeof maxTagTextLength === 'number') {\n    displayValues = displayValues.map(function (_ref) {\n      var label = _ref.label,\n          rest = _objectWithoutProperties(_ref, [\"label\"]);\n\n      var displayLabel = label;\n\n      if (typeof label === 'string' || typeof label === 'number') {\n        var strLabel = String(displayLabel);\n\n        if (strLabel.length > maxTagTextLength) {\n          displayLabel = \"\".concat(strLabel.slice(0, maxTagTextLength), \"...\");\n        }\n      }\n\n      return _objectSpread(_objectSpread({}, rest), {}, {\n        label: displayLabel\n      });\n    });\n  } // Fill rest\n\n\n  if (restCount > 0) {\n    displayValues.push({\n      key: REST_TAG_KEY,\n      label: typeof maxTagPlaceholder === 'function' ? maxTagPlaceholder(values.slice(maxTagCount)) : maxTagPlaceholder\n    });\n  }\n\n  var selectionNode = React.createElement(CSSMotionList, {\n    component: false,\n    keys: displayValues,\n    motionName: choiceTransitionName,\n    motionAppear: motionAppear\n  }, function (_ref2) {\n    var key = _ref2.key,\n        label = _ref2.label,\n        value = _ref2.value,\n        itemDisabled = _ref2.disabled,\n        className = _ref2.className,\n        style = _ref2.style;\n    var mergedKey = key || value;\n    var closable = key !== REST_TAG_KEY && !itemDisabled;\n\n    var onMouseDown = function onMouseDown(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    var onClose = function onClose(event) {\n      if (event) event.stopPropagation();\n      onSelect(value, {\n        selected: false\n      });\n    };\n\n    return typeof tagRender === 'function' ? React.createElement(\"span\", {\n      key: mergedKey,\n      onMouseDown: onMouseDown,\n      className: className,\n      style: style\n    }, tagRender({\n      label: label,\n      value: value,\n      disabled: itemDisabled,\n      closable: closable,\n      onClose: onClose\n    })) : React.createElement(\"span\", {\n      key: mergedKey,\n      className: classNames(className, \"\".concat(prefixCls, \"-selection-item\"), _defineProperty({}, \"\".concat(prefixCls, \"-selection-item-disabled\"), itemDisabled)),\n      style: style\n    }, React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-selection-item-content\")\n    }, label), closable && React.createElement(TransBtn, {\n      className: \"\".concat(prefixCls, \"-selection-item-remove\"),\n      onMouseDown: onMouseDown,\n      onClick: onClose,\n      customizeIcon: removeIcon\n    }, \"\\xD7\"));\n  });\n  return React.createElement(React.Fragment, null, selectionNode, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\"),\n    style: {\n      width: inputWidth\n    }\n  }, React.createElement(Input, {\n    ref: inputRef,\n    open: open,\n    prefixCls: prefixCls,\n    id: id,\n    inputElement: null,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    autoComplete: autoComplete,\n    editable: inputEditable,\n    accessibilityIndex: accessibilityIndex,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: onInputChange,\n    onPaste: onInputPaste,\n    onCompositionStart: onInputCompositionStart,\n    onCompositionEnd: onInputCompositionEnd,\n    tabIndex: tabIndex,\n    attrs: pickAttrs(props, true)\n  }), React.createElement(\"span\", {\n    ref: measureRef,\n    className: \"\".concat(prefixCls, \"-selection-search-mirror\"),\n    \"aria-hidden\": true\n  }, inputValue, \"\\xA0\")), !values.length && !inputValue && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-placeholder\")\n  }, placeholder));\n};\n\nexport default SelectSelector;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/rc-tree-select/node_modules/rc-select/es/Selector/MultipleSelector.js"],"names":["_defineProperty","_objectWithoutProperties","_slicedToArray","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","classNames","pickAttrs","CSSMotionList","TransBtn","Input","useLayoutEffect","REST_TAG_KEY","SelectSelector","props","id","prefixCls","values","open","searchValue","inputRef","placeholder","disabled","mode","showSearch","autoFocus","autoComplete","accessibilityIndex","tabIndex","removeIcon","choiceTransitionName","maxTagCount","maxTagTextLength","_props$maxTagPlacehol","maxTagPlaceholder","omittedValues","concat","tagRender","onSelect","onInputChange","onInputPaste","onInputKeyDown","onInputMouseDown","onInputCompositionStart","onInputCompositionEnd","_React$useState","useState","_React$useState2","motionAppear","setMotionAppear","measureRef","useRef","_React$useState3","_React$useState4","inputWidth","setInputWidth","useEffect","inputValue","inputEditable","current","scrollWidth","displayValues","restCount","slice","map","_ref","label","rest","displayLabel","strLabel","String","selectionNode","createElement","component","motionName","_ref2","value","itemDisabled","className","style","mergedKey","closable","onMouseDown","event","preventDefault","stopPropagation","onClose","selected","onClick","customizeIcon","Fragment","width","ref","inputElement","editable","onKeyDown","onChange","onPaste","onCompositionStart","onCompositionEnd","attrs"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { CSSMotionList } from 'rc-motion';\nimport TransBtn from '../TransBtn';\nimport Input from './Input';\nimport useLayoutEffect from '../hooks/useLayoutEffect';\nvar REST_TAG_KEY = '__RC_SELECT_MAX_REST_COUNT__';\n\nvar SelectSelector = function SelectSelector(props) {\n  var id = props.id,\n      prefixCls = props.prefixCls,\n      values = props.values,\n      open = props.open,\n      searchValue = props.searchValue,\n      inputRef = props.inputRef,\n      placeholder = props.placeholder,\n      disabled = props.disabled,\n      mode = props.mode,\n      showSearch = props.showSearch,\n      autoFocus = props.autoFocus,\n      autoComplete = props.autoComplete,\n      accessibilityIndex = props.accessibilityIndex,\n      tabIndex = props.tabIndex,\n      removeIcon = props.removeIcon,\n      choiceTransitionName = props.choiceTransitionName,\n      maxTagCount = props.maxTagCount,\n      maxTagTextLength = props.maxTagTextLength,\n      _props$maxTagPlacehol = props.maxTagPlaceholder,\n      maxTagPlaceholder = _props$maxTagPlacehol === void 0 ? function (omittedValues) {\n    return \"+ \".concat(omittedValues.length, \" ...\");\n  } : _props$maxTagPlacehol,\n      tagRender = props.tagRender,\n      onSelect = props.onSelect,\n      onInputChange = props.onInputChange,\n      onInputPaste = props.onInputPaste,\n      onInputKeyDown = props.onInputKeyDown,\n      onInputMouseDown = props.onInputMouseDown,\n      onInputCompositionStart = props.onInputCompositionStart,\n      onInputCompositionEnd = props.onInputCompositionEnd;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      motionAppear = _React$useState2[0],\n      setMotionAppear = _React$useState2[1];\n\n  var measureRef = React.useRef(null);\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      inputWidth = _React$useState4[0],\n      setInputWidth = _React$useState4[1]; // ===================== Motion ======================\n\n\n  React.useEffect(function () {\n    setMotionAppear(true);\n  }, []); // ===================== Search ======================\n\n  var inputValue = open || mode === 'tags' ? searchValue : '';\n  var inputEditable = mode === 'tags' || open && showSearch; // We measure width and set to the input immediately\n\n  useLayoutEffect(function () {\n    setInputWidth(measureRef.current.scrollWidth);\n  }, [inputValue]); // ==================== Selection ====================\n\n  var displayValues = values; // Cut by `maxTagCount`\n\n  var restCount;\n\n  if (typeof maxTagCount === 'number') {\n    restCount = values.length - maxTagCount;\n    displayValues = values.slice(0, maxTagCount);\n  } // Update by `maxTagTextLength`\n\n\n  if (typeof maxTagTextLength === 'number') {\n    displayValues = displayValues.map(function (_ref) {\n      var label = _ref.label,\n          rest = _objectWithoutProperties(_ref, [\"label\"]);\n\n      var displayLabel = label;\n\n      if (typeof label === 'string' || typeof label === 'number') {\n        var strLabel = String(displayLabel);\n\n        if (strLabel.length > maxTagTextLength) {\n          displayLabel = \"\".concat(strLabel.slice(0, maxTagTextLength), \"...\");\n        }\n      }\n\n      return _objectSpread(_objectSpread({}, rest), {}, {\n        label: displayLabel\n      });\n    });\n  } // Fill rest\n\n\n  if (restCount > 0) {\n    displayValues.push({\n      key: REST_TAG_KEY,\n      label: typeof maxTagPlaceholder === 'function' ? maxTagPlaceholder(values.slice(maxTagCount)) : maxTagPlaceholder\n    });\n  }\n\n  var selectionNode = React.createElement(CSSMotionList, {\n    component: false,\n    keys: displayValues,\n    motionName: choiceTransitionName,\n    motionAppear: motionAppear\n  }, function (_ref2) {\n    var key = _ref2.key,\n        label = _ref2.label,\n        value = _ref2.value,\n        itemDisabled = _ref2.disabled,\n        className = _ref2.className,\n        style = _ref2.style;\n    var mergedKey = key || value;\n    var closable = key !== REST_TAG_KEY && !itemDisabled;\n\n    var onMouseDown = function onMouseDown(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    var onClose = function onClose(event) {\n      if (event) event.stopPropagation();\n      onSelect(value, {\n        selected: false\n      });\n    };\n\n    return typeof tagRender === 'function' ? React.createElement(\"span\", {\n      key: mergedKey,\n      onMouseDown: onMouseDown,\n      className: className,\n      style: style\n    }, tagRender({\n      label: label,\n      value: value,\n      disabled: itemDisabled,\n      closable: closable,\n      onClose: onClose\n    })) : React.createElement(\"span\", {\n      key: mergedKey,\n      className: classNames(className, \"\".concat(prefixCls, \"-selection-item\"), _defineProperty({}, \"\".concat(prefixCls, \"-selection-item-disabled\"), itemDisabled)),\n      style: style\n    }, React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-selection-item-content\")\n    }, label), closable && React.createElement(TransBtn, {\n      className: \"\".concat(prefixCls, \"-selection-item-remove\"),\n      onMouseDown: onMouseDown,\n      onClick: onClose,\n      customizeIcon: removeIcon\n    }, \"\\xD7\"));\n  });\n  return React.createElement(React.Fragment, null, selectionNode, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\"),\n    style: {\n      width: inputWidth\n    }\n  }, React.createElement(Input, {\n    ref: inputRef,\n    open: open,\n    prefixCls: prefixCls,\n    id: id,\n    inputElement: null,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    autoComplete: autoComplete,\n    editable: inputEditable,\n    accessibilityIndex: accessibilityIndex,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: onInputChange,\n    onPaste: onInputPaste,\n    onCompositionStart: onInputCompositionStart,\n    onCompositionEnd: onInputCompositionEnd,\n    tabIndex: tabIndex,\n    attrs: pickAttrs(props, true)\n  }), React.createElement(\"span\", {\n    ref: measureRef,\n    className: \"\".concat(prefixCls, \"-selection-search-mirror\"),\n    \"aria-hidden\": true\n  }, inputValue, \"\\xA0\")), !values.length && !inputValue && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-placeholder\")\n  }, placeholder));\n};\n\nexport default SelectSelector;"]},"metadata":{},"sourceType":"module"}