{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport { Provider, create } from 'mini-store';\nimport omit from 'omit.js';\nimport SubPopupMenu, { getActiveKey } from './SubPopupMenu';\nimport { noop } from './util';\nimport { getMotion } from './utils/legacyUtil';\n\nvar Menu = /*#__PURE__*/function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _super.call(this, props);\n    _this.inlineOpenKeys = [];\n\n    _this.onSelect = function (selectInfo) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props;\n\n      if (props.selectable) {\n        // root menu\n        var _this$store$getState = _this.store.getState(),\n            _selectedKeys = _this$store$getState.selectedKeys;\n\n        var selectedKey = selectInfo.key;\n\n        if (props.multiple) {\n          _selectedKeys = _selectedKeys.concat([selectedKey]);\n        } else {\n          _selectedKeys = [selectedKey];\n        }\n\n        if (!('selectedKeys' in props)) {\n          _this.store.setState({\n            selectedKeys: _selectedKeys\n          });\n        }\n\n        props.onSelect(_objectSpread(_objectSpread({}, selectInfo), {}, {\n          selectedKeys: _selectedKeys\n        }));\n      }\n    };\n\n    _this.onClick = function (e) {\n      var mode = _this.getRealMenuMode();\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          store = _assertThisInitialize2.store,\n          onOpenChange = _assertThisInitialize2.props.onOpenChange;\n\n      if (mode !== 'inline' && !('openKeys' in _this.props)) {\n        // closing vertical popup submenu after click it\n        store.setState({\n          openKeys: []\n        });\n        onOpenChange([]);\n      }\n\n      _this.props.onClick(e);\n    }; // onKeyDown needs to be exposed as a instance method\n    // e.g., in rc-select, we need to navigate menu item while\n    // current active item is rc-select input box rather than the menu itself\n\n\n    _this.onKeyDown = function (e, callback) {\n      _this.innerMenu.getWrappedInstance().onKeyDown(e, callback);\n    };\n\n    _this.onOpenChange = function (event) {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          props = _assertThisInitialize3.props;\n\n      var openKeys = _this.store.getState().openKeys.concat();\n\n      var changed = false;\n\n      var processSingle = function processSingle(e) {\n        var oneChanged = false;\n\n        if (e.open) {\n          oneChanged = openKeys.indexOf(e.key) === -1;\n\n          if (oneChanged) {\n            openKeys.push(e.key);\n          }\n        } else {\n          var index = openKeys.indexOf(e.key);\n          oneChanged = index !== -1;\n\n          if (oneChanged) {\n            openKeys.splice(index, 1);\n          }\n        }\n\n        changed = changed || oneChanged;\n      };\n\n      if (Array.isArray(event)) {\n        // batch change call\n        event.forEach(processSingle);\n      } else {\n        processSingle(event);\n      }\n\n      if (changed) {\n        if (!('openKeys' in _this.props)) {\n          _this.store.setState({\n            openKeys: openKeys\n          });\n        }\n\n        props.onOpenChange(openKeys);\n      }\n    };\n\n    _this.onDeselect = function (selectInfo) {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          props = _assertThisInitialize4.props;\n\n      if (props.selectable) {\n        var _selectedKeys2 = _this.store.getState().selectedKeys.concat();\n\n        var selectedKey = selectInfo.key;\n\n        var index = _selectedKeys2.indexOf(selectedKey);\n\n        if (index !== -1) {\n          _selectedKeys2.splice(index, 1);\n        }\n\n        if (!('selectedKeys' in props)) {\n          _this.store.setState({\n            selectedKeys: _selectedKeys2\n          });\n        }\n\n        props.onDeselect(_objectSpread(_objectSpread({}, selectInfo), {}, {\n          selectedKeys: _selectedKeys2\n        }));\n      }\n    }; // Restore vertical mode when menu is collapsed responsively when mounted\n    // https://github.com/ant-design/ant-design/issues/13104\n    // TODO: not a perfect solution,\n    // looking a new way to avoid setting switchingModeFromInline in this situation\n\n\n    _this.onMouseEnter = function (e) {\n      _this.restoreModeVerticalFromInline();\n\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter(e);\n      }\n    };\n\n    _this.onTransitionEnd = function (e) {\n      // when inlineCollapsed menu width animation finished\n      // https://github.com/ant-design/ant-design/issues/12864\n      var widthCollapsed = e.propertyName === 'width' && e.target === e.currentTarget; // Fix SVGElement e.target.className.indexOf is not a function\n      // https://github.com/ant-design/ant-design/issues/15699\n\n      var className = e.target.className; // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal,\n      // unless during an animation.\n\n      var classNameValue = Object.prototype.toString.call(className) === '[object SVGAnimatedString]' ? className.animVal : className; // Fix for <Menu style={{ width: '100%' }} />,\n      // the width transition won't trigger when menu is collapsed\n      // https://github.com/ant-design/ant-design-pro/issues/2783\n\n      var iconScaled = e.propertyName === 'font-size' && classNameValue.indexOf('anticon') >= 0;\n\n      if (widthCollapsed || iconScaled) {\n        _this.restoreModeVerticalFromInline();\n      }\n    };\n\n    _this.setInnerMenu = function (node) {\n      _this.innerMenu = node;\n    };\n\n    _this.isRootMenu = true;\n    var selectedKeys = props.defaultSelectedKeys;\n    var openKeys = props.defaultOpenKeys;\n\n    if ('selectedKeys' in props) {\n      selectedKeys = props.selectedKeys || [];\n    }\n\n    if ('openKeys' in props) {\n      openKeys = props.openKeys || [];\n    }\n\n    _this.store = create({\n      selectedKeys: selectedKeys,\n      openKeys: openKeys,\n      activeKey: {\n        '0-menu-': getActiveKey(props, props.activeKey)\n      }\n    });\n    _this.state = {\n      switchingModeFromInline: false\n    };\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateMiniStore();\n      this.updateMenuDisplay();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.updateOpentKeysWhenSwitchMode(prevProps);\n      this.updateMiniStore();\n      var _this$props = this.props,\n          siderCollapsed = _this$props.siderCollapsed,\n          inlineCollapsed = _this$props.inlineCollapsed,\n          onOpenChange = _this$props.onOpenChange;\n\n      if (!prevProps.inlineCollapsed && inlineCollapsed || !prevProps.siderCollapsed && siderCollapsed) {\n        onOpenChange([]);\n      }\n\n      this.updateMenuDisplay();\n    }\n  }, {\n    key: \"updateOpentKeysWhenSwitchMode\",\n    value: function updateOpentKeysWhenSwitchMode(prevProps) {\n      var nextProps = this.props,\n          store = this.store,\n          inlineOpenKeys = this.inlineOpenKeys;\n      var prevState = store.getState();\n      var newState = {};\n\n      if (prevProps.mode === 'inline' && nextProps.mode !== 'inline') {\n        this.setState({\n          switchingModeFromInline: true\n        });\n      }\n\n      if (!('openKeys' in nextProps)) {\n        // [Legacy] Old code will return after `openKeys` changed.\n        // Not sure the reason, we should keep this logic still.\n        if (nextProps.inlineCollapsed && !prevProps.inlineCollapsed || nextProps.siderCollapsed && !prevProps.siderCollapsed) {\n          this.setState({\n            switchingModeFromInline: true\n          });\n          this.inlineOpenKeys = prevState.openKeys.concat();\n          newState.openKeys = [];\n        }\n\n        if (!nextProps.inlineCollapsed && prevProps.inlineCollapsed || !nextProps.siderCollapsed && prevProps.siderCollapsed) {\n          newState.openKeys = inlineOpenKeys;\n          this.inlineOpenKeys = [];\n        }\n      }\n\n      if (Object.keys(newState).length) {\n        store.setState(newState);\n      }\n    }\n  }, {\n    key: \"updateMenuDisplay\",\n    value: function updateMenuDisplay() {\n      var collapsedWidth = this.props.collapsedWidth,\n          store = this.store,\n          prevOpenKeys = this.prevOpenKeys; // https://github.com/ant-design/ant-design/issues/8587\n\n      var hideMenu = this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px');\n\n      if (hideMenu) {\n        this.prevOpenKeys = store.getState().openKeys.concat();\n        this.store.setState({\n          openKeys: []\n        });\n      } else if (prevOpenKeys) {\n        this.store.setState({\n          openKeys: prevOpenKeys\n        });\n        this.prevOpenKeys = null;\n      }\n    }\n  }, {\n    key: \"getRealMenuMode\",\n    value: function getRealMenuMode() {\n      var mode = this.props.mode;\n      var switchingModeFromInline = this.state.switchingModeFromInline;\n      var inlineCollapsed = this.getInlineCollapsed();\n\n      if (switchingModeFromInline && inlineCollapsed) {\n        return 'inline';\n      }\n\n      return inlineCollapsed ? 'vertical' : mode;\n    }\n  }, {\n    key: \"getInlineCollapsed\",\n    value: function getInlineCollapsed() {\n      var _this$props2 = this.props,\n          inlineCollapsed = _this$props2.inlineCollapsed,\n          siderCollapsed = _this$props2.siderCollapsed;\n\n      if (siderCollapsed !== undefined) {\n        return siderCollapsed;\n      }\n\n      return inlineCollapsed;\n    }\n  }, {\n    key: \"restoreModeVerticalFromInline\",\n    value: function restoreModeVerticalFromInline() {\n      var switchingModeFromInline = this.state.switchingModeFromInline;\n\n      if (switchingModeFromInline) {\n        this.setState({\n          switchingModeFromInline: false\n        });\n      }\n    }\n  }, {\n    key: \"updateMiniStore\",\n    value: function updateMiniStore() {\n      if ('selectedKeys' in this.props) {\n        this.store.setState({\n          selectedKeys: this.props.selectedKeys || []\n        });\n      }\n\n      if ('openKeys' in this.props) {\n        this.store.setState({\n          openKeys: this.props.openKeys || []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _objectSpread({}, omit(this.props, ['collapsedWidth', 'siderCollapsed', 'defaultMotions']));\n\n      var mode = this.getRealMenuMode();\n      props.className += \" \".concat(props.prefixCls, \"-root\");\n\n      if (props.direction === 'rtl') {\n        props.className += \" \".concat(props.prefixCls, \"-rtl\");\n      }\n\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        mode: mode,\n        onClick: this.onClick,\n        onOpenChange: this.onOpenChange,\n        onDeselect: this.onDeselect,\n        onSelect: this.onSelect,\n        onMouseEnter: this.onMouseEnter,\n        onTransitionEnd: this.onTransitionEnd,\n        parentMenu: this,\n        motion: getMotion(this.props, this.state, mode)\n      });\n      delete props.openAnimation;\n      delete props.openTransitionName;\n      return React.createElement(Provider, {\n        store: this.store\n      }, React.createElement(SubPopupMenu, Object.assign({}, props, {\n        ref: this.setInnerMenu\n      }), this.props.children));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nMenu.defaultProps = {\n  selectable: true,\n  onClick: noop,\n  onSelect: noop,\n  onOpenChange: noop,\n  onDeselect: noop,\n  defaultSelectedKeys: [],\n  defaultOpenKeys: [],\n  subMenuOpenDelay: 0.1,\n  subMenuCloseDelay: 0.1,\n  triggerSubMenuAction: 'hover',\n  prefixCls: 'rc-menu',\n  className: '',\n  mode: 'vertical',\n  style: {},\n  builtinPlacements: {},\n  overflowedIndicator: React.createElement(\"span\", null, \"\\xB7\\xB7\\xB7\")\n};\nexport default Menu;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/antd/node_modules/rc-menu/es/Menu.js"],"names":["_objectSpread","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","React","Provider","create","omit","SubPopupMenu","getActiveKey","noop","getMotion","Menu","_React$Component","_super","props","_this","call","inlineOpenKeys","onSelect","selectInfo","_assertThisInitialize","selectable","_this$store$getState","store","getState","_selectedKeys","selectedKeys","selectedKey","key","multiple","concat","setState","onClick","e","mode","getRealMenuMode","_assertThisInitialize2","onOpenChange","openKeys","onKeyDown","callback","innerMenu","getWrappedInstance","event","_assertThisInitialize3","changed","processSingle","oneChanged","open","indexOf","push","index","splice","Array","isArray","forEach","onDeselect","_assertThisInitialize4","_selectedKeys2","onMouseEnter","restoreModeVerticalFromInline","onTransitionEnd","widthCollapsed","propertyName","target","currentTarget","className","classNameValue","Object","prototype","toString","animVal","iconScaled","setInnerMenu","node","isRootMenu","defaultSelectedKeys","defaultOpenKeys","activeKey","state","switchingModeFromInline","value","componentDidMount","updateMiniStore","updateMenuDisplay","componentDidUpdate","prevProps","updateOpentKeysWhenSwitchMode","_this$props","siderCollapsed","inlineCollapsed","nextProps","prevState","newState","keys","length","collapsedWidth","prevOpenKeys","hideMenu","getInlineCollapsed","_this$props2","undefined","render","prefixCls","direction","parentMenu","motion","openAnimation","openTransitionName","createElement","assign","ref","children","Component","defaultProps","subMenuOpenDelay","subMenuCloseDelay","triggerSubMenuAction","style","builtinPlacements","overflowedIndicator"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport { Provider, create } from 'mini-store';\nimport omit from 'omit.js';\nimport SubPopupMenu, { getActiveKey } from './SubPopupMenu';\nimport { noop } from './util';\nimport { getMotion } from './utils/legacyUtil';\n\nvar Menu = /*#__PURE__*/function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _super.call(this, props);\n    _this.inlineOpenKeys = [];\n\n    _this.onSelect = function (selectInfo) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props;\n\n      if (props.selectable) {\n        // root menu\n        var _this$store$getState = _this.store.getState(),\n            _selectedKeys = _this$store$getState.selectedKeys;\n\n        var selectedKey = selectInfo.key;\n\n        if (props.multiple) {\n          _selectedKeys = _selectedKeys.concat([selectedKey]);\n        } else {\n          _selectedKeys = [selectedKey];\n        }\n\n        if (!('selectedKeys' in props)) {\n          _this.store.setState({\n            selectedKeys: _selectedKeys\n          });\n        }\n\n        props.onSelect(_objectSpread(_objectSpread({}, selectInfo), {}, {\n          selectedKeys: _selectedKeys\n        }));\n      }\n    };\n\n    _this.onClick = function (e) {\n      var mode = _this.getRealMenuMode();\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          store = _assertThisInitialize2.store,\n          onOpenChange = _assertThisInitialize2.props.onOpenChange;\n\n      if (mode !== 'inline' && !('openKeys' in _this.props)) {\n        // closing vertical popup submenu after click it\n        store.setState({\n          openKeys: []\n        });\n        onOpenChange([]);\n      }\n\n      _this.props.onClick(e);\n    }; // onKeyDown needs to be exposed as a instance method\n    // e.g., in rc-select, we need to navigate menu item while\n    // current active item is rc-select input box rather than the menu itself\n\n\n    _this.onKeyDown = function (e, callback) {\n      _this.innerMenu.getWrappedInstance().onKeyDown(e, callback);\n    };\n\n    _this.onOpenChange = function (event) {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          props = _assertThisInitialize3.props;\n\n      var openKeys = _this.store.getState().openKeys.concat();\n\n      var changed = false;\n\n      var processSingle = function processSingle(e) {\n        var oneChanged = false;\n\n        if (e.open) {\n          oneChanged = openKeys.indexOf(e.key) === -1;\n\n          if (oneChanged) {\n            openKeys.push(e.key);\n          }\n        } else {\n          var index = openKeys.indexOf(e.key);\n          oneChanged = index !== -1;\n\n          if (oneChanged) {\n            openKeys.splice(index, 1);\n          }\n        }\n\n        changed = changed || oneChanged;\n      };\n\n      if (Array.isArray(event)) {\n        // batch change call\n        event.forEach(processSingle);\n      } else {\n        processSingle(event);\n      }\n\n      if (changed) {\n        if (!('openKeys' in _this.props)) {\n          _this.store.setState({\n            openKeys: openKeys\n          });\n        }\n\n        props.onOpenChange(openKeys);\n      }\n    };\n\n    _this.onDeselect = function (selectInfo) {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          props = _assertThisInitialize4.props;\n\n      if (props.selectable) {\n        var _selectedKeys2 = _this.store.getState().selectedKeys.concat();\n\n        var selectedKey = selectInfo.key;\n\n        var index = _selectedKeys2.indexOf(selectedKey);\n\n        if (index !== -1) {\n          _selectedKeys2.splice(index, 1);\n        }\n\n        if (!('selectedKeys' in props)) {\n          _this.store.setState({\n            selectedKeys: _selectedKeys2\n          });\n        }\n\n        props.onDeselect(_objectSpread(_objectSpread({}, selectInfo), {}, {\n          selectedKeys: _selectedKeys2\n        }));\n      }\n    }; // Restore vertical mode when menu is collapsed responsively when mounted\n    // https://github.com/ant-design/ant-design/issues/13104\n    // TODO: not a perfect solution,\n    // looking a new way to avoid setting switchingModeFromInline in this situation\n\n\n    _this.onMouseEnter = function (e) {\n      _this.restoreModeVerticalFromInline();\n\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter(e);\n      }\n    };\n\n    _this.onTransitionEnd = function (e) {\n      // when inlineCollapsed menu width animation finished\n      // https://github.com/ant-design/ant-design/issues/12864\n      var widthCollapsed = e.propertyName === 'width' && e.target === e.currentTarget; // Fix SVGElement e.target.className.indexOf is not a function\n      // https://github.com/ant-design/ant-design/issues/15699\n\n      var className = e.target.className; // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal,\n      // unless during an animation.\n\n      var classNameValue = Object.prototype.toString.call(className) === '[object SVGAnimatedString]' ? className.animVal : className; // Fix for <Menu style={{ width: '100%' }} />,\n      // the width transition won't trigger when menu is collapsed\n      // https://github.com/ant-design/ant-design-pro/issues/2783\n\n      var iconScaled = e.propertyName === 'font-size' && classNameValue.indexOf('anticon') >= 0;\n\n      if (widthCollapsed || iconScaled) {\n        _this.restoreModeVerticalFromInline();\n      }\n    };\n\n    _this.setInnerMenu = function (node) {\n      _this.innerMenu = node;\n    };\n\n    _this.isRootMenu = true;\n    var selectedKeys = props.defaultSelectedKeys;\n    var openKeys = props.defaultOpenKeys;\n\n    if ('selectedKeys' in props) {\n      selectedKeys = props.selectedKeys || [];\n    }\n\n    if ('openKeys' in props) {\n      openKeys = props.openKeys || [];\n    }\n\n    _this.store = create({\n      selectedKeys: selectedKeys,\n      openKeys: openKeys,\n      activeKey: {\n        '0-menu-': getActiveKey(props, props.activeKey)\n      }\n    });\n    _this.state = {\n      switchingModeFromInline: false\n    };\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateMiniStore();\n      this.updateMenuDisplay();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.updateOpentKeysWhenSwitchMode(prevProps);\n      this.updateMiniStore();\n      var _this$props = this.props,\n          siderCollapsed = _this$props.siderCollapsed,\n          inlineCollapsed = _this$props.inlineCollapsed,\n          onOpenChange = _this$props.onOpenChange;\n\n      if (!prevProps.inlineCollapsed && inlineCollapsed || !prevProps.siderCollapsed && siderCollapsed) {\n        onOpenChange([]);\n      }\n\n      this.updateMenuDisplay();\n    }\n  }, {\n    key: \"updateOpentKeysWhenSwitchMode\",\n    value: function updateOpentKeysWhenSwitchMode(prevProps) {\n      var nextProps = this.props,\n          store = this.store,\n          inlineOpenKeys = this.inlineOpenKeys;\n      var prevState = store.getState();\n      var newState = {};\n\n      if (prevProps.mode === 'inline' && nextProps.mode !== 'inline') {\n        this.setState({\n          switchingModeFromInline: true\n        });\n      }\n\n      if (!('openKeys' in nextProps)) {\n        // [Legacy] Old code will return after `openKeys` changed.\n        // Not sure the reason, we should keep this logic still.\n        if (nextProps.inlineCollapsed && !prevProps.inlineCollapsed || nextProps.siderCollapsed && !prevProps.siderCollapsed) {\n          this.setState({\n            switchingModeFromInline: true\n          });\n          this.inlineOpenKeys = prevState.openKeys.concat();\n          newState.openKeys = [];\n        }\n\n        if (!nextProps.inlineCollapsed && prevProps.inlineCollapsed || !nextProps.siderCollapsed && prevProps.siderCollapsed) {\n          newState.openKeys = inlineOpenKeys;\n          this.inlineOpenKeys = [];\n        }\n      }\n\n      if (Object.keys(newState).length) {\n        store.setState(newState);\n      }\n    }\n  }, {\n    key: \"updateMenuDisplay\",\n    value: function updateMenuDisplay() {\n      var collapsedWidth = this.props.collapsedWidth,\n          store = this.store,\n          prevOpenKeys = this.prevOpenKeys; // https://github.com/ant-design/ant-design/issues/8587\n\n      var hideMenu = this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px');\n\n      if (hideMenu) {\n        this.prevOpenKeys = store.getState().openKeys.concat();\n        this.store.setState({\n          openKeys: []\n        });\n      } else if (prevOpenKeys) {\n        this.store.setState({\n          openKeys: prevOpenKeys\n        });\n        this.prevOpenKeys = null;\n      }\n    }\n  }, {\n    key: \"getRealMenuMode\",\n    value: function getRealMenuMode() {\n      var mode = this.props.mode;\n      var switchingModeFromInline = this.state.switchingModeFromInline;\n      var inlineCollapsed = this.getInlineCollapsed();\n\n      if (switchingModeFromInline && inlineCollapsed) {\n        return 'inline';\n      }\n\n      return inlineCollapsed ? 'vertical' : mode;\n    }\n  }, {\n    key: \"getInlineCollapsed\",\n    value: function getInlineCollapsed() {\n      var _this$props2 = this.props,\n          inlineCollapsed = _this$props2.inlineCollapsed,\n          siderCollapsed = _this$props2.siderCollapsed;\n\n      if (siderCollapsed !== undefined) {\n        return siderCollapsed;\n      }\n\n      return inlineCollapsed;\n    }\n  }, {\n    key: \"restoreModeVerticalFromInline\",\n    value: function restoreModeVerticalFromInline() {\n      var switchingModeFromInline = this.state.switchingModeFromInline;\n\n      if (switchingModeFromInline) {\n        this.setState({\n          switchingModeFromInline: false\n        });\n      }\n    }\n  }, {\n    key: \"updateMiniStore\",\n    value: function updateMiniStore() {\n      if ('selectedKeys' in this.props) {\n        this.store.setState({\n          selectedKeys: this.props.selectedKeys || []\n        });\n      }\n\n      if ('openKeys' in this.props) {\n        this.store.setState({\n          openKeys: this.props.openKeys || []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _objectSpread({}, omit(this.props, ['collapsedWidth', 'siderCollapsed', 'defaultMotions']));\n\n      var mode = this.getRealMenuMode();\n      props.className += \" \".concat(props.prefixCls, \"-root\");\n\n      if (props.direction === 'rtl') {\n        props.className += \" \".concat(props.prefixCls, \"-rtl\");\n      }\n\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        mode: mode,\n        onClick: this.onClick,\n        onOpenChange: this.onOpenChange,\n        onDeselect: this.onDeselect,\n        onSelect: this.onSelect,\n        onMouseEnter: this.onMouseEnter,\n        onTransitionEnd: this.onTransitionEnd,\n        parentMenu: this,\n        motion: getMotion(this.props, this.state, mode)\n      });\n      delete props.openAnimation;\n      delete props.openTransitionName;\n      return React.createElement(Provider, {\n        store: this.store\n      }, React.createElement(SubPopupMenu, Object.assign({}, props, {\n        ref: this.setInnerMenu\n      }), this.props.children));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nMenu.defaultProps = {\n  selectable: true,\n  onClick: noop,\n  onSelect: noop,\n  onOpenChange: noop,\n  onDeselect: noop,\n  defaultSelectedKeys: [],\n  defaultOpenKeys: [],\n  subMenuOpenDelay: 0.1,\n  subMenuCloseDelay: 0.1,\n  triggerSubMenuAction: 'hover',\n  prefixCls: 'rc-menu',\n  className: '',\n  mode: 'vertical',\n  style: {},\n  builtinPlacements: {},\n  overflowedIndicator: React.createElement(\"span\", null, \"\\xB7\\xB7\\xB7\")\n};\nexport default Menu;"]},"metadata":{},"sourceType":"module"}