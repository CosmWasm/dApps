{"ast":null,"code":"import \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport Field from '../field'; // declare class Select<ValueType extends SelectValue = SelectValue> extends React.Component<SelectProps<ValueType>> {\n\nexport const Select = _a => {\n  var {\n    name,\n    validate,\n    fast,\n    children,\n    onChange,\n    onBlur\n  } = _a,\n      restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"children\", \"onChange\", \"onBlur\"]);\n\n  return React.createElement(Field, {\n    name: name,\n    validate: validate,\n    fast: fast\n  }, ({\n    field: {\n      value\n    },\n    form: {\n      setFieldValue,\n      setFieldTouched\n    }\n  }) => React.createElement(_Select, Object.assign({\n    onChange: (value, option) => {\n      setFieldValue(name, value);\n      onChange && onChange(value, option);\n    },\n    onBlur: value => {\n      setFieldTouched(name);\n      onBlur && onBlur(value);\n    },\n    // setting undefined will show the placeholder\n    value: value === '' || value === null ? undefined : value\n  }, restProps), children));\n};\nexport default Select;\nSelect.Option = _Select.Option;\nSelect.OptGroup = _Select.OptGroup;","map":{"version":3,"sources":["../../src/select/index.tsx"],"names":[],"mappings":";;;AAEA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAGA,OAAO,KAAP,MAAkB,UAAlB,C,CAIA;;AACA,OAAO,MAAM,MAAM,GAAI,EAAD,IAQJ;MARK;AACrB,IAAA,IADqB;AAErB,IAAA,QAFqB;AAGrB,IAAA,IAHqB;AAIrB,IAAA,QAJqB;AAKrB,IAAA,QALqB;AAMrB,IAAA;AANqB,MAMf,E;MACN,SAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,CAAA,C;;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,IAAA,IAAI,EAAE,IAAP;AAAa,IAAA,QAAQ,EAAE,QAAvB;AAAiC,IAAA,IAAI,EAAE;AAAvC,GAAN,EACG,CAAC;AACA,IAAA,KAAK,EAAE;AAAE,MAAA;AAAF,KADP;AAEA,IAAA,IAAI,EAAE;AAAE,MAAA,aAAF;AAAiB,MAAA;AAAjB;AAFN,GAAD,KAIC,KAAA,CAAA,aAAA,UAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,MAAR,KAAkB;AAC1B,MAAA,aAAa,CAAC,IAAD,EAAO,KAAP,CAAb;AACA,MAAA,QAAQ,IAAI,QAAQ,CAAC,KAAD,EAAQ,MAAR,CAApB;AACD,KAJK;AAKN,IAAA,MAAM,EAAG,KAAD,IAAU;AAChB,MAAA,eAAe,CAAC,IAAD,CAAf;AACA,MAAA,MAAM,IAAI,MAAM,CAAC,KAAD,CAAhB;AACD,KARK;AASN;AACA,IAAA,KAAK,EAAE,KAAK,KAAK,EAAV,IAAgB,KAAK,KAAK,IAA1B,GAAiC,SAAjC,GAA6C;AAV9C,GAAA,EAWF,SAXE,CAAR,EAaG,QAbH,CALJ,CADF;AAwBD,CAjCM;AAmCP,eAAe,MAAf;AAEA,MAAM,CAAC,MAAP,GAAgB,QAAQ,MAAxB;AACA,MAAM,CAAC,QAAP,GAAkB,QAAQ,QAA1B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport { Select as $Select } from 'antd';\nimport * as React from 'react';\nimport Field from '../field';\n// declare class Select<ValueType extends SelectValue = SelectValue> extends React.Component<SelectProps<ValueType>> {\nexport const Select = (_a) => {\n    var { name, validate, fast, children, onChange, onBlur } = _a, restProps = __rest(_a, [\"name\", \"validate\", \"fast\", \"children\", \"onChange\", \"onBlur\"]);\n    return (React.createElement(Field, { name: name, validate: validate, fast: fast }, ({ field: { value }, form: { setFieldValue, setFieldTouched }, }) => (React.createElement($Select, Object.assign({ onChange: (value, option) => {\n            setFieldValue(name, value);\n            onChange && onChange(value, option);\n        }, onBlur: (value) => {\n            setFieldTouched(name);\n            onBlur && onBlur(value);\n        }, \n        // setting undefined will show the placeholder\n        value: value === '' || value === null ? undefined : value }, restProps), children))));\n};\nexport default Select;\nSelect.Option = $Select.Option;\nSelect.OptGroup = $Select.OptGroup;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}