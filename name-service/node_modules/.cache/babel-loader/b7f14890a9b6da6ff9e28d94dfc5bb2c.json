{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nvar _jsxFileName = \"/home/abefernan/cosmwasm/dApps/packages/name-service/src/App/routes/Transfer/FormTransferName.tsx\";\nimport { Formik } from \"formik\";\nimport { Form, FormItem } from \"formik-antd\";\nimport React from \"react\";\nimport Search from \"../../forms/Search\";\nimport { TransferValidationSchema } from \"../../forms/validationSchemas\";\n\nfunction FormTransferName({\n  setNewOwnerAddress,\n  transferButtonText,\n  transferButtonAction\n}) {\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      address: \"\"\n    },\n    isInitialValid: false,\n    validationSchema: TransferValidationSchema,\n    onSubmit: values => {\n      setNewOwnerAddress(values.address);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, formikProps => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    name: \"address\",\n    placeholder: \"Enter address\",\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    onClick: transferButtonAction,\n    disabled: !formikProps.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, transferButtonText)));\n}\n\nexport default FormTransferName;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/packages/name-service/src/App/routes/Transfer/FormTransferName.tsx"],"names":["Formik","Form","FormItem","React","Search","TransferValidationSchema","FormTransferName","setNewOwnerAddress","transferButtonText","transferButtonAction","address","values","formikProps","isValid"],"mappings":";;;AACA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,aAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;;AAQA,SAASC,gBAAT,CAA0B;AACxBC,EAAAA,kBADwB;AAExBC,EAAAA,kBAFwB;AAGxBC,EAAAA;AAHwB,CAA1B,EAIuC;AACrC,sBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADjB;AAEE,IAAA,cAAc,EAAE,KAFlB;AAGE,IAAA,gBAAgB,EAAEL,wBAHpB;AAIE,IAAA,QAAQ,EAAGM,MAAD,IAAY;AACpBJ,MAAAA,kBAAkB,CAACI,MAAM,CAACD,OAAR,CAAlB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQIE,WAAD,iBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,WAAW,EAAC,eAAnC;AAAmD,IAAA,WAAW,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEH,oBAAhC;AAAsD,IAAA,QAAQ,EAAE,CAACG,WAAW,CAACC,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,kBADH,CAJF,CATJ,CADF;AAqBD;;AAED,eAAeF,gBAAf","sourcesContent":["import { Button } from \"antd\";\nimport { Formik } from \"formik\";\nimport { Form, FormItem } from \"formik-antd\";\nimport React from \"react\";\nimport Search from \"../../forms/Search\";\nimport { TransferValidationSchema } from \"../../forms/validationSchemas\";\n\ninterface FormTransferNameProps {\n  readonly setNewOwnerAddress: (value: React.SetStateAction<string>) => void;\n  readonly transferButtonText: string;\n  readonly transferButtonAction: () => void;\n}\n\nfunction FormTransferName({\n  setNewOwnerAddress,\n  transferButtonText,\n  transferButtonAction,\n}: FormTransferNameProps): JSX.Element {\n  return (\n    <Formik\n      initialValues={{ address: \"\" }}\n      isInitialValid={false}\n      validationSchema={TransferValidationSchema}\n      onSubmit={(values) => {\n        setNewOwnerAddress(values.address);\n      }}\n    >\n      {(formikProps) => (\n        <Form>\n          <FormItem name=\"address\">\n            <Search name=\"address\" placeholder=\"Enter address\" enterButton />\n          </FormItem>\n          <Button type=\"primary\" onClick={transferButtonAction} disabled={!formikProps.isValid}>\n            {transferButtonText}\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default FormTransferName;\n"]},"metadata":{},"sourceType":"module"}