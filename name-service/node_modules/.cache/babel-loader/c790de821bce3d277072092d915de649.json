{"ast":null,"code":"var _jsxFileName = \"/home/abefernan/cosmwasm/dApps/packages/name-service/src/service/error.tsx\";\nimport * as React from \"react\";\nconst defaultContext = {\n  setError: () => {\n    return;\n  },\n  clearError: () => {\n    return;\n  }\n};\nconst ErrorContext = React.createContext(defaultContext);\nexport const useError = () => React.useContext(ErrorContext);\nexport function ErrorProvider({\n  children\n}) {\n  const [error, setError] = React.useState();\n  const context = {\n    error: error,\n    setError: setError,\n    clearError: () => {\n      setError(undefined);\n    }\n  };\n  return /*#__PURE__*/React.createElement(ErrorContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, children);\n}","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/packages/name-service/src/service/error.tsx"],"names":["React","defaultContext","setError","clearError","ErrorContext","createContext","useError","useContext","ErrorProvider","children","error","useState","context","undefined"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAQA,MAAMC,cAAgC,GAAG;AACvCC,EAAAA,QAAQ,EAAE,MAAM;AACd;AACD,GAHsC;AAIvCC,EAAAA,UAAU,EAAE,MAAM;AAChB;AACD;AANsC,CAAzC;AASA,MAAMC,YAAY,GAAGJ,KAAK,CAACK,aAAN,CAAsCJ,cAAtC,CAArB;AAEA,OAAO,MAAMK,QAAQ,GAAG,MAAwBN,KAAK,CAACO,UAAN,CAAiBH,YAAjB,CAAzC;AAEP,OAAO,SAASI,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA0F;AAC/F,QAAM,CAACC,KAAD,EAAQR,QAAR,IAAoBF,KAAK,CAACW,QAAN,EAA1B;AAEA,QAAMC,OAAyB,GAAG;AAChCF,IAAAA,KAAK,EAAEA,KADyB;AAEhCR,IAAAA,QAAQ,EAAEA,QAFsB;AAGhCC,IAAAA,UAAU,EAAE,MAAM;AAChBD,MAAAA,QAAQ,CAACW,SAAD,CAAR;AACD;AAL+B,GAAlC;AAQA,sBAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAED,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCH,QAAxC,CAAP;AACD","sourcesContent":["import * as React from \"react\";\n\ninterface ErrorContextType {\n  readonly error?: string;\n  readonly setError: (err: string) => void;\n  readonly clearError: () => void;\n}\n\nconst defaultContext: ErrorContextType = {\n  setError: () => {\n    return;\n  },\n  clearError: () => {\n    return;\n  },\n};\n\nconst ErrorContext = React.createContext<ErrorContextType>(defaultContext);\n\nexport const useError = (): ErrorContextType => React.useContext(ErrorContext);\n\nexport function ErrorProvider({ children }: React.HTMLAttributes<HTMLOrSVGElement>): JSX.Element {\n  const [error, setError] = React.useState<string>();\n\n  const context: ErrorContextType = {\n    error: error,\n    setError: setError,\n    clearError: () => {\n      setError(undefined);\n    },\n  };\n\n  return <ErrorContext.Provider value={context}>{children}</ErrorContext.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}