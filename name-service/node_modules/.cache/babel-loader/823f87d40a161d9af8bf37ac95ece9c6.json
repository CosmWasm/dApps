{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport { toArray } from './utils/typeUtil';\nimport { validateRules } from './utils/validateUtil';\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\n\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n\n  return prevValue !== nextValue;\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\n\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  var _super = _createSuper(Field);\n\n  function Field() {\n    var _this;\n\n    _classCallCheck(this, Field);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.destroy = false;\n    /**\n     * Follow state should not management in State since it will async update by React.\n     * This makes first render of form can not get correct state value.\n     */\n\n    _this.touched = false;\n    /** Mark when touched & validated. Currently only used for `dependencies` */\n\n    _this.dirty = false;\n    _this.validatePromise = null;\n    _this.errors = [];\n\n    _this.cancelRegister = function () {\n      var preserve = _this.props.preserve;\n\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(preserve);\n      }\n\n      _this.cancelRegisterFunc = null;\n    }; // ================================== Utils ==================================\n\n\n    _this.getNamePath = function () {\n      var name = _this.props.name;\n      var _this$context$prefixN = _this.context.prefixName,\n          prefixName = _this$context$prefixN === void 0 ? [] : _this$context$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n\n    _this.getRules = function () {\n      var _this$props$rules = _this.props.rules,\n          rules = _this$props$rules === void 0 ? [] : _this$props$rules;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(_this.context);\n        }\n\n        return rule;\n      });\n    };\n\n    _this.refresh = function () {\n      if (_this.destroy) return;\n      /**\n       * Clean up current node.\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    }; // ========================= Field Entity Interfaces =========================\n    // Trigger by store update. Check if need update the component\n\n\n    _this.onStoreChange = function (prevStore, namePathList, info) {\n      var _this$props = _this.props,\n          shouldUpdate = _this$props.shouldUpdate,\n          _this$props$dependenc = _this$props.dependencies,\n          dependencies = _this$props$dependenc === void 0 ? [] : _this$props$dependenc,\n          onReset = _this$props.onReset;\n      var store = info.store;\n\n      var namePath = _this.getNamePath();\n\n      var prevValue = _this.getValue(prevStore);\n\n      var curValue = _this.getValue(store);\n\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = [];\n      }\n\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = null;\n            _this.errors = [];\n\n            if (onReset) {\n              onReset();\n            }\n\n            _this.refresh();\n\n            return;\n          }\n\n          break;\n\n        case 'setField':\n          {\n            if (namePathMatch) {\n              var data = info.data;\n\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n\n              if ('errors' in data) {\n                _this.errors = data.errors || [];\n              }\n\n              _this.dirty = true;\n\n              _this.reRender();\n\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath); // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\n            // emitted earlier and they will work there\n            // If set it may cause unnecessary twice rerendering\n\n            if (dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        default:\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\n          // 2.\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\n          //       is not provided\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\n          //       else to check if value changed\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n\n            return;\n          }\n\n          break;\n      }\n\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n\n    _this.validateRules = function (options) {\n      var _this$props2 = _this.props,\n          _this$props2$validate = _this$props2.validateFirst,\n          validateFirst = _this$props2$validate === void 0 ? false : _this$props2$validate,\n          messageVariables = _this$props2.messageVariables;\n\n      var _ref2 = options || {},\n          triggerName = _ref2.triggerName;\n\n      var namePath = _this.getNamePath();\n\n      var filteredRules = _this.getRules();\n\n      if (triggerName) {\n        filteredRules = filteredRules.filter(function (rule) {\n          var validateTrigger = rule.validateTrigger;\n\n          if (!validateTrigger) {\n            return true;\n          }\n\n          var triggerList = toArray(validateTrigger);\n          return triggerList.includes(triggerName);\n        });\n      }\n\n      var promise = validateRules(namePath, _this.getValue(), filteredRules, options, validateFirst, messageVariables);\n      _this.dirty = true;\n      _this.validatePromise = promise;\n      _this.errors = [];\n      promise.catch(function (e) {\n        return e;\n      }).then(function () {\n        var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        if (_this.validatePromise === promise) {\n          _this.validatePromise = null;\n          _this.errors = errors;\n\n          _this.reRender();\n        }\n      });\n      return promise;\n    };\n\n    _this.isFieldValidating = function () {\n      return !!_this.validatePromise;\n    };\n\n    _this.isFieldTouched = function () {\n      return _this.touched;\n    };\n\n    _this.isFieldDirty = function () {\n      return _this.dirty;\n    };\n\n    _this.getErrors = function () {\n      return _this.errors;\n    }; // ============================= Child Component =============================\n\n\n    _this.getMeta = function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        name: _this.getNamePath()\n      };\n      return meta;\n    }; // Only return validate child node. If invalidate, will do nothing about field.\n\n\n    _this.getOnlyChild = function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var meta = _this.getMeta();\n\n        return _objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.context)), {\n          isFunction: true\n        });\n      } // Filed element only\n\n\n      var childList = toChildrenArray(children);\n\n      if (childList.length !== 1 || !React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    }; // ============================== Field Control ==============================\n\n\n    _this.getValue = function (store) {\n      var getFieldsValue = _this.context.getFieldsValue;\n\n      var namePath = _this.getNamePath();\n\n      return getValue(store || getFieldsValue(true), namePath);\n    };\n\n    _this.getControlled = function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props3 = _this.props,\n          trigger = _this$props3.trigger,\n          validateTrigger = _this$props3.validateTrigger,\n          getValueFromEvent = _this$props3.getValueFromEvent,\n          normalize = _this$props3.normalize,\n          valuePropName = _this$props3.valuePropName,\n          getValueProps = _this$props3.getValueProps;\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : _this.context.validateTrigger;\n\n      var namePath = _this.getNamePath();\n\n      var _this$context = _this.context,\n          getInternalHooks = _this$context.getInternalHooks,\n          getFieldsValue = _this$context.getFieldsValue;\n\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n          dispatch = _getInternalHooks.dispatch;\n\n      var value = _this.getValue();\n\n      var mergedGetValueProps = getValueProps || function (val) {\n        return _defineProperty({}, valuePropName, val);\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var originTriggerFunc = childProps[trigger];\n\n      var control = _objectSpread({}, childProps, {}, mergedGetValueProps(value)); // Add trigger\n\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        _this.dirty = true;\n        var newValue;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n\n          var rules = _this.props.rules;\n\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    };\n\n    return _this;\n  } // ============================== Subscriptions ==============================\n\n\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var shouldUpdate = this.props.shouldUpdate;\n      var getInternalHooks = this.context.getInternalHooks;\n\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n          registerField = _getInternalHooks2.registerField;\n\n      this.cancelRegisterFunc = registerField(this); // One more render for component in case fields not ready\n\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.destroy = true;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (this.destroy) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n\n      var _this$getOnlyChild = this.getOnlyChild(children),\n          child = _this$getOnlyChild.child,\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n\n      var returnChildNode;\n\n      if (isFunction) {\n        returnChildNode = child;\n      } else if (React.isValidElement(child)) {\n        returnChildNode = React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n\n      return React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n\n  return Field;\n}(React.Component);\n\nField.contextType = FieldContext;\nField.defaultProps = {\n  trigger: 'onChange',\n  valuePropName: 'value'\n};\n\nvar WrapperField = function WrapperField(_ref4) {\n  var name = _ref4.name,\n      isListField = _ref4.isListField,\n      restProps = _objectWithoutProperties(_ref4, [\"name\", \"isListField\"]);\n\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  var key = 'keep';\n\n  if (!isListField) {\n    key = \"_\".concat((namePath || []).join('_'));\n  }\n\n  return React.createElement(Field, Object.assign({\n    key: key,\n    name: namePath\n  }, restProps));\n};\n\nexport default WrapperField;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/rc-field-form/es/Field.js"],"names":["_objectWithoutProperties","_defineProperty","_toConsumableArray","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","Super","result","_isNativeReflectConstruct","NewTarget","constructor","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","toChildrenArray","warning","React","FieldContext","HOOK_MARK","toArray","validateRules","containsNamePath","defaultGetValueFromEvent","getNamePath","getValue","requireUpdate","shouldUpdate","prev","next","prevValue","nextValue","info","Field","_React$Component","_super","_this","state","resetCount","cancelRegisterFunc","destroy","touched","dirty","validatePromise","errors","cancelRegister","preserve","props","name","_this$context$prefixN","context","prefixName","undefined","concat","getRules","_this$props$rules","rules","map","rule","refresh","setState","_ref","onStoreChange","prevStore","namePathList","_this$props","_this$props$dependenc","dependencies","onReset","store","namePath","curValue","namePathMatch","type","data","validating","Promise","resolve","reRender","dependencyList","some","dependency","relatedFields","options","_this$props2","_this$props2$validate","validateFirst","messageVariables","_ref2","triggerName","filteredRules","validateTrigger","triggerList","includes","promise","catch","then","isFieldValidating","isFieldTouched","isFieldDirty","getErrors","getMeta","prevValidating","meta","getOnlyChild","children","getControlled","isFunction","childList","isValidElement","child","getFieldsValue","childProps","_this$props3","trigger","getValueFromEvent","normalize","valuePropName","getValueProps","mergedValidateTrigger","_this$context","getInternalHooks","_getInternalHooks","dispatch","value","mergedGetValueProps","val","originTriggerFunc","control","newValue","_len","args","Array","_key","validateTriggerList","originTrigger","componentDidMount","_getInternalHooks2","registerField","componentWillUnmount","forceUpdate","render","_this$getOnlyChild","returnChildNode","cloneElement","createElement","Fragment","Component","contextType","defaultProps","WrapperField","_ref4","isListField","restProps","join","assign"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport { toArray } from './utils/typeUtil';\nimport { validateRules } from './utils/validateUtil';\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\n\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n\n  return prevValue !== nextValue;\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\n\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  var _super = _createSuper(Field);\n\n  function Field() {\n    var _this;\n\n    _classCallCheck(this, Field);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.destroy = false;\n    /**\n     * Follow state should not management in State since it will async update by React.\n     * This makes first render of form can not get correct state value.\n     */\n\n    _this.touched = false;\n    /** Mark when touched & validated. Currently only used for `dependencies` */\n\n    _this.dirty = false;\n    _this.validatePromise = null;\n    _this.errors = [];\n\n    _this.cancelRegister = function () {\n      var preserve = _this.props.preserve;\n\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(preserve);\n      }\n\n      _this.cancelRegisterFunc = null;\n    }; // ================================== Utils ==================================\n\n\n    _this.getNamePath = function () {\n      var name = _this.props.name;\n      var _this$context$prefixN = _this.context.prefixName,\n          prefixName = _this$context$prefixN === void 0 ? [] : _this$context$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n\n    _this.getRules = function () {\n      var _this$props$rules = _this.props.rules,\n          rules = _this$props$rules === void 0 ? [] : _this$props$rules;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(_this.context);\n        }\n\n        return rule;\n      });\n    };\n\n    _this.refresh = function () {\n      if (_this.destroy) return;\n      /**\n       * Clean up current node.\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    }; // ========================= Field Entity Interfaces =========================\n    // Trigger by store update. Check if need update the component\n\n\n    _this.onStoreChange = function (prevStore, namePathList, info) {\n      var _this$props = _this.props,\n          shouldUpdate = _this$props.shouldUpdate,\n          _this$props$dependenc = _this$props.dependencies,\n          dependencies = _this$props$dependenc === void 0 ? [] : _this$props$dependenc,\n          onReset = _this$props.onReset;\n      var store = info.store;\n\n      var namePath = _this.getNamePath();\n\n      var prevValue = _this.getValue(prevStore);\n\n      var curValue = _this.getValue(store);\n\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = [];\n      }\n\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = null;\n            _this.errors = [];\n\n            if (onReset) {\n              onReset();\n            }\n\n            _this.refresh();\n\n            return;\n          }\n\n          break;\n\n        case 'setField':\n          {\n            if (namePathMatch) {\n              var data = info.data;\n\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n\n              if ('errors' in data) {\n                _this.errors = data.errors || [];\n              }\n\n              _this.dirty = true;\n\n              _this.reRender();\n\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath); // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\n            // emitted earlier and they will work there\n            // If set it may cause unnecessary twice rerendering\n\n            if (dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        default:\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\n          // 2.\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\n          //       is not provided\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\n          //       else to check if value changed\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n\n            return;\n          }\n\n          break;\n      }\n\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n\n    _this.validateRules = function (options) {\n      var _this$props2 = _this.props,\n          _this$props2$validate = _this$props2.validateFirst,\n          validateFirst = _this$props2$validate === void 0 ? false : _this$props2$validate,\n          messageVariables = _this$props2.messageVariables;\n\n      var _ref2 = options || {},\n          triggerName = _ref2.triggerName;\n\n      var namePath = _this.getNamePath();\n\n      var filteredRules = _this.getRules();\n\n      if (triggerName) {\n        filteredRules = filteredRules.filter(function (rule) {\n          var validateTrigger = rule.validateTrigger;\n\n          if (!validateTrigger) {\n            return true;\n          }\n\n          var triggerList = toArray(validateTrigger);\n          return triggerList.includes(triggerName);\n        });\n      }\n\n      var promise = validateRules(namePath, _this.getValue(), filteredRules, options, validateFirst, messageVariables);\n      _this.dirty = true;\n      _this.validatePromise = promise;\n      _this.errors = [];\n      promise.catch(function (e) {\n        return e;\n      }).then(function () {\n        var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        if (_this.validatePromise === promise) {\n          _this.validatePromise = null;\n          _this.errors = errors;\n\n          _this.reRender();\n        }\n      });\n      return promise;\n    };\n\n    _this.isFieldValidating = function () {\n      return !!_this.validatePromise;\n    };\n\n    _this.isFieldTouched = function () {\n      return _this.touched;\n    };\n\n    _this.isFieldDirty = function () {\n      return _this.dirty;\n    };\n\n    _this.getErrors = function () {\n      return _this.errors;\n    }; // ============================= Child Component =============================\n\n\n    _this.getMeta = function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        name: _this.getNamePath()\n      };\n      return meta;\n    }; // Only return validate child node. If invalidate, will do nothing about field.\n\n\n    _this.getOnlyChild = function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var meta = _this.getMeta();\n\n        return _objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.context)), {\n          isFunction: true\n        });\n      } // Filed element only\n\n\n      var childList = toChildrenArray(children);\n\n      if (childList.length !== 1 || !React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    }; // ============================== Field Control ==============================\n\n\n    _this.getValue = function (store) {\n      var getFieldsValue = _this.context.getFieldsValue;\n\n      var namePath = _this.getNamePath();\n\n      return getValue(store || getFieldsValue(true), namePath);\n    };\n\n    _this.getControlled = function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props3 = _this.props,\n          trigger = _this$props3.trigger,\n          validateTrigger = _this$props3.validateTrigger,\n          getValueFromEvent = _this$props3.getValueFromEvent,\n          normalize = _this$props3.normalize,\n          valuePropName = _this$props3.valuePropName,\n          getValueProps = _this$props3.getValueProps;\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : _this.context.validateTrigger;\n\n      var namePath = _this.getNamePath();\n\n      var _this$context = _this.context,\n          getInternalHooks = _this$context.getInternalHooks,\n          getFieldsValue = _this$context.getFieldsValue;\n\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n          dispatch = _getInternalHooks.dispatch;\n\n      var value = _this.getValue();\n\n      var mergedGetValueProps = getValueProps || function (val) {\n        return _defineProperty({}, valuePropName, val);\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var originTriggerFunc = childProps[trigger];\n\n      var control = _objectSpread({}, childProps, {}, mergedGetValueProps(value)); // Add trigger\n\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        _this.dirty = true;\n        var newValue;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n\n          var rules = _this.props.rules;\n\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    };\n\n    return _this;\n  } // ============================== Subscriptions ==============================\n\n\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var shouldUpdate = this.props.shouldUpdate;\n      var getInternalHooks = this.context.getInternalHooks;\n\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n          registerField = _getInternalHooks2.registerField;\n\n      this.cancelRegisterFunc = registerField(this); // One more render for component in case fields not ready\n\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.destroy = true;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (this.destroy) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n\n      var _this$getOnlyChild = this.getOnlyChild(children),\n          child = _this$getOnlyChild.child,\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n\n      var returnChildNode;\n\n      if (isFunction) {\n        returnChildNode = child;\n      } else if (React.isValidElement(child)) {\n        returnChildNode = React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n\n      return React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n\n  return Field;\n}(React.Component);\n\nField.contextType = FieldContext;\nField.defaultProps = {\n  trigger: 'onChange',\n  valuePropName: 'value'\n};\n\nvar WrapperField = function WrapperField(_ref4) {\n  var name = _ref4.name,\n      isListField = _ref4.isListField,\n      restProps = _objectWithoutProperties(_ref4, [\"name\", \"isListField\"]);\n\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  var key = 'keep';\n\n  if (!isListField) {\n    key = \"_\".concat((namePath || []).join('_'));\n  }\n\n  return React.createElement(Field, Object.assign({\n    key: key,\n    name: namePath\n  }, restProps));\n};\n\nexport default WrapperField;"]},"metadata":{},"sourceType":"module"}