{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { svgBaseProps, warning, useInsertStyles } from '../utils';\nvar Icon = React.forwardRef(function (props, ref) {\n  var className = props.className,\n      Component = props.component,\n      viewBox = props.viewBox,\n      spin = props.spin,\n      rotate = props.rotate,\n      tabIndex = props.tabIndex,\n      onClick = props.onClick,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, [\"className\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\"]);\n\n  warning(Boolean(Component || children), 'Should have `component` prop or `children`.');\n  useInsertStyles();\n  var classString = classNames('anticon', className);\n  var svgClassString = classNames({\n    'anticon-spin': !!spin\n  });\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n\n  var innerSvgProps = _objectSpread(_objectSpread({}, svgBaseProps), {}, {\n    className: svgClassString,\n    style: svgStyle,\n    viewBox: viewBox\n  });\n\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  } // component > children\n\n\n  var renderInnerNode = function renderInnerNode() {\n    if (Component) {\n      return React.createElement(Component, Object.assign({}, innerSvgProps), children);\n    }\n\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && React.isValidElement(children) && React.Children.only(children).type === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return React.createElement(\"svg\", Object.assign({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n\n    return null;\n  };\n\n  var iconTabIndex = tabIndex;\n\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n\n  return React.createElement(\"span\", Object.assign({\n    role: \"img\"\n  }, restProps, {\n    ref: ref,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), renderInnerNode());\n});\nIcon.displayName = 'AntdIcon';\nexport default Icon;","map":{"version":3,"sources":["/home/abefernan/cosmwasm/dApps/node_modules/@ant-design/icons/es/components/Icon.js"],"names":["_objectSpread","_objectWithoutProperties","React","classNames","svgBaseProps","warning","useInsertStyles","Icon","forwardRef","props","ref","className","Component","component","viewBox","spin","rotate","tabIndex","onClick","children","restProps","Boolean","classString","svgClassString","svgStyle","msTransform","concat","transform","undefined","innerSvgProps","style","renderInnerNode","createElement","Object","assign","Children","count","isValidElement","only","type","iconTabIndex","role","displayName"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,eAAhC,QAAuD,UAAvD;AACA,IAAIC,IAAI,GAAGL,KAAK,CAACM,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAChD,MAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;AAAA,MACIC,SAAS,GAAGH,KAAK,CAACI,SADtB;AAAA,MAEIC,OAAO,GAAGL,KAAK,CAACK,OAFpB;AAAA,MAGIC,IAAI,GAAGN,KAAK,CAACM,IAHjB;AAAA,MAIIC,MAAM,GAAGP,KAAK,CAACO,MAJnB;AAAA,MAKIC,QAAQ,GAAGR,KAAK,CAACQ,QALrB;AAAA,MAMIC,OAAO,GAAGT,KAAK,CAACS,OANpB;AAAA,MAOIC,QAAQ,GAAGV,KAAK,CAACU,QAPrB;AAAA,MAQIC,SAAS,GAAGnB,wBAAwB,CAACQ,KAAD,EAAQ,CAAC,WAAD,EAAc,WAAd,EAA2B,SAA3B,EAAsC,MAAtC,EAA8C,QAA9C,EAAwD,UAAxD,EAAoE,SAApE,EAA+E,UAA/E,CAAR,CARxC;;AAUAJ,EAAAA,OAAO,CAACgB,OAAO,CAACT,SAAS,IAAIO,QAAd,CAAR,EAAiC,6CAAjC,CAAP;AACAb,EAAAA,eAAe;AACf,MAAIgB,WAAW,GAAGnB,UAAU,CAAC,SAAD,EAAYQ,SAAZ,CAA5B;AACA,MAAIY,cAAc,GAAGpB,UAAU,CAAC;AAC9B,oBAAgB,CAAC,CAACY;AADY,GAAD,CAA/B;AAGA,MAAIS,QAAQ,GAAGR,MAAM,GAAG;AACtBS,IAAAA,WAAW,EAAE,UAAUC,MAAV,CAAiBV,MAAjB,EAAyB,MAAzB,CADS;AAEtBW,IAAAA,SAAS,EAAE,UAAUD,MAAV,CAAiBV,MAAjB,EAAyB,MAAzB;AAFW,GAAH,GAGjBY,SAHJ;;AAKA,MAAIC,aAAa,GAAG7B,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKI,YAAL,CAAd,EAAkC,EAAlC,EAAsC;AACrEO,IAAAA,SAAS,EAAEY,cAD0D;AAErEO,IAAAA,KAAK,EAAEN,QAF8D;AAGrEV,IAAAA,OAAO,EAAEA;AAH4D,GAAtC,CAAjC;;AAMA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAOe,aAAa,CAACf,OAArB;AACD,GA9B+C,CA8B9C;;;AAGF,MAAIiB,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/C,QAAInB,SAAJ,EAAe;AACb,aAAOV,KAAK,CAAC8B,aAAN,CAAoBpB,SAApB,EAA+BqB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,aAAlB,CAA/B,EAAiEV,QAAjE,CAAP;AACD;;AAED,QAAIA,QAAJ,EAAc;AACZd,MAAAA,OAAO,CAACgB,OAAO,CAACP,OAAD,CAAP,IAAoBZ,KAAK,CAACiC,QAAN,CAAeC,KAAf,CAAqBjB,QAArB,MAAmC,CAAnC,IAAwCjB,KAAK,CAACmC,cAAN,CAAqBlB,QAArB,CAAxC,IAA0EjB,KAAK,CAACiC,QAAN,CAAeG,IAAf,CAAoBnB,QAApB,EAA8BoB,IAA9B,KAAuC,KAAtI,EAA6I,iDAAiD,8CAA9L,CAAP;AACA,aAAOrC,KAAK,CAAC8B,aAAN,CAAoB,KAApB,EAA2BC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,aAAlB,EAAiC;AACjEf,QAAAA,OAAO,EAAEA;AADwD,OAAjC,CAA3B,EAEHK,QAFG,CAAP;AAGD;;AAED,WAAO,IAAP;AACD,GAbD;;AAeA,MAAIqB,YAAY,GAAGvB,QAAnB;;AAEA,MAAIuB,YAAY,KAAKZ,SAAjB,IAA8BV,OAAlC,EAA2C;AACzCsB,IAAAA,YAAY,GAAG,CAAC,CAAhB;AACD;;AAED,SAAOtC,KAAK,CAAC8B,aAAN,CAAoB,MAApB,EAA4BC,MAAM,CAACC,MAAP,CAAc;AAC/CO,IAAAA,IAAI,EAAE;AADyC,GAAd,EAEhCrB,SAFgC,EAErB;AACZV,IAAAA,GAAG,EAAEA,GADO;AAEZO,IAAAA,QAAQ,EAAEuB,YAFE;AAGZtB,IAAAA,OAAO,EAAEA,OAHG;AAIZP,IAAAA,SAAS,EAAEW;AAJC,GAFqB,CAA5B,EAOHS,eAAe,EAPZ,CAAP;AAQD,CA9DU,CAAX;AA+DAxB,IAAI,CAACmC,WAAL,GAAmB,UAAnB;AACA,eAAenC,IAAf","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { svgBaseProps, warning, useInsertStyles } from '../utils';\nvar Icon = React.forwardRef(function (props, ref) {\n  var className = props.className,\n      Component = props.component,\n      viewBox = props.viewBox,\n      spin = props.spin,\n      rotate = props.rotate,\n      tabIndex = props.tabIndex,\n      onClick = props.onClick,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, [\"className\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\"]);\n\n  warning(Boolean(Component || children), 'Should have `component` prop or `children`.');\n  useInsertStyles();\n  var classString = classNames('anticon', className);\n  var svgClassString = classNames({\n    'anticon-spin': !!spin\n  });\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n\n  var innerSvgProps = _objectSpread(_objectSpread({}, svgBaseProps), {}, {\n    className: svgClassString,\n    style: svgStyle,\n    viewBox: viewBox\n  });\n\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  } // component > children\n\n\n  var renderInnerNode = function renderInnerNode() {\n    if (Component) {\n      return React.createElement(Component, Object.assign({}, innerSvgProps), children);\n    }\n\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && React.isValidElement(children) && React.Children.only(children).type === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return React.createElement(\"svg\", Object.assign({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n\n    return null;\n  };\n\n  var iconTabIndex = tabIndex;\n\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n\n  return React.createElement(\"span\", Object.assign({\n    role: \"img\"\n  }, restProps, {\n    ref: ref,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), renderInnerNode());\n});\nIcon.displayName = 'AntdIcon';\nexport default Icon;"]},"metadata":{},"sourceType":"module"}